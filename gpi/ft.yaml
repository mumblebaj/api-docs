{
  "openapi" : "3.0.2",
  "info": {
    "title": "gpi API Payment Transactions",
    "description": "Retrieve status and payment events from the tracker\n\n*v6.0.0 Release Notes*\n\n* Introduction of new element MasterUetr and Subuetr both at transaction level as well as at payment event level to support the split payment process (see FIT rulebook for more information)\n* Introduction of new element named skipped indicator at transaction level which indicates that there are no payment events present due to schema compliance issues in payment messages involved in the transation.\n* Introduction of new code value SPLI in the Service level element (payment event level) in order to support the split payments process (see FIT rulebook for more information)\n* TransactionStatus, TransactionStatusDate, TransactionStatusReason, RejectReturnReason are replaced by EventStatus, EventStatusDate, EventStatusReason and EventRejectReturnReason respectively to clearly distinguish between those elements at payment event level and comparable elements at the transaction level of the GET API\n* Introduction of new element named TrackedMessageIdentification which may be present in the payment event related to a pacs.004 return that is being tracked and that does not contain an original instruction identification since the return is following a different route than the original underlying payment. The TrackedMessageIdentification allows in such case a better reconciliation between the pacs.004 and its related payment event. More information on this element in the rulebook sections related to returns\n* This contract does no longer contain the PUT Cancel Transaction and the PUT Transaction Cancellation Status APIs as a separate v6 contract has been created for those. Note that the v6 GET APIs in this contract still allow the user to obtain Stop and Recall information but it is recommended to use the GET v6 APIs in the specific Stop and Recall contract instead.\n* Introduction of new elements named TechnicalSender and TechnicalReceiver at payment event level that will be present for tracked pacs messages and reflect the technical header sender and receiver of the message. In the V-Shape MI context, these fields will allow to distinguish between a first leg from the bank to the MI and the second leg from the MI to the receiving bank.\n* Introduction of new element named Purpose Code which could be present with the value DEBT in case it is present in a pacs.009 settling charges payable by the debtor in relation to an underlying customer credit transfer (see FIT rulebook for more information)\n* Tracker Event Type RFTS which was missing in the enum in v5 has been added.\n* Last Update Date Time at Payment Event level was replaced by Event Creation Date Time\n* Introduction of new element named DebtorAccount. This element may be used in future but is conditional on approval of the necessary data access approvals\n",
    "contact": {
      "name": "Settlement and SWIFT",
      "email": "DL-PPHITDevelopment@fnb.co.za"
    },
    "version": "6.0.0",
    "license": {
      "name": "API Restricted License",
      "url": "https://www.swift.com/file/56776/download?token=8w8DC4eF"
    }
  },
  "servers" : [ {
    "url" : "https://pepv3-{environment}.fnb.co.za:{port}",
    "variables" : {
      "environment" : {
        "default" : "dev",
        "enum" : [ "dev", "int", "qa", "stress", "prod" ]
      },
      "port" : {
        "default" : "443",
        "enum" : [ "443", "8443" ]
      }
    },
    "description" : "PEPv3 Server Details"
  } ],
  "security" : [ {
    "Authorization" : [ ]
  } ],
  "paths" : {
    "/swiftapigw/gpi/fetch-transactions/v6" : {
      "post" : {
        "tags" : [ "Get Payment Transaction Details" ],
        "summary" : "Get Payment Transaction Details.",
        "description" : "This API is a payment query to get detailed information regarding a given payment. It requires the UETR to be known.",
        "operationId" : "getPaymentTransactionDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XRequestID"
        }, {
          "$ref" : "#/components/parameters/XCorrelationID"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/FetchTransactions"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Includes elements included in the response to a ReadPaymentTransactionDetailsRequest.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items": {
                        "$ref": "#/components/schemas/PaymentTransaction149"
                      }
                    }
                  }
                },
                "examples": {
                  "payment_transaction_details_CCT_transaction": {
                    "$ref": "#/components/examples/payment_transaction_details_CCT_transaction"
                  },
                  "payment_transaction_details_CCT_transaction_being_returned": {
                    "$ref": "#/components/examples/payment_transaction_details_CCT_transaction_being_returned"
                  },
                  "payment_transaction_details_FIT_transaction_being_split_masteruetr_view_SR2024_implementation": {
                    "$ref": "#/components/examples/payment_transaction_details_FIT_transaction_being_split_masteruetr_view_SR2024_implementation"
                  },
                  "payment_transaction_details_FIT_transaction_being_split_masteruetr_view_future_implementation": {
                    "$ref": "#/components/examples/payment_transaction_details_FIT_transaction_being_split_masteruetr_view_future_implementation"
                  },
                  "payment_transaction_details_FIT_transaction_being_split_subuetr_view": {
                    "$ref": "#/components/examples/payment_transaction_details_FIT_transaction_being_split_subuetr_view"
                  },
                  "payment_transaction_details_without_payment_events": {
                    "$ref": "#/components/examples/payment_transaction_details_without_payment_events"
                  },
                  "payment_transaction_details_containing_invalid_payment_event": {
                    "$ref": "#/components/examples/payment_transaction_details_containing_invalid_payment_event"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/defaultError"
                },
                "examples" : {
                  "invalid_request" : {
                    "$ref" : "#/components/examples/invalid_request"
                  },
                  "missing_mandatory_field" : {
                    "$ref" : "#/components/examples/missing_mandatory_field"
                  },
                  "invalid_rbac" : {
                    "$ref" : "#/components/examples/invalid_rbac"
                  },
                  "request_malformed" : {
                    "$ref" : "#/components/examples/request_malformed"
                  },
                  "unknown_uetr" : {
                    "$ref" : "#/components/examples/unknown_uetr"
                  },
                  "from_authorization_failure" : {
                    "$ref" : "#/components/examples/from_authorization_failure"
                  },
                  "no_result_found" : {
                    "$ref" : "#/components/examples/no_result_found"
                  },
                  "resource_not_exist" : {
                    "$ref" : "#/components/examples/resource_not_exist"
                  },
                  "payload_too_large" : {
                    "$ref" : "#/components/examples/payload_too_large"
                  },
                  "too_many_requests" : {
                    "$ref" : "#/components/examples/too_many_requests"
                  },
                  "service_internal_error" : {
                    "$ref" : "#/components/examples/service_internal_error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/swiftapigw/gpi/fetch-changed-transactions/v6" : {
      "post" : {
        "tags" : [ "Get Changed Payment Transactions" ],
        "summary" : "Get Changed Payment Transactions.",
        "description" : "This API is a delta query to get all payment update information starting from a given date and time. This API allows synchronization of a local database with the tracker database. The from_date_time, to_date_time parameters must be passed with each request. Alternatively, for paginated responses, only the parameter next must be passed.",
        "operationId" : "getChangedPaymentTransactions",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XRequestID"
        }, {
          "$ref" : "#/components/parameters/XCorrelationID"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/FetchChangedTransactions"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Includes elements included in response to a ReadChangedPaymentTransactionsRequest.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/ReadChangedPaymentTransactionsResponse2"
                      }
                    }
                  }
                },
                "examples" : {
                  "changed_payment_transactions_1" : {
                    "$ref" : "#/components/examples/changed_payment_transactions_1"
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Internal Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/responses/defaultError"
                },
                "examples" : {
                  "invalid_request" : {
                    "$ref" : "#/components/examples/invalid_request"
                  },
                  "missing_mandatory_field" : {
                    "$ref" : "#/components/examples/missing_mandatory_field"
                  },
                  "invalid_rbac" : {
                    "$ref" : "#/components/examples/invalid_rbac"
                  },
                  "request_malformed" : {
                    "$ref" : "#/components/examples/request_malformed"
                  },
                  "unknown_uetr" : {
                    "$ref" : "#/components/examples/unknown_uetr"
                  },
                  "from_authorization_failure" : {
                    "$ref" : "#/components/examples/from_authorization_failure"
                  },
                  "no_result_found" : {
                    "$ref" : "#/components/examples/no_result_found"
                  },
                  "resource_not_exist" : {
                    "$ref" : "#/components/examples/resource_not_exist"
                  },
                  "payload_too_large" : {
                    "$ref" : "#/components/examples/payload_too_large"
                  },
                  "too_many_requests" : {
                    "$ref" : "#/components/examples/too_many_requests"
                  },
                  "service_internal_error" : {
                    "$ref" : "#/components/examples/service_internal_error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas": {
      "Error": {
        "required": [ "code", "details" ],
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "source": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "user_message": {
            "type": "string"
          },
          "more_info": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "ErrorCode": {
        "type": "string",
        "enum": [ "Sw.gpi.AuthorizationFailure", "Sw.gpi.InvalidRequest", "Sw.gpi.MandatoryFieldMissing", "Sw.gpi.InvalidRBACRole", "SwAP501", "SwAP506", "SwAP507", "INVA/X004", "Sw.gpi.FromAuthorizationFailure", "Sw.gpi.NoResultFound", "Sw.gpi.InternalError" ]
      },
      "FetchTransactions": {
        "required": [ "uetr" ],
        "type": "object",
        "properties": {
          "uetr": {
            "$ref": "#/components/schemas/UUIDv4Identifier"
          }
        }
      },
      "FetchChangedTransactions": {
        "type": "object",
        "properties": {
          "from_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "to_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "maximum_number": {
            "$ref": "#/components/schemas/Max100Int"
          },
          "payment_scenario": {
            "$ref": "#/components/schemas/PaymentScenario"
          },
          "next": {
            "$ref": "#/components/schemas/Max350Text"
          }
        }
      },
      "AccountIdentification58Choice": {
        "type": "object",
        "properties": {
          "iban": {
            "$ref": "#/components/schemas/IBAN2007Identifier"
          },
          "identification": {
            "$ref": "#/components/schemas/Max34Text"
          }
        },
        "additionalProperties": false,
        "description": "Specifies the unique identification of an account as assigned by the account servicer.",
        "oneOf": [
          {
            "required": [ "iban" ]
          },
          {
            "required": [ "identification" ]
          }
        ]
      },
      "ActiveCurrencyAndAmount": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/ActiveCurrencyCode"
          },
          "amount": {
            "maxLength": 19,
            "pattern": "^0*(([0-9]{0,13}\\.[0-9]{1,5})|([0-9]{0,14}\\.[0-9]{1,4})|([0-9]{0,15}\\.[0-9]{1,3})|([0-9]{0,16}\\.[0-9]{1,2})|([0-9]{0,17}\\.[0-9]{1,1})|([0-9]{0,18}\\.)|0*|([0-9]{0,18}))$",
            "type": "string"
          }
        },
        "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      },
      "ActiveCurrencyCode": {
        "pattern": "^[A-Z]{3,3}$",
        "type": "string",
        "description": "> A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
      },
      "ActiveOrHistoricCurrencyAndAmount": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          },
          "amount": {
            "maxLength": 19,
            "pattern": "^0*(([0-9]{0,13}\\.[0-9]{1,5})|([0-9]{0,14}\\.[0-9]{1,4})|([0-9]{0,15}\\.[0-9]{1,3})|([0-9]{0,16}\\.[0-9]{1,2})|([0-9]{0,17}\\.[0-9]{1,1})|([0-9]{0,18}\\.)|0*|([0-9]{0,18}))$",
            "type": "string"
          }
        },
        "description": "A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217."
      },
      "ActiveOrHistoricCurrencyCode": {
        "pattern": "^[A-Z]{3,3}$",
        "type": "string",
        "description": "> A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
      },
      "AmountInconsistency1Code": {
        "type": "string",
        "description": "> Specifies whether the amount information matches the tracker record reference data or not.\n*`ICNS`-Amount information does not match the reference data record.",
        "enum": [ "ICNS" ]
      },
      "BICFIDec2014Identifier": {
        "pattern": "^[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}$",
        "type": "string",
        "description": "Code allocated to a financial institution by the ISO 9362 Registration Authority as described in ISO 9362: 2014 - \"Banking - Banking telecommunication messages - Business identifier code (BIC)\"."
      },
      "BaseOneRate": {
        "maxLength": 12,
        "type": "string",
        "description": "Rate expressed as a decimal, for example, 0.7 is 7/10 and 70%."
      },
      "BranchAndFinancialInstitutionIdentification1Choice": {
        "type": "object",
        "properties": {
          "bicfi": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "name": {
            "$ref": "#/components/schemas/Max140Text"
          }
        },
        "additionalProperties": false,
        "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution.",
        "oneOf": [
          {
            "required": [ "bicfi" ]
          },
          {
            "required": [ "name" ]
          }
        ]
      },
      "BusinessService22Code": {
        "type": "string",
        "description": "Specifies the Service Level agreed between the two MessagingEndpoints under which rules this Business Message is exchanged.\n*`G001`-Indicates the gpi Customer Credit Transfer (CCT) service.\n*`G002`-Indicates the gpi Stop and Recall (SRP) service.\n*`G009`-Indicates the Swift GO service.\n*`G004`-Indicates the gpi Financial Institution Credit Transfer service (FIT).\n*`SPLI`-Indicates the payment is a split payment.\r\n\r\nA split payment is a payment that is split into several payments of lower value, namely with the purpose to comply with maximum amount thresholds applicable to some domestic Payment Market Infrastructures or to reduce counterparty liquidity risk.",
        "enum": [ "G001", "G002", "G009", "G004", "SPLI" ]
      },
      "CancellationIndividualStatus2Code": {
        "type": "string",
        "description": "> Specifies the status of a cancellation request.\n*`CNCL`-Payment is cancelled.\n*`PDCR`-Cancellation request is pending.\n*`RJCR`-Cancellation request is rejected",
        "enum": [ "CNCL", "PDCR", "RJCR" ]
      },
      "CancellationReason8Code": {
        "type": "string",
        "description": "> Provides the possible reasons why a payment is to be cancelled.\n*`DUPL`-Payment is a duplicate of another payment.\n*`AGNT`-Agent in the payment workflow is incorrect.\n*`CURR`-Currency of the payment is incorrect.\n*`CUST`-Cancellation requested by the Debtor.\n*`UPAY`-Payment is not justified.\n*`CUTA`-Cancellation requested because an investigation request has been received and no remediation is possible.\n*`TECH`-Cancellation requested following technical problems resulting in an erroneous transaction.\n*`FRAD`-Cancellation requested following a transaction that was originated fraudulently. The use of the FraudulentOrigin code should be governed by jurisdictions.\n*`COVR`-Cover payment has been cancelled or returned.\n*`AM09`-Amount of the payment is incorrect.",
        "enum": [ "DUPL", "AGNT", "CURR", "CUST", "UPAY", "CUTA", "TECH", "FRAD", "COVR", "AM09" ]
      },
      "CancellationRequest2": {
        "required": [ "cancellation_reason_information" ],
        "type": "object",
        "properties": {
          "cancellation_reason_information": {
            "$ref": "#/components/schemas/CancellationReason8Code"
          },
          "indemnity_agreement": {
            "$ref": "#/components/schemas/PendingPaymentCancellationReason2Code"
          }
        },
        "additionalProperties": false,
        "description": "Contains detailed information from the cancellation request (for example an MT 192 or an MT 199)."
      },
      "CancellationResponse1": {
        "required": [ "investigation_execution_status" ],
        "type": "object",
        "properties": {
          "investigation_execution_status": {
            "$ref": "#/components/schemas/InvestigationExecutionConfirmation5Code"
          },
          "investigation_execution_status_reason": {
            "$ref": "#/components/schemas/InvestigationExecutionStatusReason1"
          }
        },
        "additionalProperties": false,
        "description": "Contains detailed information from the cancellation response (for example an MT 196 or an MT 199)."
      },
      "ChargeBearerType1Code": {
        "type": "string",
        "description": "> Specifies which party(ies) will pay charges due for processing of the instruction.\n*`DEBT`-All transaction charges are to be borne by the debtor.\n*`CRED`-All transaction charges are to be borne by the creditor.\n*`SHAR`-In a credit transfer context, means that transaction charges on the sender side are to be borne by the debtor, transaction charges on the receiver side are to be borne by the creditor. In a direct debit context, means that transaction charges on the sender side are to be borne by the creditor, transaction charges on the receiver side are to be borne by the debtor.\n*`SLEV`-Charges are to be applied following the rules agreed in the service level and/or scheme.",
        "enum": [ "DEBT", "CRED", "SHAR", "SLEV" ]
      },
      "Charges15": {
        "required": [ "agent", "amount" ],
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "agent": {
            "$ref": "#/components/schemas/BranchAndFinancialInstitutionIdentification1Choice"
          }
        },
        "additionalProperties": false,
        "description": "Provides information on the charges related to the payment transaction."
      },
      "CreditTransferTransaction59": {
        "type": "object",
        "properties": {
          "debtor_agent": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "previous_instructing_agent1": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "previous_instructing_agent2": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "previous_instructing_agent3": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "intermediary_agent1": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "intermediary_agent2": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "intermediary_agent3": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "creditor_agent": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          }
        },
        "additionalProperties": false
      },
      "ExternalCashClearingSystem1Code": {
        "maxLength": 3,
        "minLength": 1,
        "type": "string",
        "description": "> Specifies the cash clearing system, as published in an external cash clearing system code list.\r\nExternal code sets can be downloaded from www.iso20022.org."
      },
      "ExternalInvalidEventReason1Code": {
        "maxLength": 9,
        "minLength": 1,
        "type": "string",
        "description": "> Codeset containing the reasons why an event (a message)was invalid in the context of the transaction. "
      },
      "TrackerPaymentStatusReason3Code": {
        "type": "string",
        "description": "Provides reason for reject/return.\n*`AM06`-Below limit.\n*`RC01`-Bank identifier code specified in the message has an incorrect format (formerly IncorrectFormatForRoutingCode).\n*`AC06`-Account specified is blocked, prohibiting posting of transactions against it.\n*`AM07`-Amount specified in message has been blocked by regulatory authorities.\n*`AC04`-Account number specified has been closed on the bank of account's books.\n*`AC07`-Creditor account number closed.\n*`G004`-Credit to the creditor's account is pending as status Originator is waiting for funds provided via a cover.\n*`DUPL`-Payment is a duplicate of another payment.\n*`ERIN`-The Extended Remittance Information (ERI) option is not supported.\n*`FOCR`-Return following a cancellation request.\n*`FR01`-Returned as a result of fraud.\n*`BE01`-Identification of end customer is not consistent with associated account number. (formerly CreditorConsistency).\n*`AC01`-Account number is invalid or missing\n*`AGNT`-Agent in the payment workflow is incorrect.\n*`CURR`-Currency of the payment is incorrect.\n*`AM04`-Amount of funds available to cover specified message amount is insufficient.\n*`FF06`-Category Purpose code is missing or invalid.\n*`RC08`-Routing code not valid for local clearing.\n*`RC04`-Creditor bank identifier is invalid or missing.\n*`AC02`-Debtor account number invalid or missing\r\n\n*`AC13`-Debtor account type is missing or invalid.\n*`RR11`-Invalid or missing identification of a bank proprietary service.\n*`RC03`-Debtor bank identifier is invalid or missing\n*`RC11`-Intermediary Agent is invalid or missing.\n*`FF05`-Local Instrument code is missing or invalid.\n*`RR12`-Invalid or missing identification required within a particular country or payment type.\n*`FF03`-Payment Type Information is missing or invalid. Generic usage if cannot specify Service Level or Local Instrument code.\n*`FF07`-Purpose is missing or invalid.\n*`FF04`-Service Level code is missing or invalid.\n*`RR09`-Structured creditor reference invalid or missing.\n*`BE04`-Specification of creditor's address, which is required for payment, is missing/not correct (formerly IncorrectCreditorAddress).\n*`RR03`-Specification of the creditor's name and/or address needed for regulatory requirements is insufficient or missing.\n*`RR01`-Specification of the debtorâ€™s account or unique identification needed for reasons of regulatory requirements is insufficient or missing\n*`BE07`-Specification of debtor's address, which is required for payment, is missing/not correct.\n*`RR02`-Specification of the debtorâ€™s name and/or address needed for regulatory requirements is insufficient or missing.\r\n\n*`NOAS`-Failed to contact beneficiary.\n*`AM02`-Specific transaction/message amount is greater than allowed maximum.\n*`AM03`-Specific message amount is an non processable currency outside of existing agreement.\n*`NOCM`-Customer account is not compliant with regulatory requirements, for example FICA (in South Africa) or any other regulatory requirements which render an account inactive for certain processing.\n*`MS03`-Reason has not been specified by agent.\n*`MS02`-Reason has not been specified by end customer.\n*`RR05`-Regulatory or Central Bank Reporting information missing, incomplete or invalid.\n*`RR04`-Regulatory Reason \n*`RR07`-Remittance information structure does not comply with rules for payment type.\n*`RR08`-Remittance information truncated to comply with rules for payment type.\n*`CUST`-At request of creditor.\n*`RR06`-Tax information missing, incomplete or invalid.\n*`UPAY`-Payment is not justified.\n*`BE05`-Party who initiated the message is not recognised by the end customer.\n*`AM09`-Amount received is not the amount agreed or expected.\n*`RUTA`-Return following investigation request and no remediation possible.",
        "enum": [ "AM06", "RC01", "AC06", "AM07", "AC04", "AC07", "G004", "DUPL", "ERIN", "FOCR", "FR01", "BE01", "AC01", "AGNT", "CURR", "AM04", "FF06", "RC08", "RC04", "AC02", "AC13", "RR11", "RC03", "RC11", "FF05", "RR12", "FF03", "FF07", "FF04", "RR09", "BE04", "RR03", "RR01", "BE07", "RR02", "NOAS", "AM02", "AM03", "NOCM", "MS03", "MS02", "RR05", "RR04", "RR07", "RR08", "CUST", "RR06", "UPAY", "BE05", "AM09", "RUTA" ]
      },
      "IBAN2007Identifier": {
        "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
        "type": "string",
        "description": "An identifier used internationally by financial institutions to uniquely identify the account of a customer at a financial institution, as described in the latest edition of the international standard ISO 13616: 2007 - \"Banking and related financial services - International Bank Account Number (IBAN)\"."
      },
      "ISODate": {
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",
        "type": "string",
        "description": "A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601."
      },
      "ISONormalisedDateTime": {
        "pattern": "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.[0-9]+)?(?:Z)$",
        "type": "string",
        "description": "an ISODateTime whereby all timezoned dateTime values are UTC."
      },
      "Max100Int": {
        "description": "Indicates the maximum number of transactions to be returned. The maximum value is 100 and Tracker default to this value if higher or no value is indicated",
        "type": "integer",
        "maximum": 100,
        "minimum": 1,
        "example": 50
      },
      "PaymentScenario": {
        "description": "This parameter allows to filter the return value based on a business service\n* CCTR Customer Credit Transfer\n* COVE Cover payments\n* FCTR Financial Institution Credit Transfer\n* FCOV Cover Financial Institution Credit Transfer\n* CTCN Customer Credit Transfer Cancellation\n* FTCN Financial Institution Credit Transfer Cancellation\nPayment scenario CCTR returns tracker event types CTPT, CTSU, RCTP, RCTS.\\n Payment scenario COVE returns tracker event types COPT, COSU, RCOP, RCOS.\\n Payment scenario FCTR returns tracker event types FTPT, FTSU, RFTP, RFTS.\\n Payment scenario FCOV returns tracker event types CFSU, CFPT, RCFP, RCFS.\\n Payment scenario CTCN returns tracker event types CTPT, CTSU, RCTP, RCTS, CTCA, CTTS, CTCR.\\n Payment scenario FTCN returns tracker event types FTPT, FTSU, RFTP, RFTS, FTCA, FTTS, FTCR.",
        "type": "string",
        "enum": [ "CCTR", "COVE", "FCTR", "FCOV", "CTCN", "FTCN" ],
        "example": "COVE"
      },
      "InvestigationExecutionConfirmation5Code": {
        "type": "string",
        "description": "> Provides the status on an investigation.\n*`CNCL`-Used when a requested cancellation is successful.\n*`PDCR`-Used when a requested cancellation is pending.\n*`RJCR`-Used when a requested cancellation has been rejected.",
        "enum": [ "CNCL", "PDCR", "RJCR" ]
      },
      "InvestigationExecutionStatusReason1": {
        "type": "object",
        "properties": {
          "rejected": {
            "$ref": "#/components/schemas/PaymentCancellationRejection3Code"
          },
          "pending": {
            "$ref": "#/components/schemas/PendingPaymentCancellationReason1Code"
          }
        },
        "additionalProperties": false,
        "description": "Provides the reason for a status on the execution of an investigation."
      },
      "Max140Text": {
        "maxLength": 140,
        "minLength": 1,
        "type": "string",
        "description": "Specifies a character string with a maximum length of 140 characters."
      },
      "Max34Text": {
        "maxLength": 34,
        "minLength": 1,
        "type": "string",
        "description": "Specifies a character string with a maximum length of 34 characters."
      },
      "Max350Text": {
        "maxLength": 350,
        "minLength": 1,
        "type": "string",
        "description": "Specifies a character string with a maximum length of 350 characters."
      },
      "Max3Text": {
        "maxLength": 3,
        "minLength": 1,
        "type": "string",
        "description": "Specifies a character string with a maximum length of 3 characters."
      },
      "Max4Text": {
        "maxLength": 4,
        "minLength": 1,
        "type": "string",
        "description": "Specifies a character string with a maximum length of 4 characters."
      },
      "Max50Text": {
        "maxLength": 50,
        "minLength": 1,
        "type": "string",
        "description": "Specifies a character string with a maximum length of 50 characters."
      },
      "Number": {
        "maxLength": 19,
        "type": "string",
        "description": "Number of objects represented as an integer."
      },
      "PaymentCancellationRejection3Code": {
        "type": "string",
        "description": "> Returned when a request for cancellation cannot be executed.\n*`AGNT`-Reported when the cancellation cannot be accepted because of an agent refuses to cancel.\n*`ARDT`-Cancellation not accepted as the transaction has already been returned.\n*`INDM`-Cancellation indemnity is required.\n*`AC04`-Account number specified has been closed on the receiver’s books.\n*`CUST`-Reported when the cancellation cannot be accepted because of a customer decision (Creditor).\n*`AM04`-Amount of funds available to cover specified message amount is insufficient.\n*`LEGL`-Reported when the cancellation cannot be accepted because of regulatory rules.\n*`NOAS`-No response from beneficiary (to the cancellation request).\n*`NOOR`-Original transaction (subject to cancellation) never received.",
        "enum": [ "AGNT", "ARDT", "INDM", "AC04", "CUST", "AM04", "LEGL", "NOAS", "NOOR" ]
      },
      "PaymentCancellationStatusReason2Code": {
        "type": "string",
        "description": "> Provides status reasons with regards to the cancellation of the payment.\n*`S004`-Stop and recall request forwarded to processing/last agent and delivery acknowledgement received.\n*`S003`-Stop and recall request forwarded to processing/last agent but delivery acknowledgement not received.\n*`S002`-Payment instruction stopped because the UETR was cancelled.\n*`S000`-Stop and recall request sent to the tracking system.\n*`S001`-Stop and recall request added to cancellation list.",
        "enum": [ "S004", "S003", "S002", "S000", "S001" ]
      },
      "PaymentEvent15": {
        "required": [ "event_creation_date_time", "from", "message_name_identification", "network_reference", "sender_acknowledgement_receipt_date_time", "to", "tracker_event_type", "valid" ],
        "type": "object",
        "properties": {
          "network_reference": {
            "$ref": "#/components/schemas/Max50Text"
          },
          "message_name_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax16Text"
          },
          "service_level": {
            "$ref": "#/components/schemas/BusinessService22Code"
          },
          "tracker_event_type": {
            "$ref": "#/components/schemas/TrackerEventType4Code"
          },
          "valid": {
            "$ref": "#/components/schemas/TrueFalseIndicator"
          },
          "invalidity_reason": {
            "$ref": "#/components/schemas/ExternalInvalidEventReason1Code"
          },
          "invalidity_description": {
            "$ref": "#/components/schemas/RestrictedFINXMax350Text"
          },
          "event_status": {
            "$ref": "#/components/schemas/TransactionIndividualStatus5Code"
          },
          "event_status_date": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "event_status_reason": {
            "$ref": "#/components/schemas/TransactionIndividualStatusReason1Code"
          },
          "event_reject_return_reason": {
            "$ref": "#/components/schemas/TrackerPaymentStatusReason3Code"
          },
          "amount_inconsistency": {
            "$ref": "#/components/schemas/AmountInconsistency1Code"
          },
          "instruction_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax35Text"
          },
          "end_to_end_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax35Text"
          },
          "tracked_message_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax35Text"
          },
          "master_uetr": {
            "$ref": "#/components/schemas/UUIDv4Identifier"
          },
          "sub_uetr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUIDv4Identifier"
            }
          },
          "case_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax16Text"
          },
          "original_instruction_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax35Text"
          },
          "assignment_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax16Text"
          },
          "cancellation_request_details": {
            "$ref": "#/components/schemas/CancellationRequest2"
          },
          "cancellation_response_details": {
            "$ref": "#/components/schemas/CancellationResponse1"
          },
          "cancellation_request_tracking_status": {
            "$ref": "#/components/schemas/PaymentCancellationStatusReason2Code"
          },
          "tracker_informing_party": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "settlement_method": {
            "$ref": "#/components/schemas/SettlementMethod1Code"
          },
          "clearing_system": {
            "$ref": "#/components/schemas/ExternalCashClearingSystem1Code"
          },
          "instructed_agent": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "technical_sender": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "technical_receiver": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "interbank_settlement_date": {
            "$ref": "#/components/schemas/ISODate"
          },
          "instructed_amount": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyAndAmount"
          },
          "interbank_settlement_amount": {
            "$ref": "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "source_currency": {
            "$ref": "#/components/schemas/ActiveCurrencyCode"
          },
          "target_currency": {
            "$ref": "#/components/schemas/ActiveCurrencyCode"
          },
          "exchange_rate": {
            "$ref": "#/components/schemas/BaseOneRate"
          },
          "charge_bearer": {
            "$ref": "#/components/schemas/ChargeBearerType1Code"
          },
          "charges_information": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Charges15"
            }
          },
          "confirmed_date": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "confirmed_amount": {
            "$ref": "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "remaining_to_be_confirmed_amount": {
            "$ref": "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "previously_confirmed_amount": {
            "$ref": "#/components/schemas/ActiveCurrencyAndAmount"
          },
          "purpose": {
            "$ref": "#/components/schemas/Max4Text"
          },
          "from": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "to": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "instructing_reimbursement_agent": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "previous_instructing_agent1": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "previous_instructing_agent2": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "previous_instructing_agent3": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "intermediary_agent1": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "intermediary_agent2": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "intermediary_agent3": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "debtor": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "debtor_account": {
            "$ref": "#/components/schemas/AccountIdentification58Choice"
          },
          "debtor_agent": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "creditor_agent": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "creditor": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "creditor_account": {
            "$ref": "#/components/schemas/AccountIdentification58Choice"
          },
          "underlying_customer_credit_transfer": {
            "$ref": "#/components/schemas/CreditTransferTransaction59"
          },
          "sender_acknowledgement_receipt_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "received_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "update_payment": {
            "$ref": "#/components/schemas/Max50Text"
          },
          "duplicate_message_reference": {
            "$ref": "#/components/schemas/Max50Text"
          },
          "copied_business_service": {
            "$ref": "#/components/schemas/Max3Text"
          },
          "event_creation_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          }
        },
        "additionalProperties": false,
        "description": "Contains information coming from the related payment instruction (specified for example in the related MT 199 or MT 103), or the StatusConfirmationUpdate."
      },
      "PendingPaymentCancellationReason1Code": {
        "type": "string",
        "description": "> Provides the reason as to why a payment cancellation request is pending.\n*`INDM`-Cancellation indemnity is required. \r\n\n*`PTNA`-The cancellation has been forwarded to the next agent in the payment chain.\n*`RQDA`-Creditor authorisation is required to return the payment.",
        "enum": [ "INDM", "PTNA", "RQDA" ]
      },
      "PendingPaymentCancellationReason2Code": {
        "type": "string",
        "description": "> Provides the reason as to why a payment cancellation request is pending.\n*`INDM`-Cancellation indemnity is required. \r\n",
        "enum": [ "INDM" ]
      },
      "ReadChangedPaymentTransactionsResponse2": {
        "required": [ "payment_transaction" ],
        "type": "object",
        "properties": {
          "payment_transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentTransaction149"
            }
          },
          "next": {
            "$ref": "#/components/schemas/Max350Text"
          }
        },
        "additionalProperties": false,
        "description": "Includes elements included in response to a ReadChangedPaymentTransactionsRequest."
      },
      "PaymentTransaction149": {
        "required": [ "events_skipped", "initiation_date_time", "last_update_date_time", "transaction_status", "uetr" ],
        "type": "object",
        "properties": {
          "uetr": {
            "$ref": "#/components/schemas/UUIDv4Identifier"
          },
          "master_uetr": {
            "$ref": "#/components/schemas/UUIDv4Identifier"
          },
          "sub_uetr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UUIDv4Identifier"
            }
          },
          "transaction_status": {
            "$ref": "#/components/schemas/TransactionIndividualStatus5Code"
          },
          "transaction_status_reason": {
            "$ref": "#/components/schemas/TransactionIndividualStatusReason1Code"
          },
          "reject_return_reason": {
            "$ref": "#/components/schemas/TrackerPaymentStatusReason3Code"
          },
          "transaction_cancellation_status": {
            "$ref": "#/components/schemas/CancellationIndividualStatus2Code"
          },
          "cases": {
            "$ref": "#/components/schemas/Number"
          },
          "initiation_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "completion_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "last_update_date_time": {
            "$ref": "#/components/schemas/ISONormalisedDateTime"
          },
          "events_skipped": {
            "$ref": "#/components/schemas/TrueFalseIndicator"
          },
          "payment_event": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentEvent15"
            }
          }
        },
        "additionalProperties": false,
        "description": "Includes elements included in the response to a ReadPaymentTransactionDetailsRequest."
      },
      "RestrictedFINXMax16Text": {
        "maxLength": 16,
        "minLength": 1,
        "pattern": "^([0-9a-zA-Z\\-\\?:\\(\\)\\.,'\\+ ]([0-9a-zA-Z\\-\\?:\\(\\)\\.,'\\+ ]*(/[0-9a-zA-Z\\-\\?:\\(\\)\\.,'\\+ ])?)*)$",
        "type": "string",
        "description": "Specifies a character string with a maximum length of 16 characters. It has a pattern that disables the use of characters that is not part of the character set X, that is, that is not a-z A-Z / - ? : ( ) . , ‘ + , and disable the use of slash \"/\" at the beginning and end of line and double slash \"//\" within the line."
      },
      "RestrictedFINXMax350Text": {
        "maxLength": 350,
        "minLength": 1,
        "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.\\n\\r,'\\+ ]{1,350}$",
        "type": "string",
        "description": "Specifies a character string with a maximum length of 350 characters limited to character set X, that is, a-z A-Z / - ? : ( ) . , ‘ + ."
      },
      "RestrictedFINXMax35Text": {
        "maxLength": 35,
        "minLength": 1,
        "pattern": "^[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ ]{1,35}$",
        "type": "string",
        "description": "Specifies a character string with a maximum length of 35 characters limited to character set X, that is, a-z A-Z / - ? : ( ) . , ‘ + ."
      },
      "SettlementMethod1Code": {
        "type": "string",
        "description": "> Specifies the method used to settle the credit transfer instruction.\n*`INDA`-Settlement is done by the agent instructed to execute a payment instruction.\n*`INGA`-Settlement is done by the agent instructing and forwarding the payment to the next party in the payment chain.\n*`COVE`-Settlement is done through a cover payment.\n*`CLRG`-Settlement is done through a payment clearing system.",
        "enum": [ "INDA", "INGA", "COVE", "CLRG" ]
      },
      "TrackerEventType4Code": {
        "required": [ "assignment_identification", "case_identification", "from", "investigation_execution_status", "service_level", "tracker_informing_party" ],
        "type": "string",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "service_level": {
            "$ref": "#/components/schemas/BusinessService22Code"
          },
          "assignment_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax16Text"
          },
          "case_identification": {
            "$ref": "#/components/schemas/RestrictedFINXMax16Text"
          },
          "investigation_execution_status": {
            "$ref": "#/components/schemas/InvestigationExecutionConfirmation5Code"
          },
          "investigation_execution_status_reason": {
            "$ref": "#/components/schemas/InvestigationExecutionStatusReason1"
          },
          "tracker_informing_party": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          },
          "instructed_agent": {
            "$ref": "#/components/schemas/BICFIDec2014Identifier"
          }
        },
        "description": "> Indicates the type of payment event.\n*`COPT`-Indicates a cover payment.\n*`CTCA`-Indicates a cancellation request related to a credit transfer payment.\n*'FTCA' -Indicates a cancellation request related to a financial institution credit transfer payment.\n*'FTTS'-Indicates the tracking status of a cancellation request related to a financial institution credit transfer payment.\n*'FTCR'-Indicates a cancellation response related to a financial institution credit transfer payment.\n*`CTTS`-Indicates the tracking status of a cancellation request related to a credit transfer payment.\n*`CTCR`-Indicates a cancellation response related to a credit transfer payment.\n*`CTPT`-Indicates a customer credit transfer payment.\n*`FTPT`-Indicates a Financial Institution Credit Transfer Payment.\n*`COSU`-Indicates a cover payment status update.\n*`CTSU`-Indicates a customer credit transfer payment status update.\n*`FTSU`-Indicates a Financial Institution Credit Transfer Payment status update.\n*`RCTP`-Indicates a return of a Customer Credit Transfer Payment.\n*`RCOP`-Indicates a return of a Cover Payment.\t\t\n*`RFTP`-Indicates a return of a Financial Institution Credit Transfer Payment.\n*`RCOS`-Indicates a status update related to a return of a Cover Payment.\n*`RCTS`-Indicates a status update related to a return of a Customer Credit Transfer Payment.\n*`RFTS`-Indicates a status update related to a return of a Financial Institution Credit Transfer Payment.*`CFPT`-Indicates a cover of a Financial Institution Credit Transfer Payment.\n*`RCFP` -Indicates a return of a cover of a Financial Institution Credit Transfer Payment.\n*`CFSU`-Indicates a status update related to a cover of a Financial Institution Credit Transfer Payment.\n*`RCFS` -Indicates a status update related to a return of a cover of a Financial Institution Credit Transfer Payment.",
        "enum": [ "COPT", "CTCA", "CTTS", "CTCR", "FTCA", "FTTS", "FTCR", "CTPT", "FTPT", "COSU", "CTSU", "FTSU", "RCTP", "RCOP", "RFTP", "RCOS", "RCTS", "CFPT", "RCFP", "CFSU", "RCFS", "RFTS" ]
      },
      "TransactionIndividualStatus5Code": {
        "type": "string",
        "description": "> Specifies the status of a single payment transaction.\n*`RJCT`-Payment initiation or individual transaction included in the payment initiation has been rejected.\n*`ACSP`-All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\n*`ACCC`-Settlement on the creditor's account has been completed. ",
        "enum": [ "RJCT", "ACSP", "ACCC" ]
      },
      "TransactionIndividualStatusReason1Code": {
        "type": "string",
        "description": "Contains the reason for the status of a payment transaction.\n*`G002`-In a FIToFI Customer Credit Transfer: Credit to the creditorâ€™s account may not be confirmed same day. Update will follow from the Status Originator.\r\nIn a Financial Institution Credit Transfer with cover: Debit/credit to nostro account may not be confirmed same day or Financial Institution Credit Transfer may not be transferred same day. Update will follow from the Status Originator.\n*`G003`-In a FIToFI Customer Credit Transfer: Credit to creditorâ€™s account is pending receipt of required documents. The Status Originator has requested creditor to provide additional documentation. Update will follow from the Status Originator. \r\nIn a Financial Institution Credit Transfer with cover: Status Originator has requested a previous Agent to provide additional information/correct information. Update will follow from the Status Originator.\n*`G004`-In a FIToFI Customer Credit Transfer: Credit to the creditorâ€™s account is pending, status Originator is waiting for funds provided via a cover. Update will follow from the Status Originator.\n*`G006`-Payment has been delivered to creditor agent without service level.\n*`G005`-Payment has been delivered to creditor agent with service level.\n*`G001`-In an FI To FI Customer Credit Transfer: The Status Originator transferred the payment to the next Agent or to a Market Infrastructure. The payment transfer is not tracked. No further updates will follow from the Status Originator.\r\n\r\nIn a Financial Institution Credit Transfer with cover: The Status Originator performed the account booking and transferred the cover transaction to the next Reimbursement Agent or to a Market Infrastructure. The payment transfer is not tracked. No further updates will follow from the Status Originator.\n*`G000`-In an FI To FI Customer Credit Transfer: The Status Originator transferred the payment to the next Agent or to a Market Infrastructure. The payment transfer is tracked. No further updates will follow from the Status Originator.\r\n\r\nIn a Financial Institution Credit Transfer with cover: The Status Originator performed the account booking and transferred the cover transaction to the next Reimbursement Agent or to a Market Infrastructure. The payment transfer is tracked. No further updates will follow from the Status Originator.",
        "enum": [ "G002", "G003", "G004", "G006", "G005", "G001", "G000" ]
      },

      "TrueFalseIndicator": {
        "type": "boolean",
        "description": "A flag indicating a True or False value."
      },
      "UUIDv4Identifier": {
        "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
        "type": "string",
        "description": "Universally Unique IDentifier (UUID) version 4, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\"."
      }
    },
    "responses" : {
      "defaultError" : {
        "description" : "Unexpected Error"
      }
    },
    "parameters" : {
      "XRequestID" : {
        "name" : "X-Request-ID",
        "in" : "header",
        "schema" : {
          "$ref" : "#/components/schemas/UUIDv4Identifier"
        },
        "required" : true
      },
      "XCorrelationID" : {
        "name" : "X-Correlation-ID",
        "in" : "header",
        "schema" : {
          "$ref" : "#/components/schemas/UUIDv4Identifier"
        },
        "required" : true
      }
    },
    "examples": {
      "payment_transaction_details_CCT_transaction": {
        "summary": "GET contains a CCT transaction",
        "value": {
          "data": [
            {
              "uetr": "3e8d2edb-88cb-47e6-9105-1b0d903c28d8",
              "transaction_status": "ACCC",
              "initiation_date_time": "2024-03-16T13:22:45.000Z",
              "completion_date_time": "2024-03-16T18:22:45.000Z",
              "last_update_date_time": "2024-03-16T18:22:45.000Z",
              "events_skipped": false,
              "payment_event": [
                {
                  "network_reference": "20240316134513436-010000000016",
                  "message_name_identification": "199",
                  "service_level": "G001",
                  "tracker_event_type": "CTSU",
                  "valid": true,
                  "event_status": "ACCC",
                  "instruction_identification": "ABC123",
                  "tracker_informing_party": "BANKBBICXXX",
                  "charges_information": [
                    {
                      "amount": {
                        "currency": "USD",
                        "amount": "50.00"
                      },
                      "agent": {
                        "bicfi": "BANKBBICXXX"
                      }
                    }
                  ],
                  "confirmed_date": "2024-03-16T18:22:45.000Z",
                  "confirmed_amount": {
                    "currency": "USD",
                    "amount": "940"
                  },
                  "from": "BANKBBICXXX",
                  "to": "TRCKCHZ0XXX",
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T18:22:43.000Z",
                  "update_payment": "20240316134316100-010000000015",
                  "event_creation_date_time": "2024-03-16T18:22:45.000Z"
                },
                {
                  "network_reference": "20211125132213436-010000000016",
                  "message_name_identification": "pacs.008.001.08",
                  "service_level": "G001",
                  "tracker_event_type": "CTPT",
                  "valid": true,
                  "event_status": "ACSP",
                  "event_status_date": "2024-03-16T13:22:45.000Z",
                  "event_status_reason": "G000",
                  "instruction_identification": "ABC123",
                  "tracker_informing_party": "BANKABICXXX",
                  "settlement_method": "INDA",
                  "instructed_agent": "BANKBBICXXX",
                  "technical_sender": "BANKABICXXX",
                  "technical_receiver": "BANKBBICXXX",
                  "interbank_settlement_date": "2024-11-25",
                  "instructed_amount": {
                    "currency": "USD",
                    "amount": "1000"
                  },
                  "interbank_settlement_amount": {
                    "currency": "USD",
                    "amount": "990"
                  },
                  "charge_bearer": "CRED",
                  "charges_information": [
                    {
                      "amount": {
                        "currency": "USD",
                        "amount": "10"
                      },
                      "agent": {
                        "bicfi": "BANKABICXXX"
                      }
                    }
                  ],
                  "from": "BANKABICXXX",
                  "to": "BANKBBICXXX",
                  "debtor_agent": "BANKABICXXX",
                  "creditor_agent": "BANKBBICXXX",
                  "sender_acknowledgement_receipt_date_time": "2024-11-25T13:22:45.000Z",
                  "received_date_time": "2024-03-16T13:22:46.000Z",
                  "event_creation_date_time": "2024-03-16T13:22:45.000Z"
                }
              ]
            }
          ]
          
        }
      },
      "payment_transaction_details_CCT_transaction_being_returned": {
        "summary": "GET contains a CCT transaction that is being returned",
        "value": {
          "data": [
            {
              "uetr": "e892e688-cf50-4722-a09d-057275212358",
              "transaction_status": "ACCC",
              "reject_return_reason": "AM06",
              "initiation_date_time": "2024-03-16T13:22:45.000Z",
              "completion_date_time": "2024-03-16T18:00:00.000Z",
              "last_update_date_time": "2024-03-16T18:00:00.000Z",
              "events_skipped": false,
              "payment_event": [
                {
                  "network_reference": "20241125132213436-010000000016",
                  "message_name_identification": "trck.001.001.03",
                  "service_level": "G001",
                  "tracker_event_type": "RCTS",
                  "valid": true,
                  "event_status": "ACCC",
                  "instruction_identification": "Instr123",
                  "tracker_informing_party": "BANKABICXXX",
                  "confirmed_date": "2024-03-16T18:00:00.000Z",
                  "confirmed_amount": {
                    "currency": "USD",
                    "amount": "950"
                  },
                  "from": "BANKABICXXX",
                  "to": "TRCKCHZZXXX",
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T18:00:00.000Z",
                  "update_payment": "20240316134513436-010000000016",
                  "event_creation_date_time": "2024-03-16T18:00:00.000Z"
                },
                {
                  "network_reference": "20241125132213436-010000000016",
                  "message_name_identification": "pacs.004.001.09",
                  "tracker_event_type": "RCTP",
                  "valid": true,
                  "event_status": "ACSP",
                  "event_status_date": "2024-03-16T17:00:00.000Z",
                  "event_status_reason": "G000",
                  "event_reject_return_reason": "AM06",
                  "instruction_identification": "Instr123",
                  "tracker_informing_party": "BANKBBICXXX",
                  "settlement_method": "INDA",
                  "instructed_agent": "BANKABICXXX",
                  "technical_sender": "BANKBBICXXX",
                  "technical_receiver": "BANKABICXXX",
                  "interbank_settlement_date": "2024-03-16",
                  "interbank_settlement_amount": {
                    "currency": "USD",
                    "amount": "950"
                  },
                  "charge_bearer": "SHAR",
                  "from": "BANKBBICXXX",
                  "to": "BANKABICXXX",
                  "debtor_agent": "BANKBBICXXX",
                  "creditor_agent": "BANKABICXXX",
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T17:00:00.000Z",
                  "received_date_time": "2024-03-16T17:00:00.000Z",
                  "event_creation_date_time": "2024-03-16T17:00:00.000Z"
                },
                {
                  "network_reference": "20241125132213436-010000000016",
                  "message_name_identification": "trck.001.001.03",
                  "service_level": "G001",
                  "tracker_event_type": "CTSU",
                  "valid": true,
                  "event_status": "ACCC",
                  "instruction_identification": "Instr123",
                  "tracker_informing_party": "BANKBBICXXX",
                  "confirmed_date": "2024-03-16T16:00:00.000Z",
                  "confirmed_amount": {
                    "currency": "USD",
                    "amount": "950"
                  },
                  "from": "BANKBBICXXX",
                  "to": "TRCKCHZZXXX",
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T16:00:00.000Z",
                  "update_payment": "20240316134513436-010000000016",
                  "event_creation_date_time": "2024-03-16T16:00:00.000Z"
                },
                {
                  "network_reference": "20241125132213436-010000000016",
                  "message_name_identification": "pacs.008.001.08",
                  "service_level": "G001",
                  "tracker_event_type": "CTPT",
                  "valid": true,
                  "event_status": "ACSP",
                  "event_status_date": "2024-03-16T13:22:45.000Z",
                  "event_status_reason": "G000",
                  "tracker_informing_party": "BANKABICXXX",
                  "settlement_method": "INDA",
                  "instructed_agent": "BANKBBICXXX",
                  "technical_sender": "BANKABICXXX",
                  "technical_receiver": "BANKBBICXXX",
                  "interbank_settlement_date": "2024-03-16",
                  "instructed_amount": {
                    "currency": "USD",
                    "amount": "1000"
                  },
                  "interbank_settlement_amount": {
                    "currency": "USD",
                    "amount": "950"
                  },
                  "charge_bearer": "CRED",
                  "charges_information": [
                    {
                      "amount": {
                        "currency": "USD",
                        "amount": "50"
                      },
                      "agent": {
                        "bicfi": "BANKABICXXX"
                      }
                    }
                  ],
                  "from": "BANKABICXXX",
                  "to": "BANKBBICXXX",
                  "debtor_agent": "BANKABICXXX",
                  "creditor_agent": "BANKBBICXXX",
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T13:22:45.000Z",
                  "received_date_time": "2024-03-16T13:22:45.000Z",
                  "event_creation_date_time": "2024-03-16T13:22:45.000Z"
                }
              ]
            }
          ]
          
        }
      },
      "payment_transaction_details_FIT_transaction_being_split_masteruetr_view_SR2024_implementation": {
        "summary": "GET contains a FIT transaction that is being split (masteruetr view; see also example below) based on SR2024 implementation. Please note that this example will no longer be relevant when the partial credit elements will be supported for gFIT master uetr transactions.",
        "value": {
          "data": [
            {
              "uetr": "5557ddd4-31f7-4351-92bc-f79448aa8915",
              "sub_uetr": [
                "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
                "3e8d2edb-88cb-47e6-9105-1b0d903c28d8"
              ],
              "transaction_status": "ACCC",
              "initiation_date_time": "2024-03-16T09:00:00.000Z",
              "completion_date_time": "2024-03-16T19:00:00.000Z",
              "last_update_date_time": "2024-03-16T19:00:00.000Z",
              "events_skipped": false,
              "payment_event": [
                {
                  "network_reference": "20241125132213436-010000000016",
                  "message_name_identification": "trck.001.001.03",
                  "service_level": "SPLI",
                  "tracker_event_type": "FTSU",
                  "valid": true,
                  "event_status": "ACCC",
                  "instruction_identification": "Instr5678",
                  "end_to_end_identification": "End456",
                  "sub_uetr": [
                    "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
                    "3e8d2edb-88cb-47e6-9105-1b0d903c28d8"
                  ],
                  "tracker_informing_party": "BANKCBICXXX",
                  "confirmed_date": "2024-03-16T19:00:00.000Z",
                  "confirmed_amount": {
                    "currency": "CHF",
                    "amount": "100000000"
                  },
                  "from": "TRCKCHZZXXX",
                  "to": "TRCKCHZZXXX",
                  "creditor": "BANKDBICXXX",
                  "creditor_account": {
                    "identification": "Account123"
                  },
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T19:00:00.000Z",
                  "update_payment": "20241126132213436-010000000016",
                  "event_creation_date_time": "2024-03-16T19:00:00.000Z"
                },
                {
                  "network_reference": "20241126132213736-010000000016",
                  "message_name_identification": "pacs.009.001.08",
                  "service_level": "G004",
                  "tracker_event_type": "FTPT",
                  "valid": true,
                  "event_status": "ACSP",
                  "event_status_date": "2024-03-16T09:00:00.000Z",
                  "event_status_reason": "G000",
                  "instruction_identification": "Instr8564",
                  "end_to_end_identification": "End456",
                  "tracker_informing_party": "BANKABICXXX",
                  "settlement_method": "INDA",
                  "instructed_agent": "BANKBBICXXX",
                  "technical_sender": "BANKABICXXX",
                  "technical_receiver": "BANKBBICXXX",
                  "interbank_settlement_date": "2024-03-16",
                  "interbank_settlement_amount": {
                    "currency": "CHF",
                    "amount": "100000000"
                  },
                  "from": "BANKABICXXX",
                  "to": "BANKBBICXXX",
                  "debtor": "BANKABICXXX",
                  "debtor_agent": "BANKBBICXXX",
                  "creditor_agent": "BANKCBICXXX",
                  "creditor": "BANKDBICXXX",
                  "creditor_account": {
                    "identification": "Account123"
                  },
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T09:00:00.000Z",
                  "received_date_time": "2024-03-16T09:01:00.000Z",
                  "event_creation_date_time": "2024-03-16T09:00:00.000Z"
                }
              ]
            }
          ]
          
        }
      },
      "payment_transaction_details_FIT_transaction_being_split_masteruetr_view_future_implementation": {
        "summary": "GET contains a FIT transaction that is being split (masteruetr view; see also example below). Please note that this example is for future implemenatation when the partial credit elements will be supported for gFIT master uetr transactions.",
        "value": {
          "data": [
            {
              "uetr": "5557ddd4-31f7-4351-92bc-f79448aa8915",
              "sub_uetr": [
                "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
                "3e8d2edb-88cb-47e6-9105-1b0d903c28d8"
              ],
              "transaction_status": "ACCC",
              "initiation_date_time": "2024-03-16T09:00:00.000Z",
              "completion_date_time": "2024-03-16T19:00:00.000Z",
              "last_update_date_time": "2024-03-16T19:00:00.000Z",
              "events_skipped": false,
              "payment_event": [
                {
                  "network_reference": "20241125132213436-010000000016",
                  "message_name_identification": "trck.001.001.03",
                  "service_level": "SPLI",
                  "tracker_event_type": "FTSU",
                  "valid": true,
                  "event_status": "ACCC",
                  "instruction_identification": "Instr5678",
                  "end_to_end_identification": "End456",
                  "sub_uetr": [
                    "99ad751a-0ed8-4730-90bc-b9acfd58d29f"
                  ],
                  "tracker_informing_party": "BANKCBICXXX",
                  "confirmed_date": "2024-03-16T19:00:00.000Z",
                  "confirmed_amount": {
                    "currency": "CHF",
                    "amount": "40000000"
                  },
                  "previously_confirmed_amount": {
                    "currency": "CHF",
                    "amount": "60000000"
                  },
                  "from": "TRCKCHZZXXX",
                  "to": "TRCKCHZZXXX",
                  "creditor": "BANKDBICXXX",
                  "creditor_account": {
                    "identification": "Account123"
                  },
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T19:00:00.000Z",
                  "update_payment": "20241126132213436-010000000016",
                  "event_creation_date_time": "2024-03-16T19:00:00.000Z"
                },
                {
                  "network_reference": "20241125132219436-010000000017",
                  "message_name_identification": "trck.001.001.03",
                  "service_level": "SPLI",
                  "tracker_event_type": "FTSU",
                  "valid": true,
                  "event_status": "ACCC",
                  "instruction_identification": "Instr9999",
                  "end_to_end_identification": "End456",
                  "sub_uetr": [
                    "3e8d2edb-88cb-47e6-9105-1b0d903c28d8"
                  ],
                  "tracker_informing_party": "BANKCBICXXX",
                  "confirmed_date": "2024-03-16T18:00:00.000Z",
                  "confirmed_amount": {
                    "currency": "CHF",
                    "amount": "60000000"
                  },
                  "remaining_to_be_confirmed_amount": {
                    "currency": "CHF",
                    "amount": "40000000"
                  },
                  "from": "TRCKCHZZXXX",
                  "to": "TRCKCHZZXXX",
                  "creditor": "BANKDBICXXX",
                  "creditor_account": {
                    "identification": "Account123"
                  },
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T18:00:00.000Z",
                  "update_payment": "20241126132213436-010000000016",
                  "event_creation_date_time": "2024-03-16T18:00:00.000Z"
                },
                {
                  "network_reference": "20241126132213736-010000000016",
                  "message_name_identification": "pacs.009.001.08",
                  "service_level": "G004",
                  "tracker_event_type": "FTPT",
                  "valid": true,
                  "event_status": "ACSP",
                  "event_status_date": "2024-03-16T09:00:00.000Z",
                  "event_status_reason": "G000",
                  "instruction_identification": "Instr8564",
                  "end_to_end_identification": "End456",
                  "tracker_informing_party": "BANKABICXXX",
                  "settlement_method": "INDA",
                  "instructed_agent": "BANKBBICXXX",
                  "technical_sender": "BANKABICXXX",
                  "technical_receiver": "BANKBBICXXX",
                  "interbank_settlement_date": "2024-03-16",
                  "interbank_settlement_amount": {
                    "currency": "CHF",
                    "amount": "100000000"
                  },
                  "from": "BANKABICXXX",
                  "to": "BANKBBICXXX",
                  "debtor": "BANKABICXXX",
                  "debtor_agent": "BANKBBICXXX",
                  "creditor_agent": "BANKCBICXXX",
                  "creditor": "BANKDBICXXX",
                  "creditor_account": {
                    "identification": "Account123"
                  },
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T09:00:00.000Z",
                  "received_date_time": "2024-03-16T09:01:00.000Z",
                  "event_creation_date_time": "2024-03-16T09:00:00.000Z"
                }
              ]
            }
          ]
          
        }
      },
      "payment_transaction_details_FIT_transaction_being_split_subuetr_view": {
        "summary": "GET contains a FIT transaction that is being split (subuetr view; see also example above)",
        "value": {
          "data": [
            {
              "uetr": "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
              "master_uetr": "5557ddd4-31f7-4351-92bc-f79448aa8915",
              "transaction_status": "ACCC",
              "initiation_date_time": "2024-03-16T10:00:00.000Z",
              "completion_date_time": "2024-03-16T19:00:00.000Z",
              "last_update_date_time": "2024-03-16T19:00:00.000Z",
              "events_skipped": false,
              "payment_event": [
                {
                  "network_reference": "20241126132213736-010000000022",
                  "message_name_identification": "trck.001.001.03",
                  "service_level": "SPLI",
                  "tracker_event_type": "FTSU",
                  "valid": true,
                  "event_status": "ACCC",
                  "instruction_identification": "Instr5678",
                  "end_to_end_identification": "End456",
                  "tracker_informing_party": "BANKCBICXXX",
                  "confirmed_date": "2024-03-16T19:00:00.000Z",
                  "confirmed_amount": {
                    "currency": "CHF",
                    "amount": "60000000"
                  },
                  "from": "BANKCBICXXX",
                  "to": "TRCKCHZZXXX",
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T19:00:00.000Z",
                  "update_payment": "20241126132213736-010000000024",
                  "event_creation_date_time": "2024-03-16T19:00:00.000Z"
                },
                {
                  "network_reference": "20241126132213736-010000000024",
                  "message_name_identification": "pacs.009.001.08",
                  "service_level": "G004",
                  "tracker_event_type": "FTPT",
                  "valid": true,
                  "event_status": "ACSP",
                  "event_status_date": "2024-03-16T09:00:00.000Z",
                  "event_status_reason": "G000",
                  "instruction_identification": "Instr5678",
                  "end_to_end_identification": "End456",
                  "tracker_informing_party": "BANKBBICXXX",
                  "settlement_method": "INDA",
                  "instructed_agent": "BANKCBICXXX",
                  "technical_sender": "BANKBBICXXX",
                  "technical_receiver": "BANKCBICXXX",
                  "interbank_settlement_date": "2024-03-16",
                  "interbank_settlement_amount": {
                    "currency": "CHF",
                    "amount": "40000000"
                  },
                  "from": "BANKBBICXXX",
                  "to": "BANKCBICXXX",
                  "debtor": "BANKABICXXX",
                  "debtor_agent": "BANKBBICXXX",
                  "creditor_agent": "BANKCBICXXX",
                  "creditor": "BANKDBICXXX",
                  "creditor_account": {
                    "identification": "Account123"
                  },
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T09:00:00.000Z",
                  "received_date_time": "2024-03-16T09:00:00.000Z",
                  "event_creation_date_time": "2024-03-16T09:00:00.000Z"
                }
              ]
            }
          ]
          
        }
      },
      "payment_transaction_details_without_payment_events": {
        "summary": "The GET does not return any payment events (as underlying payment leg(s) are incompatible with schema)",
        "value": {
          "data": [
            {
              "uetr": "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
              "transaction_status": "ACCC",
              "initiation_date_time": "2024-03-16T10:00:00.000Z",
              "completion_date_time": "2024-03-16T19:00:00.000Z",
              "last_update_date_time": "2024-03-16T19:00:00.000Z",
              "events_skipped": true
            }
          ]
          
        }
      },
      "payment_transaction_details_containing_invalid_payment_event": {
        "summary": "The GET contains an invalid payment event.",
        "value": {
          "data": [
            {
              "uetr": "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
              "master_uetr": "5557ddd4-31f7-4351-92bc-f79448aa8915",
              "transaction_status": "ACCC",
              "initiation_date_time": "2024-03-16T10:00:00.000Z",
              "completion_date_time": "2024-03-16T19:00:00.000Z",
              "last_update_date_time": "2024-03-16T19:00:00.000Z",
              "events_skipped": false,
              "payment_event": [
                {
                  "network_reference": "20241126132213736-010000000022",
                  "message_name_identification": "trck.001.001.03",
                  "service_level": "SPLI",
                  "tracker_event_type": "FTSU",
                  "valid": false,
                  "invalidity_reason": "X008",
                  "invalidity_description": "Status update sent by institution that does not participate in transaction (possibly sent out of order)",
                  "from": "BANKABICXXX",
                  "to": "TRCKCHZZXXX",
                  "sender_acknowledgement_receipt_date_time": "2024-03-16T09:00:00.000Z",
                  "event_creation_date_time": "2024-03-16T09:00:00.000Z"
                }
              ]
            }
          ]
          
        }
      },
      "changed_payment_transactions_1": {
        "summary": "Multiple transactions are returned. (note that split transactions included in this sample are based on the future implementation, see above samples uetr based GET involving split)",
        "value": {
          "data": [
            {
              "payment_transaction": [
                {
                  "uetr": "3e8d2edb-88cb-47e6-9105-1b0d903c28d8",
                  "transaction_status": "ACCC",
                  "initiation_date_time": "2024-03-16T13:22:45.000Z",
                  "completion_date_time": "2024-03-16T18:22:45.000Z",
                  "last_update_date_time": "2024-03-16T18:22:45.000Z",
                  "events_skipped": false,
                  "payment_event": [
                    {
                      "network_reference": "20240316134513436-010000000016",
                      "message_name_identification": "199",
                      "service_level": "G001",
                      "tracker_event_type": "CTSU",
                      "valid": true,
                      "event_status": "ACCC",
                      "instruction_identification": "ABC123",
                      "tracker_informing_party": "BANKBBICXXX",
                      "charges_information": [
                        {
                          "amount": {
                            "currency": "USD",
                            "amount": "50.00"
                          },
                          "agent": {
                            "bicfi": "BANKBBICXXX"
                          }
                        }
                      ],
                      "confirmed_date": "2024-03-16T18:22:45.000Z",
                      "confirmed_amount": {
                        "currency": "USD",
                        "amount": "940"
                      },
                      "from": "BANKBBICXXX",
                      "to": "TRCKCHZ0XXX",
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T18:22:43.000Z",
                      "update_payment": "20240316134316100-010000000015",
                      "event_creation_date_time": "2024-03-16T18:22:45.000Z"
                    },
                    {
                      "network_reference": "20211125132213436-010000000016",
                      "message_name_identification": "pacs.008.001.08",
                      "service_level": "G001",
                      "tracker_event_type": "CTPT",
                      "valid": true,
                      "event_status": "ACSP",
                      "event_status_date": "2024-03-16T13:22:45.000Z",
                      "event_status_reason": "G000",
                      "instruction_identification": "ABC123",
                      "tracker_informing_party": "BANKABICXXX",
                      "settlement_method": "INDA",
                      "instructed_agent": "BANKBBICXXX",
                      "technical_sender": "BANKABICXXX",
                      "technical_receiver": "BANKBBICXXX",
                      "interbank_settlement_date": "2024-11-25",
                      "instructed_amount": {
                        "currency": "USD",
                        "amount": "1000"
                      },
                      "interbank_settlement_amount": {
                        "currency": "USD",
                        "amount": "990"
                      },
                      "charge_bearer": "CRED",
                      "charges_information": [
                        {
                          "amount": {
                            "currency": "USD",
                            "amount": "10"
                          },
                          "agent": {
                            "bicfi": "BANKABICXXX"
                          }
                        }
                      ],
                      "from": "BANKABICXXX",
                      "to": "BANKBBICXXX",
                      "debtor_agent": "BANKABICXXX",
                      "creditor_agent": "BANKBBICXXX",
                      "sender_acknowledgement_receipt_date_time": "2024-11-25T13:22:45.000Z",
                      "received_date_time": "2024-03-16T13:22:46.000Z",
                      "event_creation_date_time": "2024-03-16T13:22:45.000Z"
                    }
                  ]
                },
                {
                  "uetr": "4f9d2edb-88cb-47e6-9105-1b0d903c28d7",
                  "transaction_status": "ACCC",
                  "initiation_date_time": "2024-03-16T13:22:45.000Z",
                  "completion_date_time": "2024-03-16T18:22:45.000Z",
                  "last_update_date_time": "2024-03-16T18:22:45.000Z",
                  "events_skipped": false,
                  "payment_event": [
                    {
                      "network_reference": "20240316134513436-010000000016",
                      "message_name_identification": "trck.001.001.03",
                      "service_level": "G004",
                      "tracker_event_type": "FTSU",
                      "valid": true,
                      "event_status": "ACCC",
                      "instruction_identification": "ABC123",
                      "end_to_end_identification": "DEF456",
                      "tracker_informing_party": "BANKBBICXXX",
                      "confirmed_date": "2024-03-16T18:22:45.000Z",
                      "confirmed_amount": {
                        "currency": "USD",
                        "amount": "150"
                      },
                      "purpose": "DEBT",
                      "from": "BANKBBICXXX",
                      "to": "TRCKCHZ0XXX",
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T18:22:43.000Z",
                      "update_payment": "20240316134316100-010000000015",
                      "event_creation_date_time": "2024-03-16T18:22:45.000Z"
                    },
                    {
                      "network_reference": "20211125132213436-010000000016",
                      "message_name_identification": "pacs.009.001.08",
                      "service_level": "G004",
                      "tracker_event_type": "FTPT",
                      "valid": true,
                      "event_status": "ACSP",
                      "event_status_date": "2024-03-16T13:22:45.000Z",
                      "event_status_reason": "G000",
                      "instruction_identification": "ABC123",
                      "end_to_end_identification": "DEF456",
                      "tracker_informing_party": "BANKABICXXX",
                      "settlement_method": "INDA",
                      "instructed_agent": "BANKBBICXXX",
                      "technical_sender": "BANKABICXXX",
                      "technical_receiver": "BANKBBICXXX",
                      "interbank_settlement_date": "2024-11-25",
                      "interbank_settlement_amount": {
                        "currency": "USD",
                        "amount": "150"
                      },
                      "from": "BANKABICXXX",
                      "to": "BANKBBICXXX",
                      "debtor_agent": "BANKABICXXX",
                      "creditor_agent": "BANKBBICXXX",
                      "sender_acknowledgement_receipt_date_time": "2024-11-25T13:22:45.000Z",
                      "received_date_time": "2024-03-16T13:22:46.000Z",
                      "event_creation_date_time": "2024-03-16T13:22:45.000Z"
                    }
                  ]
                },
                {
                  "uetr": "e892e688-cf50-4722-a09d-057275212358",
                  "transaction_status": "ACCC",
                  "reject_return_reason": "AM06",
                  "initiation_date_time": "2024-03-16T13:22:45.000Z",
                  "completion_date_time": "2024-03-16T18:00:00.000Z",
                  "last_update_date_time": "2024-03-16T18:00:00.000Z",
                  "events_skipped": false,
                  "payment_event": [
                    {
                      "network_reference": "20241125132213436-010000000016",
                      "message_name_identification": "trck.001.001.03",
                      "service_level": "G001",
                      "tracker_event_type": "RCTS",
                      "valid": true,
                      "event_status": "ACCC",
                      "instruction_identification": "Instr123",
                      "tracker_informing_party": "BANKABICXXX",
                      "confirmed_date": "2024-03-16T18:00:00.000Z",
                      "confirmed_amount": {
                        "currency": "USD",
                        "amount": "950"
                      },
                      "from": "BANKABICXXX",
                      "to": "TRCKCHZZXXX",
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T18:00:00.000Z",
                      "update_payment": "20240316134513436-010000000016",
                      "event_creation_date_time": "2024-03-16T18:00:00.000Z"
                    },
                    {
                      "network_reference": "20241125132213436-010000000016",
                      "message_name_identification": "pacs.004.001.09",
                      "tracker_event_type": "RCTP",
                      "valid": true,
                      "event_status": "ACSP",
                      "event_status_date": "2024-03-16T17:00:00.000Z",
                      "event_status_reason": "G000",
                      "event_reject_return_reason": "AM06",
                      "instruction_identification": "Instr123",
                      "tracker_informing_party": "BANKBBICXXX",
                      "settlement_method": "INDA",
                      "instructed_agent": "BANKABICXXX",
                      "technical_sender": "BANKBBICXXX",
                      "technical_receiver": "BANKABICXXX",
                      "interbank_settlement_date": "2024-03-16",
                      "interbank_settlement_amount": {
                        "currency": "USD",
                        "amount": "950"
                      },
                      "charge_bearer": "SHAR",
                      "from": "BANKBBICXXX",
                      "to": "BANKABICXXX",
                      "debtor_agent": "BANKBBICXXX",
                      "creditor_agent": "BANKABICXXX",
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T17:00:00.000Z",
                      "received_date_time": "2024-03-16T17:00:00.000Z",
                      "event_creation_date_time": "2024-03-16T17:00:00.000Z"
                    },
                    {
                      "network_reference": "20241125132213436-010000000016",
                      "message_name_identification": "trck.001.001.03",
                      "service_level": "G001",
                      "tracker_event_type": "CTSU",
                      "valid": true,
                      "event_status": "ACCC",
                      "instruction_identification": "Instr123",
                      "tracker_informing_party": "BANKBBICXXX",
                      "confirmed_date": "2024-03-16T16:00:00.000Z",
                      "confirmed_amount": {
                        "currency": "USD",
                        "amount": "950"
                      },
                      "from": "BANKBBICXXX",
                      "to": "TRCKCHZZXXX",
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T16:00:00.000Z",
                      "update_payment": "20240316134513436-010000000016",
                      "event_creation_date_time": "2024-03-16T16:00:00.000Z"
                    },
                    {
                      "network_reference": "20241125132213436-010000000016",
                      "message_name_identification": "pacs.008.001.08",
                      "service_level": "G001",
                      "tracker_event_type": "CTPT",
                      "valid": true,
                      "event_status": "ACSP",
                      "event_status_date": "2024-03-16T13:22:45.000Z",
                      "event_status_reason": "G000",
                      "tracker_informing_party": "BANKABICXXX",
                      "settlement_method": "INDA",
                      "instructed_agent": "BANKBBICXXX",
                      "technical_sender": "BANKABICXXX",
                      "technical_receiver": "BANKBBICXXX",
                      "interbank_settlement_date": "2024-03-16",
                      "instructed_amount": {
                        "currency": "USD",
                        "amount": "1000"
                      },
                      "interbank_settlement_amount": {
                        "currency": "USD",
                        "amount": "950"
                      },
                      "charge_bearer": "CRED",
                      "charges_information": [
                        {
                          "amount": {
                            "currency": "USD",
                            "amount": "50"
                          },
                          "agent": {
                            "bicfi": "BANKABICXXX"
                          }
                        }
                      ],
                      "from": "BANKABICXXX",
                      "to": "BANKBBICXXX",
                      "debtor_agent": "BANKABICXXX",
                      "creditor_agent": "BANKBBICXXX",
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T13:22:45.000Z",
                      "received_date_time": "2024-03-16T13:22:45.000Z",
                      "event_creation_date_time": "2024-03-16T13:22:45.000Z"
                    }
                  ]
                },
                {
                  "uetr": "5557ddd4-31f7-4351-92bc-f79448aa8915",
                  "sub_uetr": [
                    "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
                    "3e8d2edb-88cb-47e6-9105-1b0d903c28d8"
                  ],
                  "transaction_status": "ACCC",
                  "initiation_date_time": "2024-03-16T09:00:00.000Z",
                  "completion_date_time": "2024-03-16T19:00:00.000Z",
                  "last_update_date_time": "2024-03-16T19:00:00.000Z",
                  "events_skipped": false,
                  "payment_event": [
                    {
                      "network_reference": "20241125132213436-010000000016",
                      "message_name_identification": "trck.001.001.03",
                      "service_level": "SPLI",
                      "tracker_event_type": "FTSU",
                      "valid": true,
                      "event_status": "ACCC",
                      "instruction_identification": "Instr5678",
                      "end_to_end_identification": "End456",
                      "sub_uetr": [
                        "99ad751a-0ed8-4730-90bc-b9acfd58d29f"
                      ],
                      "tracker_informing_party": "BANKCBICXXX",
                      "confirmed_date": "2024-03-16T19:00:00.000Z",
                      "confirmed_amount": {
                        "currency": "CHF",
                        "amount": "40000000"
                      },
                      "previously_confirmed_amount": {
                        "currency": "CHF",
                        "amount": "60000000"
                      },
                      "from": "TRCKCHZZXXX",
                      "to": "TRCKCHZZXXX",
                      "creditor": "BANKDBICXXX",
                      "creditor_account": {
                        "identification": "Account123"
                      },
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T19:00:00.000Z",
                      "update_payment": "20241126132213436-010000000016",
                      "event_creation_date_time": "2024-03-16T19:00:00.000Z"
                    },
                    {
                      "network_reference": "20241125132219436-010000000017",
                      "message_name_identification": "trck.001.001.03",
                      "service_level": "G004",
                      "tracker_event_type": "FTSU",
                      "valid": true,
                      "event_status": "ACCC",
                      "instruction_identification": "Instr9999",
                      "end_to_end_identification": "End456",
                      "sub_uetr": [
                        "3e8d2edb-88cb-47e6-9105-1b0d903c28d8"
                      ],
                      "tracker_informing_party": "BANKCBICXXX",
                      "confirmed_date": "2024-03-16T18:00:00.000Z",
                      "confirmed_amount": {
                        "currency": "CHF",
                        "amount": "60000000"
                      },
                      "remaining_to_be_confirmed_amount": {
                        "currency": "CHF",
                        "amount": "40000000"
                      },
                      "from": "TRCKCHZZXXX",
                      "to": "TRCKCHZZXXX",
                      "creditor": "BANKDBICXXX",
                      "creditor_account": {
                        "identification": "Account123"
                      },
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T18:00:00.000Z",
                      "update_payment": "20241126132213436-010000000016",
                      "event_creation_date_time": "2024-03-16T18:00:00.000Z"
                    },
                    {
                      "network_reference": "20241126132213736-010000000016",
                      "message_name_identification": "pacs.009.001.08",
                      "service_level": "G004",
                      "tracker_event_type": "FTPT",
                      "valid": true,
                      "event_status": "ACSP",
                      "event_status_date": "2024-03-16T09:00:00.000Z",
                      "event_status_reason": "G000",
                      "instruction_identification": "Instr8564",
                      "end_to_end_identification": "End456",
                      "tracker_informing_party": "BANKABICXXX",
                      "settlement_method": "INDA",
                      "instructed_agent": "BANKBBICXXX",
                      "technical_sender": "BANKABICXXX",
                      "technical_receiver": "BANKBBICXXX",
                      "interbank_settlement_date": "2024-03-16",
                      "interbank_settlement_amount": {
                        "currency": "CHF",
                        "amount": "100000000"
                      },
                      "from": "BANKBBICXXX",
                      "to": "BANKBBICXXX",
                      "debtor": "BANKABICXXX",
                      "debtor_agent": "BANKBBICXXX",
                      "creditor_agent": "BANKCBICXXX",
                      "creditor": "BANKDBICXXX",
                      "creditor_account": {
                        "identification": "Account123"
                      },
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T09:00:00.000Z",
                      "received_date_time": "2024-03-16T09:01:00.000Z",
                      "event_creation_date_time": "2024-03-16T09:00:00.000Z"
                    }
                  ]
                },
                {
                  "uetr": "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
                  "master_uetr": "5557ddd4-31f7-4351-92bc-f79448aa8915",
                  "transaction_status": "ACCC",
                  "initiation_date_time": "2024-03-16T10:00:00.000Z",
                  "completion_date_time": "2024-03-16T19:00:00.000Z",
                  "last_update_date_time": "2024-03-16T19:00:00.000Z",
                  "events_skipped": false,
                  "payment_event": [
                    {
                      "network_reference": "20241126132213736-010000000022",
                      "message_name_identification": "trck.001.001.03",
                      "service_level": "SPLI",
                      "tracker_event_type": "FTSU",
                      "valid": true,
                      "event_status": "ACCC",
                      "instruction_identification": "Instr5678",
                      "end_to_end_identification": "End456",
                      "tracker_informing_party": "BANKCBICXXX",
                      "confirmed_date": "2024-03-16T19:00:00.000Z",
                      "confirmed_amount": {
                        "currency": "CHF",
                        "amount": "60000000"
                      },
                      "from": "BANKCBICXXX",
                      "to": "TRCKCHZZXXX",
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T19:00:00.000Z",
                      "update_payment": "20241126132213736-010000000024",
                      "event_creation_date_time": "2024-03-16T19:00:00.000Z"
                    },
                    {
                      "network_reference": "20241126132213736-010000000024",
                      "message_name_identification": "pacs.009.001.08",
                      "service_level": "G004",
                      "tracker_event_type": "FTPT",
                      "valid": true,
                      "event_status": "ACSP",
                      "event_status_date": "2024-03-16T09:00:00.000Z",
                      "event_status_reason": "G000",
                      "instruction_identification": "Instr5678",
                      "end_to_end_identification": "End456",
                      "tracker_informing_party": "BANKBBICXXX",
                      "settlement_method": "INDA",
                      "instructed_agent": "BANKCBICXXX",
                      "technical_sender": "BANKBBICXXX",
                      "technical_receiver": "BANKCBICXXX",
                      "interbank_settlement_date": "2024-03-16",
                      "interbank_settlement_amount": {
                        "currency": "CHF",
                        "amount": "60000000"
                      },
                      "from": "BANKBBICXXX",
                      "to": "BANKCBICXXX",
                      "debtor": "BANKABICXXX",
                      "debtor_agent": "BANKBBICXXX",
                      "creditor_agent": "BANKCBICXXX",
                      "creditor": "BANKDBICXXX",
                      "creditor_account": {
                        "identification": "Account123"
                      },
                      "sender_acknowledgement_receipt_date_time": "2024-03-16T09:00:00.000Z",
                      "received_date_time": "2024-03-16T09:00:00.000Z",
                      "event_creation_date_time": "2024-03-16T09:00:00.000Z"
                    }
                  ]
                },
                {
                  "uetr": "99ad751a-0ed8-4730-90bc-b9acfd58d29f",
                  "transaction_status": "ACCC",
                  "initiation_date_time": "2024-03-16T10:00:00.000Z",
                  "completion_date_time": "2024-03-16T19:00:00.000Z",
                  "last_update_date_time": "2024-03-16T19:00:00.000Z",
                  "events_skipped": true
                }
              ]
            }
          ]
          
        }
      },
      "invalid_request": {
        "value": {
          "errors": {
            "code": "Sw.gpi.InvalidRequest",
            "source": "SWIFT",
            "details": "Invalid request"
          }
        }
      },
      "missing_mandatory_field": {
        "value": {
          "errors": [
            {
              "code": "Sw.gpi.MandatoryFieldMissing",
              "source": "GPI ADAPTOR",
              "details": "Mandatory field %field missing"
            }
          ]
        }
      },
      "invalid_rbac": {
        "value": {
          "errors": [
            {
              "code": "Sw.gpi.InvalidRBACRole",
              "source": "SWIFT",
              "details": "RBAC Role"
            }
          ]
        }
      },
      "request_malformed": {
        "value": {
          "errors": [
            {
              "code": "SwAP501",
              "source": "SWAP PROXY",
              "details": "API request is malformed"
            }
          ]
        }
      },
      "unknown_uetr": {
        "value": {
          "errors": [
            {
              "code": "INVA/X004",
              "source": "SWIFT",
              "details": "No payment information tracked for this transaction identifier, Unknown transaction identifier"
            }
          ]
        }
      },
      "from_authorization_failure": {
        "value": {
          "errors": [
            {
              "code": "Sw.gpi.FromAuthorizationFailure",
              "source": "SWIFT",
              "details": "From %From does not have the appropriate RBAC role"
            }
          ]
        }
      },
      "no_result_found": {
        "value": {
          "errors": [
            {
              "code": "Sw.gpi.NoResultFound",
              "source": "SWIFT",
              "details": "No result found"
            }
          ]
        }
      },
      "resource_not_exist": {
        "value": {
          "errors": [
            {
              "code": "SwAP506",
              "source": "SWIFT",
              "details": "Resource does not exist."
            }
          ]
        }
      },
      "payload_too_large": {
        "value": {
          "errors": [
            {
              "code": "SwAP507",
              "source": "SWIFT",
              "details": "Request cannot be processed at this time. Please try later. (header Retry-After indicates how long to wait before making a follow-up request)."
            }
          ]
        }
      },
      "too_many_requests": {
        "value": {
          "errors": [
            {
              "code": "SwAP507",
              "source": "SWIFT",
              "details": "Request cannot be processed at this time. Please try later. (header Retry-After indicates how long to wait before making a follow-up request)."
            }
          ]
        }
      },
      "service_internal_error": {
        "value": {
          "errors": [
            {
              "code": "Sw.gpi.InternalError",
              "source": "SWIFT",
              "details": "Internal error"
            }
          ]
        }
      }
    },
    "securitySchemes" : {
      "Authorization" : {
        "type" : "http",
        "description" : "The JWT Authorization token exchanged with PEPv3",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}