/*! For license information please see swagger-client.browser.min.js.LICENSE.txt */
!(function (e, t) {
  "object" == typeof exports && "object" == typeof module
    ? (module.exports = t())
    : "function" == typeof define && define.amd
    ? define([], t)
    : "object" == typeof exports
    ? (exports.SwaggerClient = t())
    : (e.SwaggerClient = t());
})(window, () =>
  (() => {
    var e = {
        8075: (e, t, r) => {
          "use strict";
          var n = r(453),
            s = r(487),
            i = s(n("String.prototype.indexOf"));
          e.exports = function (e, t) {
            var r = n(e, !!t);
            return "function" == typeof r && i(e, ".prototype.") > -1
              ? s(r)
              : r;
          };
        },
        487: (e, t, r) => {
          "use strict";
          var n = r(6743),
            s = r(453),
            i = s("%Function.prototype.apply%"),
            o = s("%Function.prototype.call%"),
            a = s("%Reflect.apply%", !0) || n.call(o, i),
            c = s("%Object.getOwnPropertyDescriptor%", !0),
            l = s("%Object.defineProperty%", !0),
            u = s("%Math.max%");
          if (l)
            try {
              l({}, "a", { value: 1 });
            } catch (e) {
              l = null;
            }
          e.exports = function (e) {
            var t = a(n, o, arguments);
            c &&
              l &&
              c(t, "length").configurable &&
              l(t, "length", {
                value: 1 + u(0, e.length - (arguments.length - 1)),
              });
            return t;
          };
          var p = function () {
            return a(n, i, arguments);
          };
          l ? l(e.exports, "apply", { value: p }) : (e.exports.apply = p);
        },
        7427: (e, t) => {
          "use strict";
          (t.parse = function (e, t) {
            if ("string" != typeof e)
              throw new TypeError("argument str must be a string");
            var r = {},
              n = (t || {}).decode || s,
              i = 0;
            for (; i < e.length; ) {
              var a = e.indexOf("=", i);
              if (-1 === a) break;
              var c = e.indexOf(";", i);
              if (-1 === c) c = e.length;
              else if (c < a) {
                i = e.lastIndexOf(";", a - 1) + 1;
                continue;
              }
              var l = e.slice(i, a).trim();
              if (void 0 === r[l]) {
                var u = e.slice(a + 1, c).trim();
                34 === u.charCodeAt(0) && (u = u.slice(1, -1)),
                  (r[l] = o(u, n));
              }
              i = c + 1;
            }
            return r;
          }),
            (t.serialize = function (e, t, s) {
              var o = s || {},
                a = o.encode || i;
              if ("function" != typeof a)
                throw new TypeError("option encode is invalid");
              if (!n.test(e)) throw new TypeError("argument name is invalid");
              var c = a(t);
              if (c && !n.test(c))
                throw new TypeError("argument val is invalid");
              var l = e + "=" + c;
              if (null != o.maxAge) {
                var u = o.maxAge - 0;
                if (isNaN(u) || !isFinite(u))
                  throw new TypeError("option maxAge is invalid");
                l += "; Max-Age=" + Math.floor(u);
              }
              if (o.domain) {
                if (!n.test(o.domain))
                  throw new TypeError("option domain is invalid");
                l += "; Domain=" + o.domain;
              }
              if (o.path) {
                if (!n.test(o.path))
                  throw new TypeError("option path is invalid");
                l += "; Path=" + o.path;
              }
              if (o.expires) {
                var p = o.expires;
                if (
                  !(function (e) {
                    return "[object Date]" === r.call(e) || e instanceof Date;
                  })(p) ||
                  isNaN(p.valueOf())
                )
                  throw new TypeError("option expires is invalid");
                l += "; Expires=" + p.toUTCString();
              }
              o.httpOnly && (l += "; HttpOnly");
              o.secure && (l += "; Secure");
              o.partitioned && (l += "; Partitioned");
              if (o.priority) {
                switch (
                  "string" == typeof o.priority
                    ? o.priority.toLowerCase()
                    : o.priority
                ) {
                  case "low":
                    l += "; Priority=Low";
                    break;
                  case "medium":
                    l += "; Priority=Medium";
                    break;
                  case "high":
                    l += "; Priority=High";
                    break;
                  default:
                    throw new TypeError("option priority is invalid");
                }
              }
              if (o.sameSite) {
                switch (
                  "string" == typeof o.sameSite
                    ? o.sameSite.toLowerCase()
                    : o.sameSite
                ) {
                  case !0:
                    l += "; SameSite=Strict";
                    break;
                  case "lax":
                    l += "; SameSite=Lax";
                    break;
                  case "strict":
                    l += "; SameSite=Strict";
                    break;
                  case "none":
                    l += "; SameSite=None";
                    break;
                  default:
                    throw new TypeError("option sameSite is invalid");
                }
              }
              return l;
            });
          var r = Object.prototype.toString,
            n = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
          function s(e) {
            return -1 !== e.indexOf("%") ? decodeURIComponent(e) : e;
          }
          function i(e) {
            return encodeURIComponent(e);
          }
          function o(e, t) {
            try {
              return t(e);
            } catch (t) {
              return e;
            }
          }
        },
        4410: (e, t, r) => {
          "use strict";
          var n = r(8199);
          e.exports = n;
        },
        8232: (e, t, r) => {
          "use strict";
          r(9356), r(1095), r(3970), r(6396), r(7632);
          var n = r(7675);
          e.exports = n.AggregateError;
        },
        1523: (e, t, r) => {
          "use strict";
          e.exports = r(297);
        },
        297: (e, t, r) => {
          "use strict";
          r(4506);
          var n = r(4410);
          e.exports = n;
        },
        182: (e, t, r) => {
          "use strict";
          var n = r(2073),
            s = r(4003),
            i = TypeError;
          e.exports = function (e) {
            if (n(e)) return e;
            throw i(s(e) + " is not a function");
          };
        },
        8934: (e, t, r) => {
          "use strict";
          var n = r(2073),
            s = String,
            i = TypeError;
          e.exports = function (e) {
            if ("object" == typeof e || n(e)) return e;
            throw i("Can't set " + s(e) + " as a prototype");
          };
        },
        6065: (e) => {
          "use strict";
          e.exports = function () {};
        },
        8347: (e, t, r) => {
          "use strict";
          var n = r(5774),
            s = String,
            i = TypeError;
          e.exports = function (e) {
            if (n(e)) return e;
            throw i(s(e) + " is not an object");
          };
        },
        4581: (e, t, r) => {
          "use strict";
          var n = r(9441),
            s = r(8630),
            i = r(954),
            o = function (e) {
              return function (t, r, o) {
                var a,
                  c = n(t),
                  l = i(c),
                  u = s(o, l);
                if (e && r != r) {
                  for (; l > u; ) if ((a = c[u++]) != a) return !0;
                } else
                  for (; l > u; u++)
                    if ((e || u in c) && c[u] === r) return e || u || 0;
                return !e && -1;
              };
            };
          e.exports = { includes: o(!0), indexOf: o(!1) };
        },
        244: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = n({}.toString),
            i = n("".slice);
          e.exports = function (e) {
            return i(s(e), 8, -1);
          };
        },
        5663: (e, t, r) => {
          "use strict";
          var n = r(7104),
            s = r(2073),
            i = r(244),
            o = r(6615)("toStringTag"),
            a = Object,
            c =
              "Arguments" ===
              i(
                (function () {
                  return arguments;
                })()
              );
          e.exports = n
            ? i
            : function (e) {
                var t, r, n;
                return void 0 === e
                  ? "Undefined"
                  : null === e
                  ? "Null"
                  : "string" ==
                    typeof (r = (function (e, t) {
                      try {
                        return e[t];
                      } catch (e) {}
                    })((t = a(e)), o))
                  ? r
                  : c
                  ? i(t)
                  : "Object" === (n = i(t)) && s(t.callee)
                  ? "Arguments"
                  : n;
              };
        },
        2144: (e, t, r) => {
          "use strict";
          var n = r(4373),
            s = r(8195),
            i = r(5687),
            o = r(6381);
          e.exports = function (e, t, r) {
            for (var a = s(t), c = o.f, l = i.f, u = 0; u < a.length; u++) {
              var p = a[u];
              n(e, p) || (r && n(r, p)) || c(e, p, l(t, p));
            }
          };
        },
        7007: (e, t, r) => {
          "use strict";
          var n = r(7131);
          e.exports = !n(function () {
            function e() {}
            return (
              (e.prototype.constructor = null),
              Object.getPrototypeOf(new e()) !== e.prototype
            );
          });
        },
        789: (e) => {
          "use strict";
          e.exports = function (e, t) {
            return { value: e, done: t };
          };
        },
        8471: (e, t, r) => {
          "use strict";
          var n = r(5560),
            s = r(6381),
            i = r(3768);
          e.exports = n
            ? function (e, t, r) {
                return s.f(e, t, i(1, r));
              }
            : function (e, t, r) {
                return (e[t] = r), e;
              };
        },
        3768: (e) => {
          "use strict";
          e.exports = function (e, t) {
            return {
              enumerable: !(1 & e),
              configurable: !(2 & e),
              writable: !(4 & e),
              value: t,
            };
          };
        },
        492: (e, t, r) => {
          "use strict";
          var n = r(8471);
          e.exports = function (e, t, r, s) {
            return s && s.enumerable ? (e[t] = r) : n(e, t, r), e;
          };
        },
        909: (e, t, r) => {
          "use strict";
          var n = r(5391),
            s = Object.defineProperty;
          e.exports = function (e, t) {
            try {
              s(n, e, { value: t, configurable: !0, writable: !0 });
            } catch (r) {
              n[e] = t;
            }
            return t;
          };
        },
        5560: (e, t, r) => {
          "use strict";
          var n = r(7131);
          e.exports = !n(function () {
            return (
              7 !==
              Object.defineProperty({}, 1, {
                get: function () {
                  return 7;
                },
              })[1]
            );
          });
        },
        7023: (e) => {
          "use strict";
          var t = "object" == typeof document && document.all,
            r = void 0 === t && void 0 !== t;
          e.exports = { all: t, IS_HTMLDDA: r };
        },
        6171: (e, t, r) => {
          "use strict";
          var n = r(5391),
            s = r(5774),
            i = n.document,
            o = s(i) && s(i.createElement);
          e.exports = function (e) {
            return o ? i.createElement(e) : {};
          };
        },
        4740: (e) => {
          "use strict";
          e.exports = {
            CSSRuleList: 0,
            CSSStyleDeclaration: 0,
            CSSValueList: 0,
            ClientRectList: 0,
            DOMRectList: 0,
            DOMStringList: 0,
            DOMTokenList: 1,
            DataTransferItemList: 0,
            FileList: 0,
            HTMLAllCollection: 0,
            HTMLCollection: 0,
            HTMLFormElement: 0,
            HTMLSelectElement: 0,
            MediaList: 0,
            MimeTypeArray: 0,
            NamedNodeMap: 0,
            NodeList: 1,
            PaintRequestList: 0,
            Plugin: 0,
            PluginArray: 0,
            SVGLengthList: 0,
            SVGNumberList: 0,
            SVGPathSegList: 0,
            SVGPointList: 0,
            SVGStringList: 0,
            SVGTransformList: 0,
            SourceBufferList: 0,
            StyleSheetList: 0,
            TextTrackCueList: 0,
            TextTrackList: 0,
            TouchList: 0,
          };
        },
        4084: (e) => {
          "use strict";
          e.exports =
            ("undefined" != typeof navigator && String(navigator.userAgent)) ||
            "";
        },
        6312: (e, t, r) => {
          "use strict";
          var n,
            s,
            i = r(5391),
            o = r(4084),
            a = i.process,
            c = i.Deno,
            l = (a && a.versions) || (c && c.version),
            u = l && l.v8;
          u && (s = (n = u.split("."))[0] > 0 && n[0] < 4 ? 1 : +(n[0] + n[1])),
            !s &&
              o &&
              (!(n = o.match(/Edge\/(\d+)/)) || n[1] >= 74) &&
              (n = o.match(/Chrome\/(\d+)/)) &&
              (s = +n[1]),
            (e.exports = s);
        },
        347: (e) => {
          "use strict";
          e.exports = [
            "constructor",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "toLocaleString",
            "toString",
            "valueOf",
          ];
        },
        7205: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = Error,
            i = n("".replace),
            o = String(s("zxcasd").stack),
            a = /\n\s*at [^:]*:[^\n]*/,
            c = a.test(o);
          e.exports = function (e, t) {
            if (c && "string" == typeof e && !s.prepareStackTrace)
              for (; t--; ) e = i(e, a, "");
            return e;
          };
        },
        927: (e, t, r) => {
          "use strict";
          var n = r(8471),
            s = r(7205),
            i = r(1527),
            o = Error.captureStackTrace;
          e.exports = function (e, t, r, a) {
            i && (o ? o(e, t) : n(e, "stack", s(r, a)));
          };
        },
        1527: (e, t, r) => {
          "use strict";
          var n = r(7131),
            s = r(3768);
          e.exports = !n(function () {
            var e = Error("a");
            return (
              !("stack" in e) ||
              (Object.defineProperty(e, "stack", s(1, 7)), 7 !== e.stack)
            );
          });
        },
        1938: (e, t, r) => {
          "use strict";
          var n = r(5391),
            s = r(1981),
            i = r(9e3),
            o = r(2073),
            a = r(5687).f,
            c = r(3488),
            l = r(7675),
            u = r(2116),
            p = r(8471),
            h = r(4373),
            f = function (e) {
              var t = function (r, n, i) {
                if (this instanceof t) {
                  switch (arguments.length) {
                    case 0:
                      return new e();
                    case 1:
                      return new e(r);
                    case 2:
                      return new e(r, n);
                  }
                  return new e(r, n, i);
                }
                return s(e, this, arguments);
              };
              return (t.prototype = e.prototype), t;
            };
          e.exports = function (e, t) {
            var r,
              s,
              m,
              d,
              y,
              g,
              v,
              b,
              x,
              w = e.target,
              E = e.global,
              j = e.stat,
              O = e.proto,
              S = E ? n : j ? n[w] : (n[w] || {}).prototype,
              P = E ? l : l[w] || p(l, w, {})[w],
              A = P.prototype;
            for (d in t)
              (s =
                !(r = c(E ? d : w + (j ? "." : "#") + d, e.forced)) &&
                S &&
                h(S, d)),
                (g = P[d]),
                s && (v = e.dontCallGetSet ? (x = a(S, d)) && x.value : S[d]),
                (y = s && v ? v : t[d]),
                (s && typeof g == typeof y) ||
                  ((b =
                    e.bind && s
                      ? u(y, n)
                      : e.wrap && s
                      ? f(y)
                      : O && o(y)
                      ? i(y)
                      : y),
                  (e.sham || (y && y.sham) || (g && g.sham)) &&
                    p(b, "sham", !0),
                  p(P, d, b),
                  O &&
                    (h(l, (m = w + "Prototype")) || p(l, m, {}),
                    p(l[m], d, y),
                    e.real && A && (r || !A[d]) && p(A, d, y)));
          };
        },
        7131: (e) => {
          "use strict";
          e.exports = function (e) {
            try {
              return !!e();
            } catch (e) {
              return !0;
            }
          };
        },
        1981: (e, t, r) => {
          "use strict";
          var n = r(5164),
            s = Function.prototype,
            i = s.apply,
            o = s.call;
          e.exports =
            ("object" == typeof Reflect && Reflect.apply) ||
            (n
              ? o.bind(i)
              : function () {
                  return o.apply(i, arguments);
                });
        },
        2116: (e, t, r) => {
          "use strict";
          var n = r(9e3),
            s = r(182),
            i = r(5164),
            o = n(n.bind);
          e.exports = function (e, t) {
            return (
              s(e),
              void 0 === t
                ? e
                : i
                ? o(e, t)
                : function () {
                    return e.apply(t, arguments);
                  }
            );
          };
        },
        5164: (e, t, r) => {
          "use strict";
          var n = r(7131);
          e.exports = !n(function () {
            var e = function () {}.bind();
            return "function" != typeof e || e.hasOwnProperty("prototype");
          });
        },
        3057: (e, t, r) => {
          "use strict";
          var n = r(5164),
            s = Function.prototype.call;
          e.exports = n
            ? s.bind(s)
            : function () {
                return s.apply(s, arguments);
              };
        },
        4970: (e, t, r) => {
          "use strict";
          var n = r(5560),
            s = r(4373),
            i = Function.prototype,
            o = n && Object.getOwnPropertyDescriptor,
            a = s(i, "name"),
            c = a && "something" === function () {}.name,
            l = a && (!n || (n && o(i, "name").configurable));
          e.exports = { EXISTS: a, PROPER: c, CONFIGURABLE: l };
        },
        7006: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = r(182);
          e.exports = function (e, t, r) {
            try {
              return n(s(Object.getOwnPropertyDescriptor(e, t)[r]));
            } catch (e) {}
          };
        },
        9e3: (e, t, r) => {
          "use strict";
          var n = r(244),
            s = r(9036);
          e.exports = function (e) {
            if ("Function" === n(e)) return s(e);
          };
        },
        9036: (e, t, r) => {
          "use strict";
          var n = r(5164),
            s = Function.prototype,
            i = s.call,
            o = n && s.bind.bind(i, i);
          e.exports = n
            ? o
            : function (e) {
                return function () {
                  return i.apply(e, arguments);
                };
              };
        },
        7827: (e, t, r) => {
          "use strict";
          var n = r(7675),
            s = r(5391),
            i = r(2073),
            o = function (e) {
              return i(e) ? e : void 0;
            };
          e.exports = function (e, t) {
            return arguments.length < 2
              ? o(n[e]) || o(s[e])
              : (n[e] && n[e][t]) || (s[e] && s[e][t]);
          };
        },
        6399: (e, t, r) => {
          "use strict";
          var n = r(5663),
            s = r(3514),
            i = r(6153),
            o = r(1113),
            a = r(6615)("iterator");
          e.exports = function (e) {
            if (!i(e)) return s(e, a) || s(e, "@@iterator") || o[n(e)];
          };
        },
        7013: (e, t, r) => {
          "use strict";
          var n = r(3057),
            s = r(182),
            i = r(8347),
            o = r(4003),
            a = r(6399),
            c = TypeError;
          e.exports = function (e, t) {
            var r = arguments.length < 2 ? a(e) : t;
            if (s(r)) return i(n(r, e));
            throw c(o(e) + " is not iterable");
          };
        },
        3514: (e, t, r) => {
          "use strict";
          var n = r(182),
            s = r(6153);
          e.exports = function (e, t) {
            var r = e[t];
            return s(r) ? void 0 : n(r);
          };
        },
        5391: function (e, t, r) {
          "use strict";
          var n = function (e) {
            return e && e.Math === Math && e;
          };
          e.exports =
            n("object" == typeof globalThis && globalThis) ||
            n("object" == typeof window && window) ||
            n("object" == typeof self && self) ||
            n("object" == typeof r.g && r.g) ||
            (function () {
              return this;
            })() ||
            this ||
            Function("return this")();
        },
        4373: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = r(5809),
            i = n({}.hasOwnProperty);
          e.exports =
            Object.hasOwn ||
            function (e, t) {
              return i(s(e), t);
            };
        },
        6145: (e) => {
          "use strict";
          e.exports = {};
        },
        9417: (e, t, r) => {
          "use strict";
          var n = r(7827);
          e.exports = n("document", "documentElement");
        },
        2633: (e, t, r) => {
          "use strict";
          var n = r(5560),
            s = r(7131),
            i = r(6171);
          e.exports =
            !n &&
            !s(function () {
              return (
                7 !==
                Object.defineProperty(i("div"), "a", {
                  get: function () {
                    return 7;
                  },
                }).a
              );
            });
        },
        6731: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = r(7131),
            i = r(244),
            o = Object,
            a = n("".split);
          e.exports = s(function () {
            return !o("z").propertyIsEnumerable(0);
          })
            ? function (e) {
                return "String" === i(e) ? a(e, "") : o(e);
              }
            : o;
        },
        9739: (e, t, r) => {
          "use strict";
          var n = r(2073),
            s = r(5774),
            i = r(4619);
          e.exports = function (e, t, r) {
            var o, a;
            return (
              i &&
                n((o = t.constructor)) &&
                o !== r &&
                s((a = o.prototype)) &&
                a !== r.prototype &&
                i(e, a),
              e
            );
          };
        },
        60: (e, t, r) => {
          "use strict";
          var n = r(5774),
            s = r(8471);
          e.exports = function (e, t) {
            n(t) && "cause" in t && s(e, "cause", t.cause);
          };
        },
        9257: (e, t, r) => {
          "use strict";
          var n,
            s,
            i,
            o = r(8698),
            a = r(5391),
            c = r(5774),
            l = r(8471),
            u = r(4373),
            p = r(4993),
            h = r(651),
            f = r(6145),
            m = "Object already initialized",
            d = a.TypeError,
            y = a.WeakMap;
          if (o || p.state) {
            var g = p.state || (p.state = new y());
            (g.get = g.get),
              (g.has = g.has),
              (g.set = g.set),
              (n = function (e, t) {
                if (g.has(e)) throw d(m);
                return (t.facade = e), g.set(e, t), t;
              }),
              (s = function (e) {
                return g.get(e) || {};
              }),
              (i = function (e) {
                return g.has(e);
              });
          } else {
            var v = h("state");
            (f[v] = !0),
              (n = function (e, t) {
                if (u(e, v)) throw d(m);
                return (t.facade = e), l(e, v, t), t;
              }),
              (s = function (e) {
                return u(e, v) ? e[v] : {};
              }),
              (i = function (e) {
                return u(e, v);
              });
          }
          e.exports = {
            set: n,
            get: s,
            has: i,
            enforce: function (e) {
              return i(e) ? s(e) : n(e, {});
            },
            getterFor: function (e) {
              return function (t) {
                var r;
                if (!c(t) || (r = s(t)).type !== e)
                  throw d("Incompatible receiver, " + e + " required");
                return r;
              };
            },
          };
        },
        5669: (e, t, r) => {
          "use strict";
          var n = r(6615),
            s = r(1113),
            i = n("iterator"),
            o = Array.prototype;
          e.exports = function (e) {
            return void 0 !== e && (s.Array === e || o[i] === e);
          };
        },
        2073: (e, t, r) => {
          "use strict";
          var n = r(7023),
            s = n.all;
          e.exports = n.IS_HTMLDDA
            ? function (e) {
                return "function" == typeof e || e === s;
              }
            : function (e) {
                return "function" == typeof e;
              };
        },
        3488: (e, t, r) => {
          "use strict";
          var n = r(7131),
            s = r(2073),
            i = /#|\.prototype\./,
            o = function (e, t) {
              var r = c[a(e)];
              return r === u || (r !== l && (s(t) ? n(t) : !!t));
            },
            a = (o.normalize = function (e) {
              return String(e).replace(i, ".").toLowerCase();
            }),
            c = (o.data = {}),
            l = (o.NATIVE = "N"),
            u = (o.POLYFILL = "P");
          e.exports = o;
        },
        6153: (e) => {
          "use strict";
          e.exports = function (e) {
            return null == e;
          };
        },
        5774: (e, t, r) => {
          "use strict";
          var n = r(2073),
            s = r(7023),
            i = s.all;
          e.exports = s.IS_HTMLDDA
            ? function (e) {
                return "object" == typeof e ? null !== e : n(e) || e === i;
              }
            : function (e) {
                return "object" == typeof e ? null !== e : n(e);
              };
        },
        3599: (e) => {
          "use strict";
          e.exports = !0;
        },
        3969: (e, t, r) => {
          "use strict";
          var n = r(7827),
            s = r(2073),
            i = r(3381),
            o = r(1004),
            a = Object;
          e.exports = o
            ? function (e) {
                return "symbol" == typeof e;
              }
            : function (e) {
                var t = n("Symbol");
                return s(t) && i(t.prototype, a(e));
              };
        },
        9384: (e, t, r) => {
          "use strict";
          var n = r(2116),
            s = r(3057),
            i = r(8347),
            o = r(4003),
            a = r(5669),
            c = r(954),
            l = r(3381),
            u = r(7013),
            p = r(6399),
            h = r(7959),
            f = TypeError,
            m = function (e, t) {
              (this.stopped = e), (this.result = t);
            },
            d = m.prototype;
          e.exports = function (e, t, r) {
            var y,
              g,
              v,
              b,
              x,
              w,
              E,
              j = r && r.that,
              O = !(!r || !r.AS_ENTRIES),
              S = !(!r || !r.IS_RECORD),
              P = !(!r || !r.IS_ITERATOR),
              A = !(!r || !r.INTERRUPTED),
              $ = n(t, j),
              _ = function (e) {
                return y && h(y, "normal", e), new m(!0, e);
              },
              k = function (e) {
                return O
                  ? (i(e), A ? $(e[0], e[1], _) : $(e[0], e[1]))
                  : A
                  ? $(e, _)
                  : $(e);
              };
            if (S) y = e.iterator;
            else if (P) y = e;
            else {
              if (!(g = p(e))) throw f(o(e) + " is not iterable");
              if (a(g)) {
                for (v = 0, b = c(e); b > v; v++)
                  if ((x = k(e[v])) && l(d, x)) return x;
                return new m(!1);
              }
              y = u(e, g);
            }
            for (w = S ? e.next : y.next; !(E = s(w, y)).done; ) {
              try {
                x = k(E.value);
              } catch (e) {
                h(y, "throw", e);
              }
              if ("object" == typeof x && x && l(d, x)) return x;
            }
            return new m(!1);
          };
        },
        7959: (e, t, r) => {
          "use strict";
          var n = r(3057),
            s = r(8347),
            i = r(3514);
          e.exports = function (e, t, r) {
            var o, a;
            s(e);
            try {
              if (!(o = i(e, "return"))) {
                if ("throw" === t) throw r;
                return r;
              }
              o = n(o, e);
            } catch (e) {
              (a = !0), (o = e);
            }
            if ("throw" === t) throw r;
            if (a) throw o;
            return s(o), r;
          };
        },
        7102: (e, t, r) => {
          "use strict";
          var n = r(2373).IteratorPrototype,
            s = r(3628),
            i = r(3768),
            o = r(5051),
            a = r(1113),
            c = function () {
              return this;
            };
          e.exports = function (e, t, r, l) {
            var u = t + " Iterator";
            return (
              (e.prototype = s(n, { next: i(+!l, r) })),
              o(e, u, !1, !0),
              (a[u] = c),
              e
            );
          };
        },
        6188: (e, t, r) => {
          "use strict";
          var n = r(1938),
            s = r(3057),
            i = r(3599),
            o = r(4970),
            a = r(2073),
            c = r(7102),
            l = r(3439),
            u = r(4619),
            p = r(5051),
            h = r(8471),
            f = r(492),
            m = r(6615),
            d = r(1113),
            y = r(2373),
            g = o.PROPER,
            v = o.CONFIGURABLE,
            b = y.IteratorPrototype,
            x = y.BUGGY_SAFARI_ITERATORS,
            w = m("iterator"),
            E = "keys",
            j = "values",
            O = "entries",
            S = function () {
              return this;
            };
          e.exports = function (e, t, r, o, m, y, P) {
            c(r, t, o);
            var A,
              $,
              _,
              k = function (e) {
                if (e === m && R) return R;
                if (!x && e && e in C) return C[e];
                switch (e) {
                  case E:
                  case j:
                  case O:
                    return function () {
                      return new r(this, e);
                    };
                }
                return function () {
                  return new r(this);
                };
              },
              I = t + " Iterator",
              T = !1,
              C = e.prototype,
              M = C[w] || C["@@iterator"] || (m && C[m]),
              R = (!x && M) || k(m),
              F = ("Array" === t && C.entries) || M;
            if (
              (F &&
                (A = l(F.call(new e()))) !== Object.prototype &&
                A.next &&
                (i || l(A) === b || (u ? u(A, b) : a(A[w]) || f(A, w, S)),
                p(A, I, !0, !0),
                i && (d[I] = S)),
              g &&
                m === j &&
                M &&
                M.name !== j &&
                (!i && v
                  ? h(C, "name", j)
                  : ((T = !0),
                    (R = function () {
                      return s(M, this);
                    }))),
              m)
            )
              if (
                (($ = { values: k(j), keys: y ? R : k(E), entries: k(O) }), P)
              )
                for (_ in $) (x || T || !(_ in C)) && f(C, _, $[_]);
              else n({ target: t, proto: !0, forced: x || T }, $);
            return (
              (i && !P) || C[w] === R || f(C, w, R, { name: m }), (d[t] = R), $
            );
          };
        },
        2373: (e, t, r) => {
          "use strict";
          var n,
            s,
            i,
            o = r(7131),
            a = r(2073),
            c = r(5774),
            l = r(3628),
            u = r(3439),
            p = r(492),
            h = r(6615),
            f = r(3599),
            m = h("iterator"),
            d = !1;
          [].keys &&
            ("next" in (i = [].keys())
              ? (s = u(u(i))) !== Object.prototype && (n = s)
              : (d = !0)),
            !c(n) ||
            o(function () {
              var e = {};
              return n[m].call(e) !== e;
            })
              ? (n = {})
              : f && (n = l(n)),
            a(n[m]) ||
              p(n, m, function () {
                return this;
              }),
            (e.exports = { IteratorPrototype: n, BUGGY_SAFARI_ITERATORS: d });
        },
        1113: (e) => {
          "use strict";
          e.exports = {};
        },
        954: (e, t, r) => {
          "use strict";
          var n = r(2954);
          e.exports = function (e) {
            return n(e.length);
          };
        },
        1049: (e) => {
          "use strict";
          var t = Math.ceil,
            r = Math.floor;
          e.exports =
            Math.trunc ||
            function (e) {
              var n = +e;
              return (n > 0 ? r : t)(n);
            };
        },
        9383: (e, t, r) => {
          "use strict";
          var n = r(7803);
          e.exports = function (e, t) {
            return void 0 === e ? (arguments.length < 2 ? "" : t) : n(e);
          };
        },
        3628: (e, t, r) => {
          "use strict";
          var n,
            s = r(8347),
            i = r(9157),
            o = r(347),
            a = r(6145),
            c = r(9417),
            l = r(6171),
            u = r(651),
            p = "prototype",
            h = "script",
            f = u("IE_PROTO"),
            m = function () {},
            d = function (e) {
              return "<" + h + ">" + e + "</" + h + ">";
            },
            y = function (e) {
              e.write(d("")), e.close();
              var t = e.parentWindow.Object;
              return (e = null), t;
            },
            g = function () {
              try {
                n = new ActiveXObject("htmlfile");
              } catch (e) {}
              var e, t, r;
              g =
                "undefined" != typeof document
                  ? document.domain && n
                    ? y(n)
                    : ((t = l("iframe")),
                      (r = "java" + h + ":"),
                      (t.style.display = "none"),
                      c.appendChild(t),
                      (t.src = String(r)),
                      (e = t.contentWindow.document).open(),
                      e.write(d("document.F=Object")),
                      e.close(),
                      e.F)
                  : y(n);
              for (var s = o.length; s--; ) delete g[p][o[s]];
              return g();
            };
          (a[f] = !0),
            (e.exports =
              Object.create ||
              function (e, t) {
                var r;
                return (
                  null !== e
                    ? ((m[p] = s(e)), (r = new m()), (m[p] = null), (r[f] = e))
                    : (r = g()),
                  void 0 === t ? r : i.f(r, t)
                );
              });
        },
        9157: (e, t, r) => {
          "use strict";
          var n = r(5560),
            s = r(2506),
            i = r(6381),
            o = r(8347),
            a = r(9441),
            c = r(5556);
          t.f =
            n && !s
              ? Object.defineProperties
              : function (e, t) {
                  o(e);
                  for (var r, n = a(t), s = c(t), l = s.length, u = 0; l > u; )
                    i.f(e, (r = s[u++]), n[r]);
                  return e;
                };
        },
        6381: (e, t, r) => {
          "use strict";
          var n = r(5560),
            s = r(2633),
            i = r(2506),
            o = r(8347),
            a = r(5141),
            c = TypeError,
            l = Object.defineProperty,
            u = Object.getOwnPropertyDescriptor,
            p = "enumerable",
            h = "configurable",
            f = "writable";
          t.f = n
            ? i
              ? function (e, t, r) {
                  if (
                    (o(e),
                    (t = a(t)),
                    o(r),
                    "function" == typeof e &&
                      "prototype" === t &&
                      "value" in r &&
                      f in r &&
                      !r[f])
                  ) {
                    var n = u(e, t);
                    n &&
                      n[f] &&
                      ((e[t] = r.value),
                      (r = {
                        configurable: h in r ? r[h] : n[h],
                        enumerable: p in r ? r[p] : n[p],
                        writable: !1,
                      }));
                  }
                  return l(e, t, r);
                }
              : l
            : function (e, t, r) {
                if ((o(e), (t = a(t)), o(r), s))
                  try {
                    return l(e, t, r);
                  } catch (e) {}
                if ("get" in r || "set" in r)
                  throw c("Accessors not supported");
                return "value" in r && (e[t] = r.value), e;
              };
        },
        5687: (e, t, r) => {
          "use strict";
          var n = r(5560),
            s = r(3057),
            i = r(6337),
            o = r(3768),
            a = r(9441),
            c = r(5141),
            l = r(4373),
            u = r(2633),
            p = Object.getOwnPropertyDescriptor;
          t.f = n
            ? p
            : function (e, t) {
                if (((e = a(e)), (t = c(t)), u))
                  try {
                    return p(e, t);
                  } catch (e) {}
                if (l(e, t)) return o(!s(i.f, e, t), e[t]);
              };
        },
        2036: (e, t, r) => {
          "use strict";
          var n = r(4512),
            s = r(347).concat("length", "prototype");
          t.f =
            Object.getOwnPropertyNames ||
            function (e) {
              return n(e, s);
            };
        },
        6841: (e, t) => {
          "use strict";
          t.f = Object.getOwnPropertySymbols;
        },
        3439: (e, t, r) => {
          "use strict";
          var n = r(4373),
            s = r(2073),
            i = r(5809),
            o = r(651),
            a = r(7007),
            c = o("IE_PROTO"),
            l = Object,
            u = l.prototype;
          e.exports = a
            ? l.getPrototypeOf
            : function (e) {
                var t = i(e);
                if (n(t, c)) return t[c];
                var r = t.constructor;
                return s(r) && t instanceof r
                  ? r.prototype
                  : t instanceof l
                  ? u
                  : null;
              };
        },
        3381: (e, t, r) => {
          "use strict";
          var n = r(9036);
          e.exports = n({}.isPrototypeOf);
        },
        4512: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = r(4373),
            i = r(9441),
            o = r(4581).indexOf,
            a = r(6145),
            c = n([].push);
          e.exports = function (e, t) {
            var r,
              n = i(e),
              l = 0,
              u = [];
            for (r in n) !s(a, r) && s(n, r) && c(u, r);
            for (; t.length > l; ) s(n, (r = t[l++])) && (~o(u, r) || c(u, r));
            return u;
          };
        },
        5556: (e, t, r) => {
          "use strict";
          var n = r(4512),
            s = r(347);
          e.exports =
            Object.keys ||
            function (e) {
              return n(e, s);
            };
        },
        6337: (e, t) => {
          "use strict";
          var r = {}.propertyIsEnumerable,
            n = Object.getOwnPropertyDescriptor,
            s = n && !r.call({ 1: 2 }, 1);
          t.f = s
            ? function (e) {
                var t = n(this, e);
                return !!t && t.enumerable;
              }
            : r;
        },
        4619: (e, t, r) => {
          "use strict";
          var n = r(7006),
            s = r(8347),
            i = r(8934);
          e.exports =
            Object.setPrototypeOf ||
            ("__proto__" in {}
              ? (function () {
                  var e,
                    t = !1,
                    r = {};
                  try {
                    (e = n(Object.prototype, "__proto__", "set"))(r, []),
                      (t = r instanceof Array);
                  } catch (e) {}
                  return function (r, n) {
                    return s(r), i(n), t ? e(r, n) : (r.__proto__ = n), r;
                  };
                })()
              : void 0);
        },
        5759: (e, t, r) => {
          "use strict";
          var n = r(7104),
            s = r(5663);
          e.exports = n
            ? {}.toString
            : function () {
                return "[object " + s(this) + "]";
              };
        },
        6034: (e, t, r) => {
          "use strict";
          var n = r(3057),
            s = r(2073),
            i = r(5774),
            o = TypeError;
          e.exports = function (e, t) {
            var r, a;
            if ("string" === t && s((r = e.toString)) && !i((a = n(r, e))))
              return a;
            if (s((r = e.valueOf)) && !i((a = n(r, e)))) return a;
            if ("string" !== t && s((r = e.toString)) && !i((a = n(r, e))))
              return a;
            throw o("Can't convert object to primitive value");
          };
        },
        8195: (e, t, r) => {
          "use strict";
          var n = r(7827),
            s = r(9036),
            i = r(2036),
            o = r(6841),
            a = r(8347),
            c = s([].concat);
          e.exports =
            n("Reflect", "ownKeys") ||
            function (e) {
              var t = i.f(a(e)),
                r = o.f;
              return r ? c(t, r(e)) : t;
            };
        },
        7675: (e) => {
          "use strict";
          e.exports = {};
        },
        3636: (e, t, r) => {
          "use strict";
          var n = r(6381).f;
          e.exports = function (e, t, r) {
            r in e ||
              n(e, r, {
                configurable: !0,
                get: function () {
                  return t[r];
                },
                set: function (e) {
                  t[r] = e;
                },
              });
          };
        },
        8890: (e, t, r) => {
          "use strict";
          var n = r(6153),
            s = TypeError;
          e.exports = function (e) {
            if (n(e)) throw s("Can't call method on " + e);
            return e;
          };
        },
        5051: (e, t, r) => {
          "use strict";
          var n = r(7104),
            s = r(6381).f,
            i = r(8471),
            o = r(4373),
            a = r(5759),
            c = r(6615)("toStringTag");
          e.exports = function (e, t, r, l) {
            if (e) {
              var u = r ? e : e.prototype;
              o(u, c) || s(u, c, { configurable: !0, value: t }),
                l && !n && i(u, "toString", a);
            }
          };
        },
        651: (e, t, r) => {
          "use strict";
          var n = r(3557),
            s = r(7980),
            i = n("keys");
          e.exports = function (e) {
            return i[e] || (i[e] = s(e));
          };
        },
        4993: (e, t, r) => {
          "use strict";
          var n = r(5391),
            s = r(909),
            i = "__core-js_shared__",
            o = n[i] || s(i, {});
          e.exports = o;
        },
        3557: (e, t, r) => {
          "use strict";
          var n = r(3599),
            s = r(4993);
          (e.exports = function (e, t) {
            return s[e] || (s[e] = void 0 !== t ? t : {});
          })("versions", []).push({
            version: "3.32.2",
            mode: n ? "pure" : "global",
            copyright: "© 2014-2023 Denis Pushkarev (zloirock.ru)",
            license: "https://github.com/zloirock/core-js/blob/v3.32.2/LICENSE",
            source: "https://github.com/zloirock/core-js",
          });
        },
        235: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = r(6759),
            i = r(7803),
            o = r(8890),
            a = n("".charAt),
            c = n("".charCodeAt),
            l = n("".slice),
            u = function (e) {
              return function (t, r) {
                var n,
                  u,
                  p = i(o(t)),
                  h = s(r),
                  f = p.length;
                return h < 0 || h >= f
                  ? e
                    ? ""
                    : void 0
                  : (n = c(p, h)) < 55296 ||
                    n > 56319 ||
                    h + 1 === f ||
                    (u = c(p, h + 1)) < 56320 ||
                    u > 57343
                  ? e
                    ? a(p, h)
                    : n
                  : e
                  ? l(p, h, h + 2)
                  : u - 56320 + ((n - 55296) << 10) + 65536;
              };
            };
          e.exports = { codeAt: u(!1), charAt: u(!0) };
        },
        7235: (e, t, r) => {
          "use strict";
          var n = r(6312),
            s = r(7131),
            i = r(5391).String;
          e.exports =
            !!Object.getOwnPropertySymbols &&
            !s(function () {
              var e = Symbol("symbol detection");
              return (
                !i(e) ||
                !(Object(e) instanceof Symbol) ||
                (!Symbol.sham && n && n < 41)
              );
            });
        },
        8630: (e, t, r) => {
          "use strict";
          var n = r(6759),
            s = Math.max,
            i = Math.min;
          e.exports = function (e, t) {
            var r = n(e);
            return r < 0 ? s(r + t, 0) : i(r, t);
          };
        },
        9441: (e, t, r) => {
          "use strict";
          var n = r(6731),
            s = r(8890);
          e.exports = function (e) {
            return n(s(e));
          };
        },
        6759: (e, t, r) => {
          "use strict";
          var n = r(1049);
          e.exports = function (e) {
            var t = +e;
            return t != t || 0 === t ? 0 : n(t);
          };
        },
        2954: (e, t, r) => {
          "use strict";
          var n = r(6759),
            s = Math.min;
          e.exports = function (e) {
            return e > 0 ? s(n(e), 9007199254740991) : 0;
          };
        },
        5809: (e, t, r) => {
          "use strict";
          var n = r(8890),
            s = Object;
          e.exports = function (e) {
            return s(n(e));
          };
        },
        5045: (e, t, r) => {
          "use strict";
          var n = r(3057),
            s = r(5774),
            i = r(3969),
            o = r(3514),
            a = r(6034),
            c = r(6615),
            l = TypeError,
            u = c("toPrimitive");
          e.exports = function (e, t) {
            if (!s(e) || i(e)) return e;
            var r,
              c = o(e, u);
            if (c) {
              if (
                (void 0 === t && (t = "default"),
                (r = n(c, e, t)),
                !s(r) || i(r))
              )
                return r;
              throw l("Can't convert object to primitive value");
            }
            return void 0 === t && (t = "number"), a(e, t);
          };
        },
        5141: (e, t, r) => {
          "use strict";
          var n = r(5045),
            s = r(3969);
          e.exports = function (e) {
            var t = n(e, "string");
            return s(t) ? t : t + "";
          };
        },
        7104: (e, t, r) => {
          "use strict";
          var n = {};
          (n[r(6615)("toStringTag")] = "z"),
            (e.exports = "[object z]" === String(n));
        },
        7803: (e, t, r) => {
          "use strict";
          var n = r(5663),
            s = String;
          e.exports = function (e) {
            if ("Symbol" === n(e))
              throw TypeError("Cannot convert a Symbol value to a string");
            return s(e);
          };
        },
        4003: (e) => {
          "use strict";
          var t = String;
          e.exports = function (e) {
            try {
              return t(e);
            } catch (e) {
              return "Object";
            }
          };
        },
        7980: (e, t, r) => {
          "use strict";
          var n = r(9036),
            s = 0,
            i = Math.random(),
            o = n((1).toString);
          e.exports = function (e) {
            return "Symbol(" + (void 0 === e ? "" : e) + ")_" + o(++s + i, 36);
          };
        },
        1004: (e, t, r) => {
          "use strict";
          var n = r(7235);
          e.exports = n && !Symbol.sham && "symbol" == typeof Symbol.iterator;
        },
        2506: (e, t, r) => {
          "use strict";
          var n = r(5560),
            s = r(7131);
          e.exports =
            n &&
            s(function () {
              return (
                42 !==
                Object.defineProperty(function () {}, "prototype", {
                  value: 42,
                  writable: !1,
                }).prototype
              );
            });
        },
        8698: (e, t, r) => {
          "use strict";
          var n = r(5391),
            s = r(2073),
            i = n.WeakMap;
          e.exports = s(i) && /native code/.test(String(i));
        },
        6615: (e, t, r) => {
          "use strict";
          var n = r(5391),
            s = r(3557),
            i = r(4373),
            o = r(7980),
            a = r(7235),
            c = r(1004),
            l = n.Symbol,
            u = s("wks"),
            p = c ? l.for || l : (l && l.withoutSetter) || o;
          e.exports = function (e) {
            return (
              i(u, e) || (u[e] = a && i(l, e) ? l[e] : p("Symbol." + e)), u[e]
            );
          };
        },
        9005: (e, t, r) => {
          "use strict";
          var n = r(7827),
            s = r(4373),
            i = r(8471),
            o = r(3381),
            a = r(4619),
            c = r(2144),
            l = r(3636),
            u = r(9739),
            p = r(9383),
            h = r(60),
            f = r(927),
            m = r(5560),
            d = r(3599);
          e.exports = function (e, t, r, y) {
            var g = "stackTraceLimit",
              v = y ? 2 : 1,
              b = e.split("."),
              x = b[b.length - 1],
              w = n.apply(null, b);
            if (w) {
              var E = w.prototype;
              if ((!d && s(E, "cause") && delete E.cause, !r)) return w;
              var j = n("Error"),
                O = t(function (e, t) {
                  var r = p(y ? t : e, void 0),
                    n = y ? new w(e) : new w();
                  return (
                    void 0 !== r && i(n, "message", r),
                    f(n, O, n.stack, 2),
                    this && o(E, this) && u(n, this, O),
                    arguments.length > v && h(n, arguments[v]),
                    n
                  );
                });
              if (
                ((O.prototype = E),
                "Error" !== x
                  ? a
                    ? a(O, j)
                    : c(O, j, { name: !0 })
                  : m && g in w && (l(O, w, g), l(O, w, "prepareStackTrace")),
                c(O, w),
                !d)
              )
                try {
                  E.name !== x && i(E, "name", x), (E.constructor = O);
                } catch (e) {}
              return O;
            }
          };
        },
        3970: (e, t, r) => {
          "use strict";
          var n = r(1938),
            s = r(7827),
            i = r(1981),
            o = r(7131),
            a = r(9005),
            c = "AggregateError",
            l = s(c),
            u =
              !o(function () {
                return 1 !== l([1]).errors[0];
              }) &&
              o(function () {
                return 7 !== l([1], c, { cause: 7 }).cause;
              });
          n(
            { global: !0, constructor: !0, arity: 2, forced: u },
            {
              AggregateError: a(
                c,
                function (e) {
                  return function (t, r) {
                    return i(e, this, arguments);
                  };
                },
                u,
                !0
              ),
            }
          );
        },
        2949: (e, t, r) => {
          "use strict";
          var n = r(1938),
            s = r(3381),
            i = r(3439),
            o = r(4619),
            a = r(2144),
            c = r(3628),
            l = r(8471),
            u = r(3768),
            p = r(60),
            h = r(927),
            f = r(9384),
            m = r(9383),
            d = r(6615)("toStringTag"),
            y = Error,
            g = [].push,
            v = function (e, t) {
              var r,
                n = s(b, this);
              o
                ? (r = o(y(), n ? i(this) : b))
                : ((r = n ? this : c(b)), l(r, d, "Error")),
                void 0 !== t && l(r, "message", m(t)),
                h(r, v, r.stack, 1),
                arguments.length > 2 && p(r, arguments[2]);
              var a = [];
              return f(e, g, { that: a }), l(r, "errors", a), r;
            };
          o ? o(v, y) : a(v, y, { name: !0 });
          var b = (v.prototype = c(y.prototype, {
            constructor: u(1, v),
            message: u(1, ""),
            name: u(1, "AggregateError"),
          }));
          n({ global: !0, constructor: !0, arity: 2 }, { AggregateError: v });
        },
        1095: (e, t, r) => {
          "use strict";
          r(2949);
        },
        6396: (e, t, r) => {
          "use strict";
          var n = r(9441),
            s = r(6065),
            i = r(1113),
            o = r(9257),
            a = r(6381).f,
            c = r(6188),
            l = r(789),
            u = r(3599),
            p = r(5560),
            h = "Array Iterator",
            f = o.set,
            m = o.getterFor(h);
          e.exports = c(
            Array,
            "Array",
            function (e, t) {
              f(this, { type: h, target: n(e), index: 0, kind: t });
            },
            function () {
              var e = m(this),
                t = e.target,
                r = e.kind,
                n = e.index++;
              if (!t || n >= t.length)
                return (e.target = void 0), l(void 0, !0);
              switch (r) {
                case "keys":
                  return l(n, !1);
                case "values":
                  return l(t[n], !1);
              }
              return l([n, t[n]], !1);
            },
            "values"
          );
          var d = (i.Arguments = i.Array);
          if (
            (s("keys"),
            s("values"),
            s("entries"),
            !u && p && "values" !== d.name)
          )
            try {
              a(d, "name", { value: "values" });
            } catch (e) {}
        },
        9356: (e, t, r) => {
          "use strict";
          var n = r(1938),
            s = r(5391),
            i = r(1981),
            o = r(9005),
            a = "WebAssembly",
            c = s[a],
            l = 7 !== Error("e", { cause: 7 }).cause,
            u = function (e, t) {
              var r = {};
              (r[e] = o(e, t, l)),
                n({ global: !0, constructor: !0, arity: 1, forced: l }, r);
            },
            p = function (e, t) {
              if (c && c[e]) {
                var r = {};
                (r[e] = o(a + "." + e, t, l)),
                  n(
                    {
                      target: a,
                      stat: !0,
                      constructor: !0,
                      arity: 1,
                      forced: l,
                    },
                    r
                  );
              }
            };
          u("Error", function (e) {
            return function (t) {
              return i(e, this, arguments);
            };
          }),
            u("EvalError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            u("RangeError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            u("ReferenceError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            u("SyntaxError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            u("TypeError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            u("URIError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            p("CompileError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            p("LinkError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            }),
            p("RuntimeError", function (e) {
              return function (t) {
                return i(e, this, arguments);
              };
            });
        },
        7632: (e, t, r) => {
          "use strict";
          var n = r(235).charAt,
            s = r(7803),
            i = r(9257),
            o = r(6188),
            a = r(789),
            c = "String Iterator",
            l = i.set,
            u = i.getterFor(c);
          o(
            String,
            "String",
            function (e) {
              l(this, { type: c, string: s(e), index: 0 });
            },
            function () {
              var e,
                t = u(this),
                r = t.string,
                s = t.index;
              return s >= r.length
                ? a(void 0, !0)
                : ((e = n(r, s)), (t.index += e.length), a(e, !1));
            }
          );
        },
        4506: (e, t, r) => {
          "use strict";
          r(1095);
        },
        813: (e, t, r) => {
          "use strict";
          r(6396);
          var n = r(4740),
            s = r(5391),
            i = r(5663),
            o = r(8471),
            a = r(1113),
            c = r(6615)("toStringTag");
          for (var l in n) {
            var u = s[l],
              p = u && u.prototype;
            p && i(p) !== c && o(p, c, l), (a[l] = a.Array);
          }
        },
        8199: (e, t, r) => {
          "use strict";
          r(4506);
          var n = r(8232);
          r(813), (e.exports = n);
        },
        4744: (e) => {
          "use strict";
          var t = function (e) {
            return (
              (function (e) {
                return !!e && "object" == typeof e;
              })(e) &&
              !(function (e) {
                var t = Object.prototype.toString.call(e);
                return (
                  "[object RegExp]" === t ||
                  "[object Date]" === t ||
                  (function (e) {
                    return e.$$typeof === r;
                  })(e)
                );
              })(e)
            );
          };
          var r =
            "function" == typeof Symbol && Symbol.for
              ? Symbol.for("react.element")
              : 60103;
          function n(e, t) {
            return !1 !== t.clone && t.isMergeableObject(e)
              ? c(((r = e), Array.isArray(r) ? [] : {}), e, t)
              : e;
            var r;
          }
          function s(e, t, r) {
            return e.concat(t).map(function (e) {
              return n(e, r);
            });
          }
          function i(e) {
            return Object.keys(e).concat(
              (function (e) {
                return Object.getOwnPropertySymbols
                  ? Object.getOwnPropertySymbols(e).filter(function (t) {
                      return Object.propertyIsEnumerable.call(e, t);
                    })
                  : [];
              })(e)
            );
          }
          function o(e, t) {
            try {
              return t in e;
            } catch (e) {
              return !1;
            }
          }
          function a(e, t, r) {
            var s = {};
            return (
              r.isMergeableObject(e) &&
                i(e).forEach(function (t) {
                  s[t] = n(e[t], r);
                }),
              i(t).forEach(function (i) {
                (function (e, t) {
                  return (
                    o(e, t) &&
                    !(
                      Object.hasOwnProperty.call(e, t) &&
                      Object.propertyIsEnumerable.call(e, t)
                    )
                  );
                })(e, i) ||
                  (o(e, i) && r.isMergeableObject(t[i])
                    ? (s[i] = (function (e, t) {
                        if (!t.customMerge) return c;
                        var r = t.customMerge(e);
                        return "function" == typeof r ? r : c;
                      })(i, r)(e[i], t[i], r))
                    : (s[i] = n(t[i], r)));
              }),
              s
            );
          }
          function c(e, r, i) {
            ((i = i || {}).arrayMerge = i.arrayMerge || s),
              (i.isMergeableObject = i.isMergeableObject || t),
              (i.cloneUnlessOtherwiseSpecified = n);
            var o = Array.isArray(r);
            return o === Array.isArray(e)
              ? o
                ? i.arrayMerge(e, r, i)
                : a(e, r, i)
              : n(r, i);
          }
          c.all = function (e, t) {
            if (!Array.isArray(e))
              throw new Error("first argument should be an array");
            return e.reduce(function (e, r) {
              return c(e, r, t);
            }, {});
          };
          var l = c;
          e.exports = l;
        },
        9353: (e) => {
          "use strict";
          var t = Object.prototype.toString,
            r = Math.max,
            n = function (e, t) {
              for (var r = [], n = 0; n < e.length; n += 1) r[n] = e[n];
              for (var s = 0; s < t.length; s += 1) r[s + e.length] = t[s];
              return r;
            };
          e.exports = function (e) {
            var s = this;
            if ("function" != typeof s || "[object Function]" !== t.apply(s))
              throw new TypeError(
                "Function.prototype.bind called on incompatible " + s
              );
            for (
              var i,
                o = (function (e, t) {
                  for (
                    var r = [], n = t || 0, s = 0;
                    n < e.length;
                    n += 1, s += 1
                  )
                    r[s] = e[n];
                  return r;
                })(arguments, 1),
                a = r(0, s.length - o.length),
                c = [],
                l = 0;
              l < a;
              l++
            )
              c[l] = "$" + l;
            if (
              ((i = Function(
                "binder",
                "return function (" +
                  (function (e, t) {
                    for (var r = "", n = 0; n < e.length; n += 1)
                      (r += e[n]), n + 1 < e.length && (r += t);
                    return r;
                  })(c, ",") +
                  "){ return binder.apply(this,arguments); }"
              )(function () {
                if (this instanceof i) {
                  var t = s.apply(this, n(o, arguments));
                  return Object(t) === t ? t : this;
                }
                return s.apply(e, n(o, arguments));
              })),
              s.prototype)
            ) {
              var u = function () {};
              (u.prototype = s.prototype),
                (i.prototype = new u()),
                (u.prototype = null);
            }
            return i;
          };
        },
        6743: (e, t, r) => {
          "use strict";
          var n = r(9353);
          e.exports = Function.prototype.bind || n;
        },
        453: (e, t, r) => {
          "use strict";
          var n,
            s = SyntaxError,
            i = Function,
            o = TypeError,
            a = function (e) {
              try {
                return i('"use strict"; return (' + e + ").constructor;")();
              } catch (e) {}
            },
            c = Object.getOwnPropertyDescriptor;
          if (c)
            try {
              c({}, "");
            } catch (e) {
              c = null;
            }
          var l = function () {
              throw new o();
            },
            u = c
              ? (function () {
                  try {
                    return l;
                  } catch (e) {
                    try {
                      return c(arguments, "callee").get;
                    } catch (e) {
                      return l;
                    }
                  }
                })()
              : l,
            p = r(4039)(),
            h = r(24)(),
            f =
              Object.getPrototypeOf ||
              (h
                ? function (e) {
                    return e.__proto__;
                  }
                : null),
            m = {},
            d = "undefined" != typeof Uint8Array && f ? f(Uint8Array) : n,
            y = {
              "%AggregateError%":
                "undefined" == typeof AggregateError ? n : AggregateError,
              "%Array%": Array,
              "%ArrayBuffer%":
                "undefined" == typeof ArrayBuffer ? n : ArrayBuffer,
              "%ArrayIteratorPrototype%": p && f ? f([][Symbol.iterator]()) : n,
              "%AsyncFromSyncIteratorPrototype%": n,
              "%AsyncFunction%": m,
              "%AsyncGenerator%": m,
              "%AsyncGeneratorFunction%": m,
              "%AsyncIteratorPrototype%": m,
              "%Atomics%": "undefined" == typeof Atomics ? n : Atomics,
              "%BigInt%": "undefined" == typeof BigInt ? n : BigInt,
              "%BigInt64Array%":
                "undefined" == typeof BigInt64Array ? n : BigInt64Array,
              "%BigUint64Array%":
                "undefined" == typeof BigUint64Array ? n : BigUint64Array,
              "%Boolean%": Boolean,
              "%DataView%": "undefined" == typeof DataView ? n : DataView,
              "%Date%": Date,
              "%decodeURI%": decodeURI,
              "%decodeURIComponent%": decodeURIComponent,
              "%encodeURI%": encodeURI,
              "%encodeURIComponent%": encodeURIComponent,
              "%Error%": Error,
              "%eval%": eval,
              "%EvalError%": EvalError,
              "%Float32Array%":
                "undefined" == typeof Float32Array ? n : Float32Array,
              "%Float64Array%":
                "undefined" == typeof Float64Array ? n : Float64Array,
              "%FinalizationRegistry%":
                "undefined" == typeof FinalizationRegistry
                  ? n
                  : FinalizationRegistry,
              "%Function%": i,
              "%GeneratorFunction%": m,
              "%Int8Array%": "undefined" == typeof Int8Array ? n : Int8Array,
              "%Int16Array%": "undefined" == typeof Int16Array ? n : Int16Array,
              "%Int32Array%": "undefined" == typeof Int32Array ? n : Int32Array,
              "%isFinite%": isFinite,
              "%isNaN%": isNaN,
              "%IteratorPrototype%": p && f ? f(f([][Symbol.iterator]())) : n,
              "%JSON%": "object" == typeof JSON ? JSON : n,
              "%Map%": "undefined" == typeof Map ? n : Map,
              "%MapIteratorPrototype%":
                "undefined" != typeof Map && p && f
                  ? f(new Map()[Symbol.iterator]())
                  : n,
              "%Math%": Math,
              "%Number%": Number,
              "%Object%": Object,
              "%parseFloat%": parseFloat,
              "%parseInt%": parseInt,
              "%Promise%": "undefined" == typeof Promise ? n : Promise,
              "%Proxy%": "undefined" == typeof Proxy ? n : Proxy,
              "%RangeError%": RangeError,
              "%ReferenceError%": ReferenceError,
              "%Reflect%": "undefined" == typeof Reflect ? n : Reflect,
              "%RegExp%": RegExp,
              "%Set%": "undefined" == typeof Set ? n : Set,
              "%SetIteratorPrototype%":
                "undefined" != typeof Set && p && f
                  ? f(new Set()[Symbol.iterator]())
                  : n,
              "%SharedArrayBuffer%":
                "undefined" == typeof SharedArrayBuffer ? n : SharedArrayBuffer,
              "%String%": String,
              "%StringIteratorPrototype%":
                p && f ? f(""[Symbol.iterator]()) : n,
              "%Symbol%": p ? Symbol : n,
              "%SyntaxError%": s,
              "%ThrowTypeError%": u,
              "%TypedArray%": d,
              "%TypeError%": o,
              "%Uint8Array%": "undefined" == typeof Uint8Array ? n : Uint8Array,
              "%Uint8ClampedArray%":
                "undefined" == typeof Uint8ClampedArray ? n : Uint8ClampedArray,
              "%Uint16Array%":
                "undefined" == typeof Uint16Array ? n : Uint16Array,
              "%Uint32Array%":
                "undefined" == typeof Uint32Array ? n : Uint32Array,
              "%URIError%": URIError,
              "%WeakMap%": "undefined" == typeof WeakMap ? n : WeakMap,
              "%WeakRef%": "undefined" == typeof WeakRef ? n : WeakRef,
              "%WeakSet%": "undefined" == typeof WeakSet ? n : WeakSet,
            };
          if (f)
            try {
              null.error;
            } catch (e) {
              var g = f(f(e));
              y["%Error.prototype%"] = g;
            }
          var v = function e(t) {
              var r;
              if ("%AsyncFunction%" === t) r = a("async function () {}");
              else if ("%GeneratorFunction%" === t) r = a("function* () {}");
              else if ("%AsyncGeneratorFunction%" === t)
                r = a("async function* () {}");
              else if ("%AsyncGenerator%" === t) {
                var n = e("%AsyncGeneratorFunction%");
                n && (r = n.prototype);
              } else if ("%AsyncIteratorPrototype%" === t) {
                var s = e("%AsyncGenerator%");
                s && f && (r = f(s.prototype));
              }
              return (y[t] = r), r;
            },
            b = {
              "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
              "%ArrayPrototype%": ["Array", "prototype"],
              "%ArrayProto_entries%": ["Array", "prototype", "entries"],
              "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
              "%ArrayProto_keys%": ["Array", "prototype", "keys"],
              "%ArrayProto_values%": ["Array", "prototype", "values"],
              "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
              "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
              "%AsyncGeneratorPrototype%": [
                "AsyncGeneratorFunction",
                "prototype",
                "prototype",
              ],
              "%BooleanPrototype%": ["Boolean", "prototype"],
              "%DataViewPrototype%": ["DataView", "prototype"],
              "%DatePrototype%": ["Date", "prototype"],
              "%ErrorPrototype%": ["Error", "prototype"],
              "%EvalErrorPrototype%": ["EvalError", "prototype"],
              "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
              "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
              "%FunctionPrototype%": ["Function", "prototype"],
              "%Generator%": ["GeneratorFunction", "prototype"],
              "%GeneratorPrototype%": [
                "GeneratorFunction",
                "prototype",
                "prototype",
              ],
              "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
              "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
              "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
              "%JSONParse%": ["JSON", "parse"],
              "%JSONStringify%": ["JSON", "stringify"],
              "%MapPrototype%": ["Map", "prototype"],
              "%NumberPrototype%": ["Number", "prototype"],
              "%ObjectPrototype%": ["Object", "prototype"],
              "%ObjProto_toString%": ["Object", "prototype", "toString"],
              "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
              "%PromisePrototype%": ["Promise", "prototype"],
              "%PromiseProto_then%": ["Promise", "prototype", "then"],
              "%Promise_all%": ["Promise", "all"],
              "%Promise_reject%": ["Promise", "reject"],
              "%Promise_resolve%": ["Promise", "resolve"],
              "%RangeErrorPrototype%": ["RangeError", "prototype"],
              "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
              "%RegExpPrototype%": ["RegExp", "prototype"],
              "%SetPrototype%": ["Set", "prototype"],
              "%SharedArrayBufferPrototype%": [
                "SharedArrayBuffer",
                "prototype",
              ],
              "%StringPrototype%": ["String", "prototype"],
              "%SymbolPrototype%": ["Symbol", "prototype"],
              "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
              "%TypedArrayPrototype%": ["TypedArray", "prototype"],
              "%TypeErrorPrototype%": ["TypeError", "prototype"],
              "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
              "%Uint8ClampedArrayPrototype%": [
                "Uint8ClampedArray",
                "prototype",
              ],
              "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
              "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
              "%URIErrorPrototype%": ["URIError", "prototype"],
              "%WeakMapPrototype%": ["WeakMap", "prototype"],
              "%WeakSetPrototype%": ["WeakSet", "prototype"],
            },
            x = r(6743),
            w = r(9030),
            E = x.call(Function.call, Array.prototype.concat),
            j = x.call(Function.apply, Array.prototype.splice),
            O = x.call(Function.call, String.prototype.replace),
            S = x.call(Function.call, String.prototype.slice),
            P = x.call(Function.call, RegExp.prototype.exec),
            A =
              /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
            $ = /\\(\\)?/g,
            _ = function (e, t) {
              var r,
                n = e;
              if ((w(b, n) && (n = "%" + (r = b[n])[0] + "%"), w(y, n))) {
                var i = y[n];
                if ((i === m && (i = v(n)), void 0 === i && !t))
                  throw new o(
                    "intrinsic " +
                      e +
                      " exists, but is not available. Please file an issue!"
                  );
                return { alias: r, name: n, value: i };
              }
              throw new s("intrinsic " + e + " does not exist!");
            };
          e.exports = function (e, t) {
            if ("string" != typeof e || 0 === e.length)
              throw new o("intrinsic name must be a non-empty string");
            if (arguments.length > 1 && "boolean" != typeof t)
              throw new o('"allowMissing" argument must be a boolean');
            if (null === P(/^%?[^%]*%?$/, e))
              throw new s(
                "`%` may not be present anywhere but at the beginning and end of the intrinsic name"
              );
            var r = (function (e) {
                var t = S(e, 0, 1),
                  r = S(e, -1);
                if ("%" === t && "%" !== r)
                  throw new s("invalid intrinsic syntax, expected closing `%`");
                if ("%" === r && "%" !== t)
                  throw new s("invalid intrinsic syntax, expected opening `%`");
                var n = [];
                return (
                  O(e, A, function (e, t, r, s) {
                    n[n.length] = r ? O(s, $, "$1") : t || e;
                  }),
                  n
                );
              })(e),
              n = r.length > 0 ? r[0] : "",
              i = _("%" + n + "%", t),
              a = i.name,
              l = i.value,
              u = !1,
              p = i.alias;
            p && ((n = p[0]), j(r, E([0, 1], p)));
            for (var h = 1, f = !0; h < r.length; h += 1) {
              var m = r[h],
                d = S(m, 0, 1),
                g = S(m, -1);
              if (
                ('"' === d ||
                  "'" === d ||
                  "`" === d ||
                  '"' === g ||
                  "'" === g ||
                  "`" === g) &&
                d !== g
              )
                throw new s(
                  "property names with quotes must have matching quotes"
                );
              if (
                (("constructor" !== m && f) || (u = !0),
                w(y, (a = "%" + (n += "." + m) + "%")))
              )
                l = y[a];
              else if (null != l) {
                if (!(m in l)) {
                  if (!t)
                    throw new o(
                      "base intrinsic for " +
                        e +
                        " exists, but the property is not available."
                    );
                  return;
                }
                if (c && h + 1 >= r.length) {
                  var v = c(l, m);
                  l =
                    (f = !!v) && "get" in v && !("originalValue" in v.get)
                      ? v.get
                      : l[m];
                } else (f = w(l, m)), (l = l[m]);
                f && !u && (y[a] = l);
              }
            }
            return l;
          };
        },
        24: (e) => {
          "use strict";
          var t = { foo: {} },
            r = Object;
          e.exports = function () {
            return (
              { __proto__: t }.foo === t.foo &&
              !({ __proto__: null } instanceof r)
            );
          };
        },
        4039: (e, t, r) => {
          "use strict";
          var n = "undefined" != typeof Symbol && Symbol,
            s = r(1333);
          e.exports = function () {
            return (
              "function" == typeof n &&
              "function" == typeof Symbol &&
              "symbol" == typeof n("foo") &&
              "symbol" == typeof Symbol("bar") &&
              s()
            );
          };
        },
        1333: (e) => {
          "use strict";
          e.exports = function () {
            if (
              "function" != typeof Symbol ||
              "function" != typeof Object.getOwnPropertySymbols
            )
              return !1;
            if ("symbol" == typeof Symbol.iterator) return !0;
            var e = {},
              t = Symbol("test"),
              r = Object(t);
            if ("string" == typeof t) return !1;
            if ("[object Symbol]" !== Object.prototype.toString.call(t))
              return !1;
            if ("[object Symbol]" !== Object.prototype.toString.call(r))
              return !1;
            for (t in ((e[t] = 42), e)) return !1;
            if ("function" == typeof Object.keys && 0 !== Object.keys(e).length)
              return !1;
            if (
              "function" == typeof Object.getOwnPropertyNames &&
              0 !== Object.getOwnPropertyNames(e).length
            )
              return !1;
            var n = Object.getOwnPropertySymbols(e);
            if (1 !== n.length || n[0] !== t) return !1;
            if (!Object.prototype.propertyIsEnumerable.call(e, t)) return !1;
            if ("function" == typeof Object.getOwnPropertyDescriptor) {
              var s = Object.getOwnPropertyDescriptor(e, t);
              if (42 !== s.value || !0 !== s.enumerable) return !1;
            }
            return !0;
          };
        },
        9030: (e, t, r) => {
          "use strict";
          var n = r(6743);
          e.exports = n.call(Function.call, Object.prototype.hasOwnProperty);
        },
        5580: (e, t, r) => {
          var n = r(6110)(r(9325), "DataView");
          e.exports = n;
        },
        1549: (e, t, r) => {
          var n = r(2032),
            s = r(3862),
            i = r(6721),
            o = r(2749),
            a = r(5749);
          function c(e) {
            var t = -1,
              r = null == e ? 0 : e.length;
            for (this.clear(); ++t < r; ) {
              var n = e[t];
              this.set(n[0], n[1]);
            }
          }
          (c.prototype.clear = n),
            (c.prototype.delete = s),
            (c.prototype.get = i),
            (c.prototype.has = o),
            (c.prototype.set = a),
            (e.exports = c);
        },
        79: (e, t, r) => {
          var n = r(3702),
            s = r(80),
            i = r(4739),
            o = r(8655),
            a = r(1175);
          function c(e) {
            var t = -1,
              r = null == e ? 0 : e.length;
            for (this.clear(); ++t < r; ) {
              var n = e[t];
              this.set(n[0], n[1]);
            }
          }
          (c.prototype.clear = n),
            (c.prototype.delete = s),
            (c.prototype.get = i),
            (c.prototype.has = o),
            (c.prototype.set = a),
            (e.exports = c);
        },
        8223: (e, t, r) => {
          var n = r(6110)(r(9325), "Map");
          e.exports = n;
        },
        3661: (e, t, r) => {
          var n = r(3040),
            s = r(7670),
            i = r(289),
            o = r(4509),
            a = r(5330);
          function c(e) {
            var t = -1,
              r = null == e ? 0 : e.length;
            for (this.clear(); ++t < r; ) {
              var n = e[t];
              this.set(n[0], n[1]);
            }
          }
          (c.prototype.clear = n),
            (c.prototype.delete = s),
            (c.prototype.get = i),
            (c.prototype.has = o),
            (c.prototype.set = a),
            (e.exports = c);
        },
        2804: (e, t, r) => {
          var n = r(6110)(r(9325), "Promise");
          e.exports = n;
        },
        6545: (e, t, r) => {
          var n = r(6110)(r(9325), "Set");
          e.exports = n;
        },
        1240: (e, t, r) => {
          var n = r(3661),
            s = r(1380),
            i = r(1459);
          function o(e) {
            var t = -1,
              r = null == e ? 0 : e.length;
            for (this.__data__ = new n(); ++t < r; ) this.add(e[t]);
          }
          (o.prototype.add = o.prototype.push = s),
            (o.prototype.has = i),
            (e.exports = o);
        },
        7217: (e, t, r) => {
          var n = r(79),
            s = r(1420),
            i = r(938),
            o = r(3605),
            a = r(9817),
            c = r(945);
          function l(e) {
            var t = (this.__data__ = new n(e));
            this.size = t.size;
          }
          (l.prototype.clear = s),
            (l.prototype.delete = i),
            (l.prototype.get = o),
            (l.prototype.has = a),
            (l.prototype.set = c),
            (e.exports = l);
        },
        1873: (e, t, r) => {
          var n = r(9325).Symbol;
          e.exports = n;
        },
        7828: (e, t, r) => {
          var n = r(9325).Uint8Array;
          e.exports = n;
        },
        8303: (e, t, r) => {
          var n = r(6110)(r(9325), "WeakMap");
          e.exports = n;
        },
        9770: (e) => {
          e.exports = function (e, t) {
            for (
              var r = -1, n = null == e ? 0 : e.length, s = 0, i = [];
              ++r < n;

            ) {
              var o = e[r];
              t(o, r, e) && (i[s++] = o);
            }
            return i;
          };
        },
        695: (e, t, r) => {
          var n = r(8096),
            s = r(2428),
            i = r(6449),
            o = r(3656),
            a = r(361),
            c = r(7167),
            l = Object.prototype.hasOwnProperty;
          e.exports = function (e, t) {
            var r = i(e),
              u = !r && s(e),
              p = !r && !u && o(e),
              h = !r && !u && !p && c(e),
              f = r || u || p || h,
              m = f ? n(e.length, String) : [],
              d = m.length;
            for (var y in e)
              (!t && !l.call(e, y)) ||
                (f &&
                  ("length" == y ||
                    (p && ("offset" == y || "parent" == y)) ||
                    (h &&
                      ("buffer" == y ||
                        "byteLength" == y ||
                        "byteOffset" == y)) ||
                    a(y, d))) ||
                m.push(y);
            return m;
          };
        },
        4528: (e) => {
          e.exports = function (e, t) {
            for (var r = -1, n = t.length, s = e.length; ++r < n; )
              e[s + r] = t[r];
            return e;
          };
        },
        4248: (e) => {
          e.exports = function (e, t) {
            for (var r = -1, n = null == e ? 0 : e.length; ++r < n; )
              if (t(e[r], r, e)) return !0;
            return !1;
          };
        },
        6025: (e, t, r) => {
          var n = r(5288);
          e.exports = function (e, t) {
            for (var r = e.length; r--; ) if (n(e[r][0], t)) return r;
            return -1;
          };
        },
        2199: (e, t, r) => {
          var n = r(4528),
            s = r(6449);
          e.exports = function (e, t, r) {
            var i = t(e);
            return s(e) ? i : n(i, r(e));
          };
        },
        2552: (e, t, r) => {
          var n = r(1873),
            s = r(659),
            i = r(9350),
            o = n ? n.toStringTag : void 0;
          e.exports = function (e) {
            return null == e
              ? void 0 === e
                ? "[object Undefined]"
                : "[object Null]"
              : o && o in Object(e)
              ? s(e)
              : i(e);
          };
        },
        7534: (e, t, r) => {
          var n = r(2552),
            s = r(346);
          e.exports = function (e) {
            return s(e) && "[object Arguments]" == n(e);
          };
        },
        270: (e, t, r) => {
          var n = r(7068),
            s = r(346);
          e.exports = function e(t, r, i, o, a) {
            return (
              t === r ||
              (null == t || null == r || (!s(t) && !s(r))
                ? t != t && r != r
                : n(t, r, i, o, e, a))
            );
          };
        },
        7068: (e, t, r) => {
          var n = r(7217),
            s = r(5911),
            i = r(1986),
            o = r(689),
            a = r(5861),
            c = r(6449),
            l = r(3656),
            u = r(7167),
            p = "[object Arguments]",
            h = "[object Array]",
            f = "[object Object]",
            m = Object.prototype.hasOwnProperty;
          e.exports = function (e, t, r, d, y, g) {
            var v = c(e),
              b = c(t),
              x = v ? h : a(e),
              w = b ? h : a(t),
              E = (x = x == p ? f : x) == f,
              j = (w = w == p ? f : w) == f,
              O = x == w;
            if (O && l(e)) {
              if (!l(t)) return !1;
              (v = !0), (E = !1);
            }
            if (O && !E)
              return (
                g || (g = new n()),
                v || u(e) ? s(e, t, r, d, y, g) : i(e, t, x, r, d, y, g)
              );
            if (!(1 & r)) {
              var S = E && m.call(e, "__wrapped__"),
                P = j && m.call(t, "__wrapped__");
              if (S || P) {
                var A = S ? e.value() : e,
                  $ = P ? t.value() : t;
                return g || (g = new n()), y(A, $, r, d, g);
              }
            }
            return !!O && (g || (g = new n()), o(e, t, r, d, y, g));
          };
        },
        5083: (e, t, r) => {
          var n = r(1882),
            s = r(7296),
            i = r(3805),
            o = r(7473),
            a = /^\[object .+?Constructor\]$/,
            c = Function.prototype,
            l = Object.prototype,
            u = c.toString,
            p = l.hasOwnProperty,
            h = RegExp(
              "^" +
                u
                  .call(p)
                  .replace(/[\\^$.*+?()[\]{}|]/g, "\\$&")
                  .replace(
                    /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                    "$1.*?"
                  ) +
                "$"
            );
          e.exports = function (e) {
            return !(!i(e) || s(e)) && (n(e) ? h : a).test(o(e));
          };
        },
        4901: (e, t, r) => {
          var n = r(2552),
            s = r(294),
            i = r(346),
            o = {};
          (o["[object Float32Array]"] =
            o["[object Float64Array]"] =
            o["[object Int8Array]"] =
            o["[object Int16Array]"] =
            o["[object Int32Array]"] =
            o["[object Uint8Array]"] =
            o["[object Uint8ClampedArray]"] =
            o["[object Uint16Array]"] =
            o["[object Uint32Array]"] =
              !0),
            (o["[object Arguments]"] =
              o["[object Array]"] =
              o["[object ArrayBuffer]"] =
              o["[object Boolean]"] =
              o["[object DataView]"] =
              o["[object Date]"] =
              o["[object Error]"] =
              o["[object Function]"] =
              o["[object Map]"] =
              o["[object Number]"] =
              o["[object Object]"] =
              o["[object RegExp]"] =
              o["[object Set]"] =
              o["[object String]"] =
              o["[object WeakMap]"] =
                !1),
            (e.exports = function (e) {
              return i(e) && s(e.length) && !!o[n(e)];
            });
        },
        8984: (e, t, r) => {
          var n = r(5527),
            s = r(3650),
            i = Object.prototype.hasOwnProperty;
          e.exports = function (e) {
            if (!n(e)) return s(e);
            var t = [];
            for (var r in Object(e))
              i.call(e, r) && "constructor" != r && t.push(r);
            return t;
          };
        },
        8096: (e) => {
          e.exports = function (e, t) {
            for (var r = -1, n = Array(e); ++r < e; ) n[r] = t(r);
            return n;
          };
        },
        7301: (e) => {
          e.exports = function (e) {
            return function (t) {
              return e(t);
            };
          };
        },
        9219: (e) => {
          e.exports = function (e, t) {
            return e.has(t);
          };
        },
        5481: (e, t, r) => {
          var n = r(9325)["__core-js_shared__"];
          e.exports = n;
        },
        5911: (e, t, r) => {
          var n = r(1240),
            s = r(4248),
            i = r(9219);
          e.exports = function (e, t, r, o, a, c) {
            var l = 1 & r,
              u = e.length,
              p = t.length;
            if (u != p && !(l && p > u)) return !1;
            var h = c.get(e),
              f = c.get(t);
            if (h && f) return h == t && f == e;
            var m = -1,
              d = !0,
              y = 2 & r ? new n() : void 0;
            for (c.set(e, t), c.set(t, e); ++m < u; ) {
              var g = e[m],
                v = t[m];
              if (o) var b = l ? o(v, g, m, t, e, c) : o(g, v, m, e, t, c);
              if (void 0 !== b) {
                if (b) continue;
                d = !1;
                break;
              }
              if (y) {
                if (
                  !s(t, function (e, t) {
                    if (!i(y, t) && (g === e || a(g, e, r, o, c)))
                      return y.push(t);
                  })
                ) {
                  d = !1;
                  break;
                }
              } else if (g !== v && !a(g, v, r, o, c)) {
                d = !1;
                break;
              }
            }
            return c.delete(e), c.delete(t), d;
          };
        },
        1986: (e, t, r) => {
          var n = r(1873),
            s = r(7828),
            i = r(5288),
            o = r(5911),
            a = r(317),
            c = r(4247),
            l = n ? n.prototype : void 0,
            u = l ? l.valueOf : void 0;
          e.exports = function (e, t, r, n, l, p, h) {
            switch (r) {
              case "[object DataView]":
                if (
                  e.byteLength != t.byteLength ||
                  e.byteOffset != t.byteOffset
                )
                  return !1;
                (e = e.buffer), (t = t.buffer);
              case "[object ArrayBuffer]":
                return !(
                  e.byteLength != t.byteLength || !p(new s(e), new s(t))
                );
              case "[object Boolean]":
              case "[object Date]":
              case "[object Number]":
                return i(+e, +t);
              case "[object Error]":
                return e.name == t.name && e.message == t.message;
              case "[object RegExp]":
              case "[object String]":
                return e == t + "";
              case "[object Map]":
                var f = a;
              case "[object Set]":
                var m = 1 & n;
                if ((f || (f = c), e.size != t.size && !m)) return !1;
                var d = h.get(e);
                if (d) return d == t;
                (n |= 2), h.set(e, t);
                var y = o(f(e), f(t), n, l, p, h);
                return h.delete(e), y;
              case "[object Symbol]":
                if (u) return u.call(e) == u.call(t);
            }
            return !1;
          };
        },
        689: (e, t, r) => {
          var n = r(2),
            s = Object.prototype.hasOwnProperty;
          e.exports = function (e, t, r, i, o, a) {
            var c = 1 & r,
              l = n(e),
              u = l.length;
            if (u != n(t).length && !c) return !1;
            for (var p = u; p--; ) {
              var h = l[p];
              if (!(c ? h in t : s.call(t, h))) return !1;
            }
            var f = a.get(e),
              m = a.get(t);
            if (f && m) return f == t && m == e;
            var d = !0;
            a.set(e, t), a.set(t, e);
            for (var y = c; ++p < u; ) {
              var g = e[(h = l[p])],
                v = t[h];
              if (i) var b = c ? i(v, g, h, t, e, a) : i(g, v, h, e, t, a);
              if (!(void 0 === b ? g === v || o(g, v, r, i, a) : b)) {
                d = !1;
                break;
              }
              y || (y = "constructor" == h);
            }
            if (d && !y) {
              var x = e.constructor,
                w = t.constructor;
              x == w ||
                !("constructor" in e) ||
                !("constructor" in t) ||
                ("function" == typeof x &&
                  x instanceof x &&
                  "function" == typeof w &&
                  w instanceof w) ||
                (d = !1);
            }
            return a.delete(e), a.delete(t), d;
          };
        },
        4840: (e, t, r) => {
          var n = "object" == typeof r.g && r.g && r.g.Object === Object && r.g;
          e.exports = n;
        },
        2: (e, t, r) => {
          var n = r(2199),
            s = r(4664),
            i = r(5950);
          e.exports = function (e) {
            return n(e, i, s);
          };
        },
        2651: (e, t, r) => {
          var n = r(4218);
          e.exports = function (e, t) {
            var r = e.__data__;
            return n(t) ? r["string" == typeof t ? "string" : "hash"] : r.map;
          };
        },
        6110: (e, t, r) => {
          var n = r(5083),
            s = r(392);
          e.exports = function (e, t) {
            var r = s(e, t);
            return n(r) ? r : void 0;
          };
        },
        659: (e, t, r) => {
          var n = r(1873),
            s = Object.prototype,
            i = s.hasOwnProperty,
            o = s.toString,
            a = n ? n.toStringTag : void 0;
          e.exports = function (e) {
            var t = i.call(e, a),
              r = e[a];
            try {
              e[a] = void 0;
              var n = !0;
            } catch (e) {}
            var s = o.call(e);
            return n && (t ? (e[a] = r) : delete e[a]), s;
          };
        },
        4664: (e, t, r) => {
          var n = r(9770),
            s = r(3345),
            i = Object.prototype.propertyIsEnumerable,
            o = Object.getOwnPropertySymbols,
            a = o
              ? function (e) {
                  return null == e
                    ? []
                    : ((e = Object(e)),
                      n(o(e), function (t) {
                        return i.call(e, t);
                      }));
                }
              : s;
          e.exports = a;
        },
        5861: (e, t, r) => {
          var n = r(5580),
            s = r(8223),
            i = r(2804),
            o = r(6545),
            a = r(8303),
            c = r(2552),
            l = r(7473),
            u = "[object Map]",
            p = "[object Promise]",
            h = "[object Set]",
            f = "[object WeakMap]",
            m = "[object DataView]",
            d = l(n),
            y = l(s),
            g = l(i),
            v = l(o),
            b = l(a),
            x = c;
          ((n && x(new n(new ArrayBuffer(1))) != m) ||
            (s && x(new s()) != u) ||
            (i && x(i.resolve()) != p) ||
            (o && x(new o()) != h) ||
            (a && x(new a()) != f)) &&
            (x = function (e) {
              var t = c(e),
                r = "[object Object]" == t ? e.constructor : void 0,
                n = r ? l(r) : "";
              if (n)
                switch (n) {
                  case d:
                    return m;
                  case y:
                    return u;
                  case g:
                    return p;
                  case v:
                    return h;
                  case b:
                    return f;
                }
              return t;
            }),
            (e.exports = x);
        },
        392: (e) => {
          e.exports = function (e, t) {
            return null == e ? void 0 : e[t];
          };
        },
        2032: (e, t, r) => {
          var n = r(1042);
          e.exports = function () {
            (this.__data__ = n ? n(null) : {}), (this.size = 0);
          };
        },
        3862: (e) => {
          e.exports = function (e) {
            var t = this.has(e) && delete this.__data__[e];
            return (this.size -= t ? 1 : 0), t;
          };
        },
        6721: (e, t, r) => {
          var n = r(1042),
            s = Object.prototype.hasOwnProperty;
          e.exports = function (e) {
            var t = this.__data__;
            if (n) {
              var r = t[e];
              return "__lodash_hash_undefined__" === r ? void 0 : r;
            }
            return s.call(t, e) ? t[e] : void 0;
          };
        },
        2749: (e, t, r) => {
          var n = r(1042),
            s = Object.prototype.hasOwnProperty;
          e.exports = function (e) {
            var t = this.__data__;
            return n ? void 0 !== t[e] : s.call(t, e);
          };
        },
        5749: (e, t, r) => {
          var n = r(1042);
          e.exports = function (e, t) {
            var r = this.__data__;
            return (
              (this.size += this.has(e) ? 0 : 1),
              (r[e] = n && void 0 === t ? "__lodash_hash_undefined__" : t),
              this
            );
          };
        },
        361: (e) => {
          var t = /^(?:0|[1-9]\d*)$/;
          e.exports = function (e, r) {
            var n = typeof e;
            return (
              !!(r = null == r ? 9007199254740991 : r) &&
              ("number" == n || ("symbol" != n && t.test(e))) &&
              e > -1 &&
              e % 1 == 0 &&
              e < r
            );
          };
        },
        4218: (e) => {
          e.exports = function (e) {
            var t = typeof e;
            return "string" == t ||
              "number" == t ||
              "symbol" == t ||
              "boolean" == t
              ? "__proto__" !== e
              : null === e;
          };
        },
        7296: (e, t, r) => {
          var n,
            s = r(5481),
            i = (n = /[^.]+$/.exec((s && s.keys && s.keys.IE_PROTO) || ""))
              ? "Symbol(src)_1." + n
              : "";
          e.exports = function (e) {
            return !!i && i in e;
          };
        },
        5527: (e) => {
          var t = Object.prototype;
          e.exports = function (e) {
            var r = e && e.constructor;
            return e === (("function" == typeof r && r.prototype) || t);
          };
        },
        3702: (e) => {
          e.exports = function () {
            (this.__data__ = []), (this.size = 0);
          };
        },
        80: (e, t, r) => {
          var n = r(6025),
            s = Array.prototype.splice;
          e.exports = function (e) {
            var t = this.__data__,
              r = n(t, e);
            return (
              !(r < 0) &&
              (r == t.length - 1 ? t.pop() : s.call(t, r, 1), --this.size, !0)
            );
          };
        },
        4739: (e, t, r) => {
          var n = r(6025);
          e.exports = function (e) {
            var t = this.__data__,
              r = n(t, e);
            return r < 0 ? void 0 : t[r][1];
          };
        },
        8655: (e, t, r) => {
          var n = r(6025);
          e.exports = function (e) {
            return n(this.__data__, e) > -1;
          };
        },
        1175: (e, t, r) => {
          var n = r(6025);
          e.exports = function (e, t) {
            var r = this.__data__,
              s = n(r, e);
            return s < 0 ? (++this.size, r.push([e, t])) : (r[s][1] = t), this;
          };
        },
        3040: (e, t, r) => {
          var n = r(1549),
            s = r(79),
            i = r(8223);
          e.exports = function () {
            (this.size = 0),
              (this.__data__ = {
                hash: new n(),
                map: new (i || s)(),
                string: new n(),
              });
          };
        },
        7670: (e, t, r) => {
          var n = r(2651);
          e.exports = function (e) {
            var t = n(this, e).delete(e);
            return (this.size -= t ? 1 : 0), t;
          };
        },
        289: (e, t, r) => {
          var n = r(2651);
          e.exports = function (e) {
            return n(this, e).get(e);
          };
        },
        4509: (e, t, r) => {
          var n = r(2651);
          e.exports = function (e) {
            return n(this, e).has(e);
          };
        },
        5330: (e, t, r) => {
          var n = r(2651);
          e.exports = function (e, t) {
            var r = n(this, e),
              s = r.size;
            return r.set(e, t), (this.size += r.size == s ? 0 : 1), this;
          };
        },
        317: (e) => {
          e.exports = function (e) {
            var t = -1,
              r = Array(e.size);
            return (
              e.forEach(function (e, n) {
                r[++t] = [n, e];
              }),
              r
            );
          };
        },
        1042: (e, t, r) => {
          var n = r(6110)(Object, "create");
          e.exports = n;
        },
        3650: (e, t, r) => {
          var n = r(4335)(Object.keys, Object);
          e.exports = n;
        },
        6009: (e, t, r) => {
          e = r.nmd(e);
          var n = r(4840),
            s = t && !t.nodeType && t,
            i = s && e && !e.nodeType && e,
            o = i && i.exports === s && n.process,
            a = (function () {
              try {
                var e = i && i.require && i.require("util").types;
                return e || (o && o.binding && o.binding("util"));
              } catch (e) {}
            })();
          e.exports = a;
        },
        9350: (e) => {
          var t = Object.prototype.toString;
          e.exports = function (e) {
            return t.call(e);
          };
        },
        4335: (e) => {
          e.exports = function (e, t) {
            return function (r) {
              return e(t(r));
            };
          };
        },
        9325: (e, t, r) => {
          var n = r(4840),
            s =
              "object" == typeof self && self && self.Object === Object && self,
            i = n || s || Function("return this")();
          e.exports = i;
        },
        1380: (e) => {
          e.exports = function (e) {
            return this.__data__.set(e, "__lodash_hash_undefined__"), this;
          };
        },
        1459: (e) => {
          e.exports = function (e) {
            return this.__data__.has(e);
          };
        },
        4247: (e) => {
          e.exports = function (e) {
            var t = -1,
              r = Array(e.size);
            return (
              e.forEach(function (e) {
                r[++t] = e;
              }),
              r
            );
          };
        },
        1420: (e, t, r) => {
          var n = r(79);
          e.exports = function () {
            (this.__data__ = new n()), (this.size = 0);
          };
        },
        938: (e) => {
          e.exports = function (e) {
            var t = this.__data__,
              r = t.delete(e);
            return (this.size = t.size), r;
          };
        },
        3605: (e) => {
          e.exports = function (e) {
            return this.__data__.get(e);
          };
        },
        9817: (e) => {
          e.exports = function (e) {
            return this.__data__.has(e);
          };
        },
        945: (e, t, r) => {
          var n = r(79),
            s = r(8223),
            i = r(3661);
          e.exports = function (e, t) {
            var r = this.__data__;
            if (r instanceof n) {
              var o = r.__data__;
              if (!s || o.length < 199)
                return o.push([e, t]), (this.size = ++r.size), this;
              r = this.__data__ = new i(o);
            }
            return r.set(e, t), (this.size = r.size), this;
          };
        },
        7473: (e) => {
          var t = Function.prototype.toString;
          e.exports = function (e) {
            if (null != e) {
              try {
                return t.call(e);
              } catch (e) {}
              try {
                return e + "";
              } catch (e) {}
            }
            return "";
          };
        },
        5288: (e) => {
          e.exports = function (e, t) {
            return e === t || (e != e && t != t);
          };
        },
        2428: (e, t, r) => {
          var n = r(7534),
            s = r(346),
            i = Object.prototype,
            o = i.hasOwnProperty,
            a = i.propertyIsEnumerable,
            c = n(
              (function () {
                return arguments;
              })()
            )
              ? n
              : function (e) {
                  return s(e) && o.call(e, "callee") && !a.call(e, "callee");
                };
          e.exports = c;
        },
        6449: (e) => {
          var t = Array.isArray;
          e.exports = t;
        },
        4894: (e, t, r) => {
          var n = r(1882),
            s = r(294);
          e.exports = function (e) {
            return null != e && s(e.length) && !n(e);
          };
        },
        3812: (e, t, r) => {
          var n = r(2552),
            s = r(346);
          e.exports = function (e) {
            return !0 === e || !1 === e || (s(e) && "[object Boolean]" == n(e));
          };
        },
        3656: (e, t, r) => {
          e = r.nmd(e);
          var n = r(9325),
            s = r(9935),
            i = t && !t.nodeType && t,
            o = i && e && !e.nodeType && e,
            a = o && o.exports === i ? n.Buffer : void 0,
            c = (a ? a.isBuffer : void 0) || s;
          e.exports = c;
        },
        2404: (e, t, r) => {
          var n = r(270);
          e.exports = function (e, t) {
            return n(e, t);
          };
        },
        1882: (e, t, r) => {
          var n = r(2552),
            s = r(3805);
          e.exports = function (e) {
            if (!s(e)) return !1;
            var t = n(e);
            return (
              "[object Function]" == t ||
              "[object GeneratorFunction]" == t ||
              "[object AsyncFunction]" == t ||
              "[object Proxy]" == t
            );
          };
        },
        294: (e) => {
          e.exports = function (e) {
            return (
              "number" == typeof e &&
              e > -1 &&
              e % 1 == 0 &&
              e <= 9007199254740991
            );
          };
        },
        5187: (e) => {
          e.exports = function (e) {
            return null === e;
          };
        },
        8023: (e, t, r) => {
          var n = r(2552),
            s = r(346);
          e.exports = function (e) {
            return "number" == typeof e || (s(e) && "[object Number]" == n(e));
          };
        },
        3805: (e) => {
          e.exports = function (e) {
            var t = typeof e;
            return null != e && ("object" == t || "function" == t);
          };
        },
        346: (e) => {
          e.exports = function (e) {
            return null != e && "object" == typeof e;
          };
        },
        5015: (e, t, r) => {
          var n = r(2552),
            s = r(6449),
            i = r(346);
          e.exports = function (e) {
            return (
              "string" == typeof e ||
              (!s(e) && i(e) && "[object String]" == n(e))
            );
          };
        },
        7167: (e, t, r) => {
          var n = r(4901),
            s = r(7301),
            i = r(6009),
            o = i && i.isTypedArray,
            a = o ? s(o) : n;
          e.exports = a;
        },
        5950: (e, t, r) => {
          var n = r(695),
            s = r(8984),
            i = r(4894);
          e.exports = function (e) {
            return i(e) ? n(e) : s(e);
          };
        },
        6048: (e) => {
          e.exports = function (e) {
            if ("function" != typeof e)
              throw new TypeError("Expected a function");
            return function () {
              var t = arguments;
              switch (t.length) {
                case 0:
                  return !e.call(this);
                case 1:
                  return !e.call(this, t[0]);
                case 2:
                  return !e.call(this, t[0], t[1]);
                case 3:
                  return !e.call(this, t[0], t[1], t[2]);
              }
              return !e.apply(this, t);
            };
          };
        },
        3345: (e) => {
          e.exports = function () {
            return [];
          };
        },
        9935: (e) => {
          e.exports = function () {
            return !1;
          };
        },
        2340: (e, t, r) => {
          const n = r(6048);
          function s(e) {
            return "string" == typeof e
              ? (t) => t.element === e
              : e.constructor && e.extend
              ? (t) => t instanceof e
              : e;
          }
          class i {
            constructor(e) {
              this.elements = e || [];
            }
            toValue() {
              return this.elements.map((e) => e.toValue());
            }
            map(e, t) {
              return this.elements.map(e, t);
            }
            flatMap(e, t) {
              return this.map(e, t).reduce((e, t) => e.concat(t), []);
            }
            compactMap(e, t) {
              const r = [];
              return (
                this.forEach((n) => {
                  const s = e.bind(t)(n);
                  s && r.push(s);
                }),
                r
              );
            }
            filter(e, t) {
              return (e = s(e)), new i(this.elements.filter(e, t));
            }
            reject(e, t) {
              return (e = s(e)), new i(this.elements.filter(n(e), t));
            }
            find(e, t) {
              return (e = s(e)), this.elements.find(e, t);
            }
            forEach(e, t) {
              this.elements.forEach(e, t);
            }
            reduce(e, t) {
              return this.elements.reduce(e, t);
            }
            includes(e) {
              return this.elements.some((t) => t.equals(e));
            }
            shift() {
              return this.elements.shift();
            }
            unshift(e) {
              this.elements.unshift(this.refract(e));
            }
            push(e) {
              return this.elements.push(this.refract(e)), this;
            }
            add(e) {
              this.push(e);
            }
            get(e) {
              return this.elements[e];
            }
            getValue(e) {
              const t = this.elements[e];
              if (t) return t.toValue();
            }
            get length() {
              return this.elements.length;
            }
            get isEmpty() {
              return 0 === this.elements.length;
            }
            get first() {
              return this.elements[0];
            }
          }
          "undefined" != typeof Symbol &&
            (i.prototype[Symbol.iterator] = function () {
              return this.elements[Symbol.iterator]();
            }),
            (e.exports = i);
        },
        5973: (e) => {
          class t {
            constructor(e, t) {
              (this.key = e), (this.value = t);
            }
            clone() {
              const e = new t();
              return (
                this.key && (e.key = this.key.clone()),
                this.value && (e.value = this.value.clone()),
                e
              );
            }
          }
          e.exports = t;
        },
        3110: (e, t, r) => {
          const n = r(5187),
            s = r(5015),
            i = r(8023),
            o = r(3812),
            a = r(3805),
            c = r(5105),
            l = r(6804);
          class u {
            constructor(e) {
              (this.elementMap = {}),
                (this.elementDetection = []),
                (this.Element = l.Element),
                (this.KeyValuePair = l.KeyValuePair),
                (e && e.noDefault) || this.useDefault(),
                (this._attributeElementKeys = []),
                (this._attributeElementArrayKeys = []);
            }
            use(e) {
              return (
                e.namespace && e.namespace({ base: this }),
                e.load && e.load({ base: this }),
                this
              );
            }
            useDefault() {
              return (
                this.register("null", l.NullElement)
                  .register("string", l.StringElement)
                  .register("number", l.NumberElement)
                  .register("boolean", l.BooleanElement)
                  .register("array", l.ArrayElement)
                  .register("object", l.ObjectElement)
                  .register("member", l.MemberElement)
                  .register("ref", l.RefElement)
                  .register("link", l.LinkElement),
                this.detect(n, l.NullElement, !1)
                  .detect(s, l.StringElement, !1)
                  .detect(i, l.NumberElement, !1)
                  .detect(o, l.BooleanElement, !1)
                  .detect(Array.isArray, l.ArrayElement, !1)
                  .detect(a, l.ObjectElement, !1),
                this
              );
            }
            register(e, t) {
              return (this._elements = void 0), (this.elementMap[e] = t), this;
            }
            unregister(e) {
              return (this._elements = void 0), delete this.elementMap[e], this;
            }
            detect(e, t, r) {
              return (
                void 0 === r || r
                  ? this.elementDetection.unshift([e, t])
                  : this.elementDetection.push([e, t]),
                this
              );
            }
            toElement(e) {
              if (e instanceof this.Element) return e;
              let t;
              for (let r = 0; r < this.elementDetection.length; r += 1) {
                const n = this.elementDetection[r][0],
                  s = this.elementDetection[r][1];
                if (n(e)) {
                  t = new s(e);
                  break;
                }
              }
              return t;
            }
            getElementClass(e) {
              const t = this.elementMap[e];
              return void 0 === t ? this.Element : t;
            }
            fromRefract(e) {
              return this.serialiser.deserialise(e);
            }
            toRefract(e) {
              return this.serialiser.serialise(e);
            }
            get elements() {
              return (
                void 0 === this._elements &&
                  ((this._elements = { Element: this.Element }),
                  Object.keys(this.elementMap).forEach((e) => {
                    const t = e[0].toUpperCase() + e.substr(1);
                    this._elements[t] = this.elementMap[e];
                  })),
                this._elements
              );
            }
            get serialiser() {
              return new c(this);
            }
          }
          (c.prototype.Namespace = u), (e.exports = u);
        },
        866: (e, t, r) => {
          const n = r(6048),
            s = r(2340);
          class i extends s {
            map(e, t) {
              return this.elements.map((r) => e.bind(t)(r.value, r.key, r));
            }
            filter(e, t) {
              return new i(
                this.elements.filter((r) => e.bind(t)(r.value, r.key, r))
              );
            }
            reject(e, t) {
              return this.filter(n(e.bind(t)));
            }
            forEach(e, t) {
              return this.elements.forEach((r, n) => {
                e.bind(t)(r.value, r.key, r, n);
              });
            }
            keys() {
              return this.map((e, t) => t.toValue());
            }
            values() {
              return this.map((e) => e.toValue());
            }
          }
          e.exports = i;
        },
        6804: (e, t, r) => {
          const n = r(316),
            s = r(1067),
            i = r(1167),
            o = r(239),
            a = r(2242),
            c = r(6233),
            l = r(7726),
            u = r(1045),
            p = r(6303),
            h = r(4540),
            f = r(2340),
            m = r(866),
            d = r(5973);
          function y(e) {
            if (e instanceof n) return e;
            if ("string" == typeof e) return new i(e);
            if ("number" == typeof e) return new o(e);
            if ("boolean" == typeof e) return new a(e);
            if (null === e) return new s();
            if (Array.isArray(e)) return new c(e.map(y));
            if ("object" == typeof e) {
              return new u(e);
            }
            return e;
          }
          (n.prototype.ObjectElement = u),
            (n.prototype.RefElement = h),
            (n.prototype.MemberElement = l),
            (n.prototype.refract = y),
            (f.prototype.refract = y),
            (e.exports = {
              Element: n,
              NullElement: s,
              StringElement: i,
              NumberElement: o,
              BooleanElement: a,
              ArrayElement: c,
              MemberElement: l,
              ObjectElement: u,
              LinkElement: p,
              RefElement: h,
              refract: y,
              ArraySlice: f,
              ObjectSlice: m,
              KeyValuePair: d,
            });
        },
        6303: (e, t, r) => {
          const n = r(316);
          e.exports = class extends n {
            constructor(e, t, r) {
              super(e || [], t, r), (this.element = "link");
            }
            get relation() {
              return this.attributes.get("relation");
            }
            set relation(e) {
              this.attributes.set("relation", e);
            }
            get href() {
              return this.attributes.get("href");
            }
            set href(e) {
              this.attributes.set("href", e);
            }
          };
        },
        4540: (e, t, r) => {
          const n = r(316);
          e.exports = class extends n {
            constructor(e, t, r) {
              super(e || [], t, r),
                (this.element = "ref"),
                this.path || (this.path = "element");
            }
            get path() {
              return this.attributes.get("path");
            }
            set path(e) {
              this.attributes.set("path", e);
            }
          };
        },
        4035: (e, t, r) => {
          const n = r(3110),
            s = r(6804);
          (t.g$ = n),
            (t.KeyValuePair = r(5973)),
            (t.G6 = s.ArraySlice),
            (t.ot = s.ObjectSlice),
            (t.Hg = s.Element),
            (t.Om = s.StringElement),
            (t.kT = s.NumberElement),
            (t.bd = s.BooleanElement),
            (t.Os = s.NullElement),
            (t.wE = s.ArrayElement),
            (t.Sh = s.ObjectElement),
            (t.Pr = s.MemberElement),
            (t.sI = s.RefElement),
            (t.Ft = s.LinkElement),
            (t.e = s.refract),
            r(5105),
            r(5147);
        },
        6233: (e, t, r) => {
          const n = r(6048),
            s = r(316),
            i = r(2340);
          class o extends s {
            constructor(e, t, r) {
              super(e || [], t, r), (this.element = "array");
            }
            primitive() {
              return "array";
            }
            get(e) {
              return this.content[e];
            }
            getValue(e) {
              const t = this.get(e);
              if (t) return t.toValue();
            }
            getIndex(e) {
              return this.content[e];
            }
            set(e, t) {
              return (this.content[e] = this.refract(t)), this;
            }
            remove(e) {
              const t = this.content.splice(e, 1);
              return t.length ? t[0] : null;
            }
            map(e, t) {
              return this.content.map(e, t);
            }
            flatMap(e, t) {
              return this.map(e, t).reduce((e, t) => e.concat(t), []);
            }
            compactMap(e, t) {
              const r = [];
              return (
                this.forEach((n) => {
                  const s = e.bind(t)(n);
                  s && r.push(s);
                }),
                r
              );
            }
            filter(e, t) {
              return new i(this.content.filter(e, t));
            }
            reject(e, t) {
              return this.filter(n(e), t);
            }
            reduce(e, t) {
              let r, n;
              void 0 !== t
                ? ((r = 0), (n = this.refract(t)))
                : ((r = 1),
                  (n =
                    "object" === this.primitive()
                      ? this.first.value
                      : this.first));
              for (let t = r; t < this.length; t += 1) {
                const r = this.content[t];
                n =
                  "object" === this.primitive()
                    ? this.refract(e(n, r.value, r.key, r, this))
                    : this.refract(e(n, r, t, this));
              }
              return n;
            }
            forEach(e, t) {
              this.content.forEach((r, n) => {
                e.bind(t)(r, this.refract(n));
              });
            }
            shift() {
              return this.content.shift();
            }
            unshift(e) {
              this.content.unshift(this.refract(e));
            }
            push(e) {
              return this.content.push(this.refract(e)), this;
            }
            add(e) {
              this.push(e);
            }
            findElements(e, t) {
              const r = t || {},
                n = !!r.recursive,
                s = void 0 === r.results ? [] : r.results;
              return (
                this.forEach((t, r, i) => {
                  n &&
                    void 0 !== t.findElements &&
                    t.findElements(e, { results: s, recursive: n }),
                    e(t, r, i) && s.push(t);
                }),
                s
              );
            }
            find(e) {
              return new i(this.findElements(e, { recursive: !0 }));
            }
            findByElement(e) {
              return this.find((t) => t.element === e);
            }
            findByClass(e) {
              return this.find((t) => t.classes.includes(e));
            }
            getById(e) {
              return this.find((t) => t.id.toValue() === e).first;
            }
            includes(e) {
              return this.content.some((t) => t.equals(e));
            }
            contains(e) {
              return this.includes(e);
            }
            empty() {
              return new this.constructor([]);
            }
            "fantasy-land/empty"() {
              return this.empty();
            }
            concat(e) {
              return new this.constructor(this.content.concat(e.content));
            }
            "fantasy-land/concat"(e) {
              return this.concat(e);
            }
            "fantasy-land/map"(e) {
              return new this.constructor(this.map(e));
            }
            "fantasy-land/chain"(e) {
              return this.map((t) => e(t), this).reduce(
                (e, t) => e.concat(t),
                this.empty()
              );
            }
            "fantasy-land/filter"(e) {
              return new this.constructor(this.content.filter(e));
            }
            "fantasy-land/reduce"(e, t) {
              return this.content.reduce(e, t);
            }
            get length() {
              return this.content.length;
            }
            get isEmpty() {
              return 0 === this.content.length;
            }
            get first() {
              return this.getIndex(0);
            }
            get second() {
              return this.getIndex(1);
            }
            get last() {
              return this.getIndex(this.length - 1);
            }
          }
          (o.empty = function () {
            return new this();
          }),
            (o["fantasy-land/empty"] = o.empty),
            "undefined" != typeof Symbol &&
              (o.prototype[Symbol.iterator] = function () {
                return this.content[Symbol.iterator]();
              }),
            (e.exports = o);
        },
        2242: (e, t, r) => {
          const n = r(316);
          e.exports = class extends n {
            constructor(e, t, r) {
              super(e, t, r), (this.element = "boolean");
            }
            primitive() {
              return "boolean";
            }
          };
        },
        316: (e, t, r) => {
          const n = r(2404),
            s = r(5973),
            i = r(2340);
          class o {
            constructor(e, t, r) {
              t && (this.meta = t),
                r && (this.attributes = r),
                (this.content = e);
            }
            freeze() {
              Object.isFrozen(this) ||
                (this._meta && ((this.meta.parent = this), this.meta.freeze()),
                this._attributes &&
                  ((this.attributes.parent = this), this.attributes.freeze()),
                this.children.forEach((e) => {
                  (e.parent = this), e.freeze();
                }, this),
                this.content &&
                  Array.isArray(this.content) &&
                  Object.freeze(this.content),
                Object.freeze(this));
            }
            primitive() {}
            clone() {
              const e = new this.constructor();
              return (
                (e.element = this.element),
                this.meta.length && (e._meta = this.meta.clone()),
                this.attributes.length &&
                  (e._attributes = this.attributes.clone()),
                this.content
                  ? this.content.clone
                    ? (e.content = this.content.clone())
                    : Array.isArray(this.content)
                    ? (e.content = this.content.map((e) => e.clone()))
                    : (e.content = this.content)
                  : (e.content = this.content),
                e
              );
            }
            toValue() {
              return this.content instanceof o
                ? this.content.toValue()
                : this.content instanceof s
                ? {
                    key: this.content.key.toValue(),
                    value: this.content.value
                      ? this.content.value.toValue()
                      : void 0,
                  }
                : this.content && this.content.map
                ? this.content.map((e) => e.toValue(), this)
                : this.content;
            }
            toRef(e) {
              if ("" === this.id.toValue())
                throw Error(
                  "Cannot create reference to an element that does not contain an ID"
                );
              const t = new this.RefElement(this.id.toValue());
              return e && (t.path = e), t;
            }
            findRecursive(...e) {
              if (arguments.length > 1 && !this.isFrozen)
                throw new Error(
                  "Cannot find recursive with multiple element names without first freezing the element. Call `element.freeze()`"
                );
              const t = e.pop();
              let r = new i();
              const n = (e, t) => (e.push(t), e),
                o = (e, r) => {
                  r.element === t && e.push(r);
                  const i = r.findRecursive(t);
                  return (
                    i && i.reduce(n, e),
                    r.content instanceof s &&
                      (r.content.key && o(e, r.content.key),
                      r.content.value && o(e, r.content.value)),
                    e
                  );
                };
              return (
                this.content &&
                  (this.content.element && o(r, this.content),
                  Array.isArray(this.content) && this.content.reduce(o, r)),
                e.isEmpty ||
                  (r = r.filter((t) => {
                    let r = t.parents.map((e) => e.element);
                    for (const t in e) {
                      const n = e[t],
                        s = r.indexOf(n);
                      if (-1 === s) return !1;
                      r = r.splice(0, s);
                    }
                    return !0;
                  })),
                r
              );
            }
            set(e) {
              return (this.content = e), this;
            }
            equals(e) {
              return n(this.toValue(), e);
            }
            getMetaProperty(e, t) {
              if (!this.meta.hasKey(e)) {
                if (this.isFrozen) {
                  const e = this.refract(t);
                  return e.freeze(), e;
                }
                this.meta.set(e, t);
              }
              return this.meta.get(e);
            }
            setMetaProperty(e, t) {
              this.meta.set(e, t);
            }
            get element() {
              return this._storedElement || "element";
            }
            set element(e) {
              this._storedElement = e;
            }
            get content() {
              return this._content;
            }
            set content(e) {
              if (e instanceof o) this._content = e;
              else if (e instanceof i) this.content = e.elements;
              else if (
                "string" == typeof e ||
                "number" == typeof e ||
                "boolean" == typeof e ||
                "null" === e ||
                null == e
              )
                this._content = e;
              else if (e instanceof s) this._content = e;
              else if (Array.isArray(e)) this._content = e.map(this.refract);
              else {
                if ("object" != typeof e)
                  throw new Error("Cannot set content to given value");
                this._content = Object.keys(e).map(
                  (t) => new this.MemberElement(t, e[t])
                );
              }
            }
            get meta() {
              if (!this._meta) {
                if (this.isFrozen) {
                  const e = new this.ObjectElement();
                  return e.freeze(), e;
                }
                this._meta = new this.ObjectElement();
              }
              return this._meta;
            }
            set meta(e) {
              e instanceof this.ObjectElement
                ? (this._meta = e)
                : this.meta.set(e || {});
            }
            get attributes() {
              if (!this._attributes) {
                if (this.isFrozen) {
                  const e = new this.ObjectElement();
                  return e.freeze(), e;
                }
                this._attributes = new this.ObjectElement();
              }
              return this._attributes;
            }
            set attributes(e) {
              e instanceof this.ObjectElement
                ? (this._attributes = e)
                : this.attributes.set(e || {});
            }
            get id() {
              return this.getMetaProperty("id", "");
            }
            set id(e) {
              this.setMetaProperty("id", e);
            }
            get classes() {
              return this.getMetaProperty("classes", []);
            }
            set classes(e) {
              this.setMetaProperty("classes", e);
            }
            get title() {
              return this.getMetaProperty("title", "");
            }
            set title(e) {
              this.setMetaProperty("title", e);
            }
            get description() {
              return this.getMetaProperty("description", "");
            }
            set description(e) {
              this.setMetaProperty("description", e);
            }
            get links() {
              return this.getMetaProperty("links", []);
            }
            set links(e) {
              this.setMetaProperty("links", e);
            }
            get isFrozen() {
              return Object.isFrozen(this);
            }
            get parents() {
              let { parent: e } = this;
              const t = new i();
              for (; e; ) t.push(e), (e = e.parent);
              return t;
            }
            get children() {
              if (Array.isArray(this.content)) return new i(this.content);
              if (this.content instanceof s) {
                const e = new i([this.content.key]);
                return this.content.value && e.push(this.content.value), e;
              }
              return this.content instanceof o
                ? new i([this.content])
                : new i();
            }
            get recursiveChildren() {
              const e = new i();
              return (
                this.children.forEach((t) => {
                  e.push(t),
                    t.recursiveChildren.forEach((t) => {
                      e.push(t);
                    });
                }),
                e
              );
            }
          }
          e.exports = o;
        },
        7726: (e, t, r) => {
          const n = r(5973),
            s = r(316);
          e.exports = class extends s {
            constructor(e, t, r, s) {
              super(new n(), r, s),
                (this.element = "member"),
                (this.key = e),
                (this.value = t);
            }
            get key() {
              return this.content.key;
            }
            set key(e) {
              this.content.key = this.refract(e);
            }
            get value() {
              return this.content.value;
            }
            set value(e) {
              this.content.value = this.refract(e);
            }
          };
        },
        1067: (e, t, r) => {
          const n = r(316);
          e.exports = class extends n {
            constructor(e, t, r) {
              super(e || null, t, r), (this.element = "null");
            }
            primitive() {
              return "null";
            }
            set() {
              return new Error("Cannot set the value of null");
            }
          };
        },
        239: (e, t, r) => {
          const n = r(316);
          e.exports = class extends n {
            constructor(e, t, r) {
              super(e, t, r), (this.element = "number");
            }
            primitive() {
              return "number";
            }
          };
        },
        1045: (e, t, r) => {
          const n = r(6048),
            s = r(3805),
            i = r(6233),
            o = r(7726),
            a = r(866);
          e.exports = class extends i {
            constructor(e, t, r) {
              super(e || [], t, r), (this.element = "object");
            }
            primitive() {
              return "object";
            }
            toValue() {
              return this.content.reduce(
                (e, t) => (
                  (e[t.key.toValue()] = t.value ? t.value.toValue() : void 0), e
                ),
                {}
              );
            }
            get(e) {
              const t = this.getMember(e);
              if (t) return t.value;
            }
            getMember(e) {
              if (void 0 !== e)
                return this.content.find((t) => t.key.toValue() === e);
            }
            remove(e) {
              let t = null;
              return (
                (this.content = this.content.filter(
                  (r) => r.key.toValue() !== e || ((t = r), !1)
                )),
                t
              );
            }
            getKey(e) {
              const t = this.getMember(e);
              if (t) return t.key;
            }
            set(e, t) {
              if (s(e))
                return (
                  Object.keys(e).forEach((t) => {
                    this.set(t, e[t]);
                  }),
                  this
                );
              const r = e,
                n = this.getMember(r);
              return n ? (n.value = t) : this.content.push(new o(r, t)), this;
            }
            keys() {
              return this.content.map((e) => e.key.toValue());
            }
            values() {
              return this.content.map((e) => e.value.toValue());
            }
            hasKey(e) {
              return this.content.some((t) => t.key.equals(e));
            }
            items() {
              return this.content.map((e) => [
                e.key.toValue(),
                e.value.toValue(),
              ]);
            }
            map(e, t) {
              return this.content.map((r) => e.bind(t)(r.value, r.key, r));
            }
            compactMap(e, t) {
              const r = [];
              return (
                this.forEach((n, s, i) => {
                  const o = e.bind(t)(n, s, i);
                  o && r.push(o);
                }),
                r
              );
            }
            filter(e, t) {
              return new a(this.content).filter(e, t);
            }
            reject(e, t) {
              return this.filter(n(e), t);
            }
            forEach(e, t) {
              return this.content.forEach((r) => e.bind(t)(r.value, r.key, r));
            }
          };
        },
        1167: (e, t, r) => {
          const n = r(316);
          e.exports = class extends n {
            constructor(e, t, r) {
              super(e, t, r), (this.element = "string");
            }
            primitive() {
              return "string";
            }
            get length() {
              return this.content.length;
            }
          };
        },
        5147: (e, t, r) => {
          const n = r(5105);
          e.exports = class extends n {
            serialise(e) {
              if (!(e instanceof this.namespace.elements.Element))
                throw new TypeError(
                  `Given element \`${e}\` is not an Element instance`
                );
              let t;
              e._attributes &&
                e.attributes.get("variable") &&
                (t = e.attributes.get("variable"));
              const r = { element: e.element };
              e._meta &&
                e._meta.length > 0 &&
                (r.meta = this.serialiseObject(e.meta));
              const n =
                "enum" === e.element ||
                -1 !== e.attributes.keys().indexOf("enumerations");
              if (n) {
                const t = this.enumSerialiseAttributes(e);
                t && (r.attributes = t);
              } else if (e._attributes && e._attributes.length > 0) {
                let { attributes: n } = e;
                n.get("metadata") &&
                  ((n = n.clone()),
                  n.set("meta", n.get("metadata")),
                  n.remove("metadata")),
                  "member" === e.element &&
                    t &&
                    ((n = n.clone()), n.remove("variable")),
                  n.length > 0 && (r.attributes = this.serialiseObject(n));
              }
              if (n) r.content = this.enumSerialiseContent(e, r);
              else if (this[`${e.element}SerialiseContent`])
                r.content = this[`${e.element}SerialiseContent`](e, r);
              else if (void 0 !== e.content) {
                let n;
                t && e.content.key
                  ? ((n = e.content.clone()),
                    n.key.attributes.set("variable", t),
                    (n = this.serialiseContent(n)))
                  : (n = this.serialiseContent(e.content)),
                  this.shouldSerialiseContent(e, n) && (r.content = n);
              } else
                this.shouldSerialiseContent(e, e.content) &&
                  e instanceof this.namespace.elements.Array &&
                  (r.content = []);
              return r;
            }
            shouldSerialiseContent(e, t) {
              return (
                "parseResult" === e.element ||
                "httpRequest" === e.element ||
                "httpResponse" === e.element ||
                "category" === e.element ||
                "link" === e.element ||
                (void 0 !== t && (!Array.isArray(t) || 0 !== t.length))
              );
            }
            refSerialiseContent(e, t) {
              return (
                delete t.attributes,
                { href: e.toValue(), path: e.path.toValue() }
              );
            }
            sourceMapSerialiseContent(e) {
              return e.toValue();
            }
            dataStructureSerialiseContent(e) {
              return [this.serialiseContent(e.content)];
            }
            enumSerialiseAttributes(e) {
              const t = e.attributes.clone(),
                r =
                  t.remove("enumerations") ||
                  new this.namespace.elements.Array([]),
                n = t.get("default");
              let s = t.get("samples") || new this.namespace.elements.Array([]);
              if (
                (n &&
                  n.content &&
                  (n.content.attributes &&
                    n.content.attributes.remove("typeAttributes"),
                  t.set(
                    "default",
                    new this.namespace.elements.Array([n.content])
                  )),
                s.forEach((e) => {
                  e.content &&
                    e.content.element &&
                    e.content.attributes.remove("typeAttributes");
                }),
                e.content && 0 !== r.length && s.unshift(e.content),
                (s = s.map((e) =>
                  e instanceof this.namespace.elements.Array
                    ? [e]
                    : new this.namespace.elements.Array([e.content])
                )),
                s.length && t.set("samples", s),
                t.length > 0)
              )
                return this.serialiseObject(t);
            }
            enumSerialiseContent(e) {
              if (e._attributes) {
                const t = e.attributes.get("enumerations");
                if (t && t.length > 0)
                  return t.content.map((e) => {
                    const t = e.clone();
                    return (
                      t.attributes.remove("typeAttributes"), this.serialise(t)
                    );
                  });
              }
              if (e.content) {
                const t = e.content.clone();
                return (
                  t.attributes.remove("typeAttributes"), [this.serialise(t)]
                );
              }
              return [];
            }
            deserialise(e) {
              if ("string" == typeof e)
                return new this.namespace.elements.String(e);
              if ("number" == typeof e)
                return new this.namespace.elements.Number(e);
              if ("boolean" == typeof e)
                return new this.namespace.elements.Boolean(e);
              if (null === e) return new this.namespace.elements.Null();
              if (Array.isArray(e))
                return new this.namespace.elements.Array(
                  e.map(this.deserialise, this)
                );
              const t = this.namespace.getElementClass(e.element),
                r = new t();
              r.element !== e.element && (r.element = e.element),
                e.meta && this.deserialiseObject(e.meta, r.meta),
                e.attributes &&
                  this.deserialiseObject(e.attributes, r.attributes);
              const n = this.deserialiseContent(e.content);
              if (
                ((void 0 === n && null !== r.content) || (r.content = n),
                "enum" === r.element)
              ) {
                r.content && r.attributes.set("enumerations", r.content);
                let e = r.attributes.get("samples");
                if ((r.attributes.remove("samples"), e)) {
                  const n = e;
                  (e = new this.namespace.elements.Array()),
                    n.forEach((n) => {
                      n.forEach((n) => {
                        const s = new t(n);
                        (s.element = r.element), e.push(s);
                      });
                    });
                  const s = e.shift();
                  (r.content = s ? s.content : void 0),
                    r.attributes.set("samples", e);
                } else r.content = void 0;
                let n = r.attributes.get("default");
                if (n && n.length > 0) {
                  n = n.get(0);
                  const e = new t(n);
                  (e.element = r.element), r.attributes.set("default", e);
                }
              } else if (
                "dataStructure" === r.element &&
                Array.isArray(r.content)
              )
                [r.content] = r.content;
              else if ("category" === r.element) {
                const e = r.attributes.get("meta");
                e &&
                  (r.attributes.set("metadata", e),
                  r.attributes.remove("meta"));
              } else
                "member" === r.element &&
                  r.key &&
                  r.key._attributes &&
                  r.key._attributes.getValue("variable") &&
                  (r.attributes.set(
                    "variable",
                    r.key.attributes.get("variable")
                  ),
                  r.key.attributes.remove("variable"));
              return r;
            }
            serialiseContent(e) {
              if (e instanceof this.namespace.elements.Element)
                return this.serialise(e);
              if (e instanceof this.namespace.KeyValuePair) {
                const t = { key: this.serialise(e.key) };
                return e.value && (t.value = this.serialise(e.value)), t;
              }
              return e && e.map ? e.map(this.serialise, this) : e;
            }
            deserialiseContent(e) {
              if (e) {
                if (e.element) return this.deserialise(e);
                if (e.key) {
                  const t = new this.namespace.KeyValuePair(
                    this.deserialise(e.key)
                  );
                  return e.value && (t.value = this.deserialise(e.value)), t;
                }
                if (e.map) return e.map(this.deserialise, this);
              }
              return e;
            }
            shouldRefract(e) {
              return (
                !!(
                  (e._attributes && e.attributes.keys().length) ||
                  (e._meta && e.meta.keys().length)
                ) ||
                ("enum" !== e.element &&
                  (e.element !== e.primitive() || "member" === e.element))
              );
            }
            convertKeyToRefract(e, t) {
              return this.shouldRefract(t)
                ? this.serialise(t)
                : "enum" === t.element
                ? this.serialiseEnum(t)
                : "array" === t.element
                ? t.map((t) =>
                    this.shouldRefract(t) || "default" === e
                      ? this.serialise(t)
                      : "array" === t.element ||
                        "object" === t.element ||
                        "enum" === t.element
                      ? t.children.map((e) => this.serialise(e))
                      : t.toValue()
                  )
                : "object" === t.element
                ? (t.content || []).map(this.serialise, this)
                : t.toValue();
            }
            serialiseEnum(e) {
              return e.children.map((e) => this.serialise(e));
            }
            serialiseObject(e) {
              const t = {};
              return (
                e.forEach((e, r) => {
                  if (e) {
                    const n = r.toValue();
                    t[n] = this.convertKeyToRefract(n, e);
                  }
                }),
                t
              );
            }
            deserialiseObject(e, t) {
              Object.keys(e).forEach((r) => {
                t.set(r, this.deserialise(e[r]));
              });
            }
          };
        },
        5105: (e) => {
          e.exports = class {
            constructor(e) {
              this.namespace = e || new this.Namespace();
            }
            serialise(e) {
              if (!(e instanceof this.namespace.elements.Element))
                throw new TypeError(
                  `Given element \`${e}\` is not an Element instance`
                );
              const t = { element: e.element };
              e._meta &&
                e._meta.length > 0 &&
                (t.meta = this.serialiseObject(e.meta)),
                e._attributes &&
                  e._attributes.length > 0 &&
                  (t.attributes = this.serialiseObject(e.attributes));
              const r = this.serialiseContent(e.content);
              return void 0 !== r && (t.content = r), t;
            }
            deserialise(e) {
              if (!e.element)
                throw new Error(
                  "Given value is not an object containing an element name"
                );
              const t = new (this.namespace.getElementClass(e.element))();
              t.element !== e.element && (t.element = e.element),
                e.meta && this.deserialiseObject(e.meta, t.meta),
                e.attributes &&
                  this.deserialiseObject(e.attributes, t.attributes);
              const r = this.deserialiseContent(e.content);
              return (void 0 === r && null !== t.content) || (t.content = r), t;
            }
            serialiseContent(e) {
              if (e instanceof this.namespace.elements.Element)
                return this.serialise(e);
              if (e instanceof this.namespace.KeyValuePair) {
                const t = { key: this.serialise(e.key) };
                return e.value && (t.value = this.serialise(e.value)), t;
              }
              if (e && e.map) {
                if (0 === e.length) return;
                return e.map(this.serialise, this);
              }
              return e;
            }
            deserialiseContent(e) {
              if (e) {
                if (e.element) return this.deserialise(e);
                if (e.key) {
                  const t = new this.namespace.KeyValuePair(
                    this.deserialise(e.key)
                  );
                  return e.value && (t.value = this.deserialise(e.value)), t;
                }
                if (e.map) return e.map(this.deserialise, this);
              }
              return e;
            }
            serialiseObject(e) {
              const t = {};
              if (
                (e.forEach((e, r) => {
                  e && (t[r.toValue()] = this.serialise(e));
                }),
                0 !== Object.keys(t).length)
              )
                return t;
            }
            deserialiseObject(e, t) {
              Object.keys(e).forEach((r) => {
                t.set(r, this.deserialise(e[r]));
              });
            }
          };
        },
        8859: (e, t, r) => {
          var n = "function" == typeof Map && Map.prototype,
            s =
              Object.getOwnPropertyDescriptor && n
                ? Object.getOwnPropertyDescriptor(Map.prototype, "size")
                : null,
            i = n && s && "function" == typeof s.get ? s.get : null,
            o = n && Map.prototype.forEach,
            a = "function" == typeof Set && Set.prototype,
            c =
              Object.getOwnPropertyDescriptor && a
                ? Object.getOwnPropertyDescriptor(Set.prototype, "size")
                : null,
            l = a && c && "function" == typeof c.get ? c.get : null,
            u = a && Set.prototype.forEach,
            p =
              "function" == typeof WeakMap && WeakMap.prototype
                ? WeakMap.prototype.has
                : null,
            h =
              "function" == typeof WeakSet && WeakSet.prototype
                ? WeakSet.prototype.has
                : null,
            f =
              "function" == typeof WeakRef && WeakRef.prototype
                ? WeakRef.prototype.deref
                : null,
            m = Boolean.prototype.valueOf,
            d = Object.prototype.toString,
            y = Function.prototype.toString,
            g = String.prototype.match,
            v = String.prototype.slice,
            b = String.prototype.replace,
            x = String.prototype.toUpperCase,
            w = String.prototype.toLowerCase,
            E = RegExp.prototype.test,
            j = Array.prototype.concat,
            O = Array.prototype.join,
            S = Array.prototype.slice,
            P = Math.floor,
            A = "function" == typeof BigInt ? BigInt.prototype.valueOf : null,
            $ = Object.getOwnPropertySymbols,
            _ =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? Symbol.prototype.toString
                : null,
            k =
              "function" == typeof Symbol && "object" == typeof Symbol.iterator,
            I =
              "function" == typeof Symbol &&
              Symbol.toStringTag &&
              (typeof Symbol.toStringTag === k || "symbol")
                ? Symbol.toStringTag
                : null,
            T = Object.prototype.propertyIsEnumerable,
            C =
              ("function" == typeof Reflect
                ? Reflect.getPrototypeOf
                : Object.getPrototypeOf) ||
              ([].__proto__ === Array.prototype
                ? function (e) {
                    return e.__proto__;
                  }
                : null);
          function M(e, t) {
            if (
              e === 1 / 0 ||
              e === -1 / 0 ||
              e != e ||
              (e && e > -1e3 && e < 1e3) ||
              E.call(/e/, t)
            )
              return t;
            var r = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
            if ("number" == typeof e) {
              var n = e < 0 ? -P(-e) : P(e);
              if (n !== e) {
                var s = String(n),
                  i = v.call(t, s.length + 1);
                return (
                  b.call(s, r, "$&_") +
                  "." +
                  b.call(b.call(i, /([0-9]{3})/g, "$&_"), /_$/, "")
                );
              }
            }
            return b.call(t, r, "$&_");
          }
          var R = r(2634),
            F = R.custom,
            D = U(F) ? F : null;
          function N(e, t, r) {
            var n = "double" === (r.quoteStyle || t) ? '"' : "'";
            return n + e + n;
          }
          function q(e) {
            return b.call(String(e), /"/g, "&quot;");
          }
          function L(e) {
            return !(
              "[object Array]" !== H(e) ||
              (I && "object" == typeof e && I in e)
            );
          }
          function B(e) {
            return !(
              "[object RegExp]" !== H(e) ||
              (I && "object" == typeof e && I in e)
            );
          }
          function U(e) {
            if (k) return e && "object" == typeof e && e instanceof Symbol;
            if ("symbol" == typeof e) return !0;
            if (!e || "object" != typeof e || !_) return !1;
            try {
              return _.call(e), !0;
            } catch (e) {}
            return !1;
          }
          e.exports = function e(t, r, n, s) {
            var a = r || {};
            if (
              z(a, "quoteStyle") &&
              "single" !== a.quoteStyle &&
              "double" !== a.quoteStyle
            )
              throw new TypeError(
                'option "quoteStyle" must be "single" or "double"'
              );
            if (
              z(a, "maxStringLength") &&
              ("number" == typeof a.maxStringLength
                ? a.maxStringLength < 0 && a.maxStringLength !== 1 / 0
                : null !== a.maxStringLength)
            )
              throw new TypeError(
                'option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`'
              );
            var c = !z(a, "customInspect") || a.customInspect;
            if ("boolean" != typeof c && "symbol" !== c)
              throw new TypeError(
                "option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`"
              );
            if (
              z(a, "indent") &&
              null !== a.indent &&
              "\t" !== a.indent &&
              !(parseInt(a.indent, 10) === a.indent && a.indent > 0)
            )
              throw new TypeError(
                'option "indent" must be "\\t", an integer > 0, or `null`'
              );
            if (
              z(a, "numericSeparator") &&
              "boolean" != typeof a.numericSeparator
            )
              throw new TypeError(
                'option "numericSeparator", if provided, must be `true` or `false`'
              );
            var d = a.numericSeparator;
            if (void 0 === t) return "undefined";
            if (null === t) return "null";
            if ("boolean" == typeof t) return t ? "true" : "false";
            if ("string" == typeof t) return G(t, a);
            if ("number" == typeof t) {
              if (0 === t) return 1 / 0 / t > 0 ? "0" : "-0";
              var x = String(t);
              return d ? M(t, x) : x;
            }
            if ("bigint" == typeof t) {
              var E = String(t) + "n";
              return d ? M(t, E) : E;
            }
            var P = void 0 === a.depth ? 5 : a.depth;
            if (
              (void 0 === n && (n = 0), n >= P && P > 0 && "object" == typeof t)
            )
              return L(t) ? "[Array]" : "[Object]";
            var $ = (function (e, t) {
              var r;
              if ("\t" === e.indent) r = "\t";
              else {
                if (!("number" == typeof e.indent && e.indent > 0)) return null;
                r = O.call(Array(e.indent + 1), " ");
              }
              return { base: r, prev: O.call(Array(t + 1), r) };
            })(a, n);
            if (void 0 === s) s = [];
            else if (J(s, t) >= 0) return "[Circular]";
            function F(t, r, i) {
              if ((r && (s = S.call(s)).push(r), i)) {
                var o = { depth: a.depth };
                return (
                  z(a, "quoteStyle") && (o.quoteStyle = a.quoteStyle),
                  e(t, o, n + 1, s)
                );
              }
              return e(t, a, n + 1, s);
            }
            if ("function" == typeof t && !B(t)) {
              var V = (function (e) {
                  if (e.name) return e.name;
                  var t = g.call(y.call(e), /^function\s*([\w$]+)/);
                  if (t) return t[1];
                  return null;
                })(t),
                W = Z(t, F);
              return (
                "[Function" +
                (V ? ": " + V : " (anonymous)") +
                "]" +
                (W.length > 0 ? " { " + O.call(W, ", ") + " }" : "")
              );
            }
            if (U(t)) {
              var ee = k
                ? b.call(String(t), /^(Symbol\(.*\))_[^)]*$/, "$1")
                : _.call(t);
              return "object" != typeof t || k ? ee : K(ee);
            }
            if (
              (function (e) {
                if (!e || "object" != typeof e) return !1;
                if (
                  "undefined" != typeof HTMLElement &&
                  e instanceof HTMLElement
                )
                  return !0;
                return (
                  "string" == typeof e.nodeName &&
                  "function" == typeof e.getAttribute
                );
              })(t)
            ) {
              for (
                var te = "<" + w.call(String(t.nodeName)),
                  re = t.attributes || [],
                  ne = 0;
                ne < re.length;
                ne++
              )
                te += " " + re[ne].name + "=" + N(q(re[ne].value), "double", a);
              return (
                (te += ">"),
                t.childNodes && t.childNodes.length && (te += "..."),
                (te += "</" + w.call(String(t.nodeName)) + ">")
              );
            }
            if (L(t)) {
              if (0 === t.length) return "[]";
              var se = Z(t, F);
              return $ &&
                !(function (e) {
                  for (var t = 0; t < e.length; t++)
                    if (J(e[t], "\n") >= 0) return !1;
                  return !0;
                })(se)
                ? "[" + Q(se, $) + "]"
                : "[ " + O.call(se, ", ") + " ]";
            }
            if (
              (function (e) {
                return !(
                  "[object Error]" !== H(e) ||
                  (I && "object" == typeof e && I in e)
                );
              })(t)
            ) {
              var ie = Z(t, F);
              return "cause" in Error.prototype ||
                !("cause" in t) ||
                T.call(t, "cause")
                ? 0 === ie.length
                  ? "[" + String(t) + "]"
                  : "{ [" + String(t) + "] " + O.call(ie, ", ") + " }"
                : "{ [" +
                    String(t) +
                    "] " +
                    O.call(j.call("[cause]: " + F(t.cause), ie), ", ") +
                    " }";
            }
            if ("object" == typeof t && c) {
              if (D && "function" == typeof t[D] && R)
                return R(t, { depth: P - n });
              if ("symbol" !== c && "function" == typeof t.inspect)
                return t.inspect();
            }
            if (
              (function (e) {
                if (!i || !e || "object" != typeof e) return !1;
                try {
                  i.call(e);
                  try {
                    l.call(e);
                  } catch (e) {
                    return !0;
                  }
                  return e instanceof Map;
                } catch (e) {}
                return !1;
              })(t)
            ) {
              var oe = [];
              return (
                o &&
                  o.call(t, function (e, r) {
                    oe.push(F(r, t, !0) + " => " + F(e, t));
                  }),
                X("Map", i.call(t), oe, $)
              );
            }
            if (
              (function (e) {
                if (!l || !e || "object" != typeof e) return !1;
                try {
                  l.call(e);
                  try {
                    i.call(e);
                  } catch (e) {
                    return !0;
                  }
                  return e instanceof Set;
                } catch (e) {}
                return !1;
              })(t)
            ) {
              var ae = [];
              return (
                u &&
                  u.call(t, function (e) {
                    ae.push(F(e, t));
                  }),
                X("Set", l.call(t), ae, $)
              );
            }
            if (
              (function (e) {
                if (!p || !e || "object" != typeof e) return !1;
                try {
                  p.call(e, p);
                  try {
                    h.call(e, h);
                  } catch (e) {
                    return !0;
                  }
                  return e instanceof WeakMap;
                } catch (e) {}
                return !1;
              })(t)
            )
              return Y("WeakMap");
            if (
              (function (e) {
                if (!h || !e || "object" != typeof e) return !1;
                try {
                  h.call(e, h);
                  try {
                    p.call(e, p);
                  } catch (e) {
                    return !0;
                  }
                  return e instanceof WeakSet;
                } catch (e) {}
                return !1;
              })(t)
            )
              return Y("WeakSet");
            if (
              (function (e) {
                if (!f || !e || "object" != typeof e) return !1;
                try {
                  return f.call(e), !0;
                } catch (e) {}
                return !1;
              })(t)
            )
              return Y("WeakRef");
            if (
              (function (e) {
                return !(
                  "[object Number]" !== H(e) ||
                  (I && "object" == typeof e && I in e)
                );
              })(t)
            )
              return K(F(Number(t)));
            if (
              (function (e) {
                if (!e || "object" != typeof e || !A) return !1;
                try {
                  return A.call(e), !0;
                } catch (e) {}
                return !1;
              })(t)
            )
              return K(F(A.call(t)));
            if (
              (function (e) {
                return !(
                  "[object Boolean]" !== H(e) ||
                  (I && "object" == typeof e && I in e)
                );
              })(t)
            )
              return K(m.call(t));
            if (
              (function (e) {
                return !(
                  "[object String]" !== H(e) ||
                  (I && "object" == typeof e && I in e)
                );
              })(t)
            )
              return K(F(String(t)));
            if (
              !(function (e) {
                return !(
                  "[object Date]" !== H(e) ||
                  (I && "object" == typeof e && I in e)
                );
              })(t) &&
              !B(t)
            ) {
              var ce = Z(t, F),
                le = C
                  ? C(t) === Object.prototype
                  : t instanceof Object || t.constructor === Object,
                ue = t instanceof Object ? "" : "null prototype",
                pe =
                  !le && I && Object(t) === t && I in t
                    ? v.call(H(t), 8, -1)
                    : ue
                    ? "Object"
                    : "",
                he =
                  (le || "function" != typeof t.constructor
                    ? ""
                    : t.constructor.name
                    ? t.constructor.name + " "
                    : "") +
                  (pe || ue
                    ? "[" + O.call(j.call([], pe || [], ue || []), ": ") + "] "
                    : "");
              return 0 === ce.length
                ? he + "{}"
                : $
                ? he + "{" + Q(ce, $) + "}"
                : he + "{ " + O.call(ce, ", ") + " }";
            }
            return String(t);
          };
          var V =
            Object.prototype.hasOwnProperty ||
            function (e) {
              return e in this;
            };
          function z(e, t) {
            return V.call(e, t);
          }
          function H(e) {
            return d.call(e);
          }
          function J(e, t) {
            if (e.indexOf) return e.indexOf(t);
            for (var r = 0, n = e.length; r < n; r++) if (e[r] === t) return r;
            return -1;
          }
          function G(e, t) {
            if (e.length > t.maxStringLength) {
              var r = e.length - t.maxStringLength,
                n = "... " + r + " more character" + (r > 1 ? "s" : "");
              return G(v.call(e, 0, t.maxStringLength), t) + n;
            }
            return N(
              b.call(b.call(e, /(['\\])/g, "\\$1"), /[\x00-\x1f]/g, W),
              "single",
              t
            );
          }
          function W(e) {
            var t = e.charCodeAt(0),
              r = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[t];
            return r
              ? "\\" + r
              : "\\x" + (t < 16 ? "0" : "") + x.call(t.toString(16));
          }
          function K(e) {
            return "Object(" + e + ")";
          }
          function Y(e) {
            return e + " { ? }";
          }
          function X(e, t, r, n) {
            return e + " (" + t + ") {" + (n ? Q(r, n) : O.call(r, ", ")) + "}";
          }
          function Q(e, t) {
            if (0 === e.length) return "";
            var r = "\n" + t.prev + t.base;
            return r + O.call(e, "," + r) + "\n" + t.prev;
          }
          function Z(e, t) {
            var r = L(e),
              n = [];
            if (r) {
              n.length = e.length;
              for (var s = 0; s < e.length; s++)
                n[s] = z(e, s) ? t(e[s], e) : "";
            }
            var i,
              o = "function" == typeof $ ? $(e) : [];
            if (k) {
              i = {};
              for (var a = 0; a < o.length; a++) i["$" + o[a]] = o[a];
            }
            for (var c in e)
              z(e, c) &&
                ((r && String(Number(c)) === c && c < e.length) ||
                  (k && i["$" + c] instanceof Symbol) ||
                  (E.call(/[^\w$]/, c)
                    ? n.push(t(c, e) + ": " + t(e[c], e))
                    : n.push(c + ": " + t(e[c], e))));
            if ("function" == typeof $)
              for (var l = 0; l < o.length; l++)
                T.call(e, o[l]) &&
                  n.push("[" + t(o[l]) + "]: " + t(e[o[l]], e));
            return n;
          }
        },
        5606: (e) => {
          var t,
            r,
            n = (e.exports = {});
          function s() {
            throw new Error("setTimeout has not been defined");
          }
          function i() {
            throw new Error("clearTimeout has not been defined");
          }
          function o(e) {
            if (t === setTimeout) return setTimeout(e, 0);
            if ((t === s || !t) && setTimeout)
              return (t = setTimeout), setTimeout(e, 0);
            try {
              return t(e, 0);
            } catch (r) {
              try {
                return t.call(null, e, 0);
              } catch (r) {
                return t.call(this, e, 0);
              }
            }
          }
          !(function () {
            try {
              t = "function" == typeof setTimeout ? setTimeout : s;
            } catch (e) {
              t = s;
            }
            try {
              r = "function" == typeof clearTimeout ? clearTimeout : i;
            } catch (e) {
              r = i;
            }
          })();
          var a,
            c = [],
            l = !1,
            u = -1;
          function p() {
            l &&
              a &&
              ((l = !1),
              a.length ? (c = a.concat(c)) : (u = -1),
              c.length && h());
          }
          function h() {
            if (!l) {
              var e = o(p);
              l = !0;
              for (var t = c.length; t; ) {
                for (a = c, c = []; ++u < t; ) a && a[u].run();
                (u = -1), (t = c.length);
              }
              (a = null),
                (l = !1),
                (function (e) {
                  if (r === clearTimeout) return clearTimeout(e);
                  if ((r === i || !r) && clearTimeout)
                    return (r = clearTimeout), clearTimeout(e);
                  try {
                    return r(e);
                  } catch (t) {
                    try {
                      return r.call(null, e);
                    } catch (t) {
                      return r.call(this, e);
                    }
                  }
                })(e);
            }
          }
          function f(e, t) {
            (this.fun = e), (this.array = t);
          }
          function m() {}
          (n.nextTick = function (e) {
            var t = new Array(arguments.length - 1);
            if (arguments.length > 1)
              for (var r = 1; r < arguments.length; r++)
                t[r - 1] = arguments[r];
            c.push(new f(e, t)), 1 !== c.length || l || o(h);
          }),
            (f.prototype.run = function () {
              this.fun.apply(null, this.array);
            }),
            (n.title = "browser"),
            (n.browser = !0),
            (n.env = {}),
            (n.argv = []),
            (n.version = ""),
            (n.versions = {}),
            (n.on = m),
            (n.addListener = m),
            (n.once = m),
            (n.off = m),
            (n.removeListener = m),
            (n.removeAllListeners = m),
            (n.emit = m),
            (n.prependListener = m),
            (n.prependOnceListener = m),
            (n.listeners = function (e) {
              return [];
            }),
            (n.binding = function (e) {
              throw new Error("process.binding is not supported");
            }),
            (n.cwd = function () {
              return "/";
            }),
            (n.chdir = function (e) {
              throw new Error("process.chdir is not supported");
            }),
            (n.umask = function () {
              return 0;
            });
        },
        4765: (e) => {
          "use strict";
          var t = String.prototype.replace,
            r = /%20/g,
            n = "RFC1738",
            s = "RFC3986";
          e.exports = {
            default: s,
            formatters: {
              RFC1738: function (e) {
                return t.call(e, r, "+");
              },
              RFC3986: function (e) {
                return String(e);
              },
            },
            RFC1738: n,
            RFC3986: s,
          };
        },
        5373: (e, t, r) => {
          "use strict";
          var n = r(8636),
            s = r(2642),
            i = r(4765);
          e.exports = { formats: i, parse: s, stringify: n };
        },
        2642: (e, t, r) => {
          "use strict";
          var n = r(7720),
            s = Object.prototype.hasOwnProperty,
            i = Array.isArray,
            o = {
              allowDots: !1,
              allowPrototypes: !1,
              allowSparse: !1,
              arrayLimit: 20,
              charset: "utf-8",
              charsetSentinel: !1,
              comma: !1,
              decoder: n.decode,
              delimiter: "&",
              depth: 5,
              ignoreQueryPrefix: !1,
              interpretNumericEntities: !1,
              parameterLimit: 1e3,
              parseArrays: !0,
              plainObjects: !1,
              strictNullHandling: !1,
            },
            a = function (e) {
              return e.replace(/&#(\d+);/g, function (e, t) {
                return String.fromCharCode(parseInt(t, 10));
              });
            },
            c = function (e, t) {
              return e && "string" == typeof e && t.comma && e.indexOf(",") > -1
                ? e.split(",")
                : e;
            },
            l = function (e, t, r, n) {
              if (e) {
                var i = r.allowDots ? e.replace(/\.([^.[]+)/g, "[$1]") : e,
                  o = /(\[[^[\]]*])/g,
                  a = r.depth > 0 && /(\[[^[\]]*])/.exec(i),
                  l = a ? i.slice(0, a.index) : i,
                  u = [];
                if (l) {
                  if (
                    !r.plainObjects &&
                    s.call(Object.prototype, l) &&
                    !r.allowPrototypes
                  )
                    return;
                  u.push(l);
                }
                for (
                  var p = 0;
                  r.depth > 0 && null !== (a = o.exec(i)) && p < r.depth;

                ) {
                  if (
                    ((p += 1),
                    !r.plainObjects &&
                      s.call(Object.prototype, a[1].slice(1, -1)) &&
                      !r.allowPrototypes)
                  )
                    return;
                  u.push(a[1]);
                }
                return (
                  a && u.push("[" + i.slice(a.index) + "]"),
                  (function (e, t, r, n) {
                    for (
                      var s = n ? t : c(t, r), i = e.length - 1;
                      i >= 0;
                      --i
                    ) {
                      var o,
                        a = e[i];
                      if ("[]" === a && r.parseArrays) o = [].concat(s);
                      else {
                        o = r.plainObjects ? Object.create(null) : {};
                        var l =
                            "[" === a.charAt(0) &&
                            "]" === a.charAt(a.length - 1)
                              ? a.slice(1, -1)
                              : a,
                          u = parseInt(l, 10);
                        r.parseArrays || "" !== l
                          ? !isNaN(u) &&
                            a !== l &&
                            String(u) === l &&
                            u >= 0 &&
                            r.parseArrays &&
                            u <= r.arrayLimit
                            ? ((o = [])[u] = s)
                            : "__proto__" !== l && (o[l] = s)
                          : (o = { 0: s });
                      }
                      s = o;
                    }
                    return s;
                  })(u, t, r, n)
                );
              }
            };
          e.exports = function (e, t) {
            var r = (function (e) {
              if (!e) return o;
              if (
                null !== e.decoder &&
                void 0 !== e.decoder &&
                "function" != typeof e.decoder
              )
                throw new TypeError("Decoder has to be a function.");
              if (
                void 0 !== e.charset &&
                "utf-8" !== e.charset &&
                "iso-8859-1" !== e.charset
              )
                throw new TypeError(
                  "The charset option must be either utf-8, iso-8859-1, or undefined"
                );
              var t = void 0 === e.charset ? o.charset : e.charset;
              return {
                allowDots: void 0 === e.allowDots ? o.allowDots : !!e.allowDots,
                allowPrototypes:
                  "boolean" == typeof e.allowPrototypes
                    ? e.allowPrototypes
                    : o.allowPrototypes,
                allowSparse:
                  "boolean" == typeof e.allowSparse
                    ? e.allowSparse
                    : o.allowSparse,
                arrayLimit:
                  "number" == typeof e.arrayLimit ? e.arrayLimit : o.arrayLimit,
                charset: t,
                charsetSentinel:
                  "boolean" == typeof e.charsetSentinel
                    ? e.charsetSentinel
                    : o.charsetSentinel,
                comma: "boolean" == typeof e.comma ? e.comma : o.comma,
                decoder: "function" == typeof e.decoder ? e.decoder : o.decoder,
                delimiter:
                  "string" == typeof e.delimiter || n.isRegExp(e.delimiter)
                    ? e.delimiter
                    : o.delimiter,
                depth:
                  "number" == typeof e.depth || !1 === e.depth
                    ? +e.depth
                    : o.depth,
                ignoreQueryPrefix: !0 === e.ignoreQueryPrefix,
                interpretNumericEntities:
                  "boolean" == typeof e.interpretNumericEntities
                    ? e.interpretNumericEntities
                    : o.interpretNumericEntities,
                parameterLimit:
                  "number" == typeof e.parameterLimit
                    ? e.parameterLimit
                    : o.parameterLimit,
                parseArrays: !1 !== e.parseArrays,
                plainObjects:
                  "boolean" == typeof e.plainObjects
                    ? e.plainObjects
                    : o.plainObjects,
                strictNullHandling:
                  "boolean" == typeof e.strictNullHandling
                    ? e.strictNullHandling
                    : o.strictNullHandling,
              };
            })(t);
            if ("" === e || null == e)
              return r.plainObjects ? Object.create(null) : {};
            for (
              var u =
                  "string" == typeof e
                    ? (function (e, t) {
                        var r,
                          l = { __proto__: null },
                          u = t.ignoreQueryPrefix ? e.replace(/^\?/, "") : e,
                          p =
                            t.parameterLimit === 1 / 0
                              ? void 0
                              : t.parameterLimit,
                          h = u.split(t.delimiter, p),
                          f = -1,
                          m = t.charset;
                        if (t.charsetSentinel)
                          for (r = 0; r < h.length; ++r)
                            0 === h[r].indexOf("utf8=") &&
                              ("utf8=%E2%9C%93" === h[r]
                                ? (m = "utf-8")
                                : "utf8=%26%2310003%3B" === h[r] &&
                                  (m = "iso-8859-1"),
                              (f = r),
                              (r = h.length));
                        for (r = 0; r < h.length; ++r)
                          if (r !== f) {
                            var d,
                              y,
                              g = h[r],
                              v = g.indexOf("]="),
                              b = -1 === v ? g.indexOf("=") : v + 1;
                            -1 === b
                              ? ((d = t.decoder(g, o.decoder, m, "key")),
                                (y = t.strictNullHandling ? null : ""))
                              : ((d = t.decoder(
                                  g.slice(0, b),
                                  o.decoder,
                                  m,
                                  "key"
                                )),
                                (y = n.maybeMap(
                                  c(g.slice(b + 1), t),
                                  function (e) {
                                    return t.decoder(e, o.decoder, m, "value");
                                  }
                                ))),
                              y &&
                                t.interpretNumericEntities &&
                                "iso-8859-1" === m &&
                                (y = a(y)),
                              g.indexOf("[]=") > -1 && (y = i(y) ? [y] : y),
                              s.call(l, d)
                                ? (l[d] = n.combine(l[d], y))
                                : (l[d] = y);
                          }
                        return l;
                      })(e, r)
                    : e,
                p = r.plainObjects ? Object.create(null) : {},
                h = Object.keys(u),
                f = 0;
              f < h.length;
              ++f
            ) {
              var m = h[f],
                d = l(m, u[m], r, "string" == typeof e);
              p = n.merge(p, d, r);
            }
            return !0 === r.allowSparse ? p : n.compact(p);
          };
        },
        8636: (e, t, r) => {
          "use strict";
          var n = r(920),
            s = r(7720),
            i = r(4765),
            o = Object.prototype.hasOwnProperty,
            a = {
              brackets: function (e) {
                return e + "[]";
              },
              comma: "comma",
              indices: function (e, t) {
                return e + "[" + t + "]";
              },
              repeat: function (e) {
                return e;
              },
            },
            c = Array.isArray,
            l = Array.prototype.push,
            u = function (e, t) {
              l.apply(e, c(t) ? t : [t]);
            },
            p = Date.prototype.toISOString,
            h = i.default,
            f = {
              addQueryPrefix: !1,
              allowDots: !1,
              charset: "utf-8",
              charsetSentinel: !1,
              delimiter: "&",
              encode: !0,
              encoder: s.encode,
              encodeValuesOnly: !1,
              format: h,
              formatter: i.formatters[h],
              indices: !1,
              serializeDate: function (e) {
                return p.call(e);
              },
              skipNulls: !1,
              strictNullHandling: !1,
            },
            m = {},
            d = function e(t, r, i, o, a, l, p, h, d, y, g, v, b, x, w, E) {
              for (
                var j, O = t, S = E, P = 0, A = !1;
                void 0 !== (S = S.get(m)) && !A;

              ) {
                var $ = S.get(t);
                if (((P += 1), void 0 !== $)) {
                  if ($ === P) throw new RangeError("Cyclic object value");
                  A = !0;
                }
                void 0 === S.get(m) && (P = 0);
              }
              if (
                ("function" == typeof h
                  ? (O = h(r, O))
                  : O instanceof Date
                  ? (O = g(O))
                  : "comma" === i &&
                    c(O) &&
                    (O = s.maybeMap(O, function (e) {
                      return e instanceof Date ? g(e) : e;
                    })),
                null === O)
              ) {
                if (a) return p && !x ? p(r, f.encoder, w, "key", v) : r;
                O = "";
              }
              if (
                "string" == typeof (j = O) ||
                "number" == typeof j ||
                "boolean" == typeof j ||
                "symbol" == typeof j ||
                "bigint" == typeof j ||
                s.isBuffer(O)
              )
                return p
                  ? [
                      b(x ? r : p(r, f.encoder, w, "key", v)) +
                        "=" +
                        b(p(O, f.encoder, w, "value", v)),
                    ]
                  : [b(r) + "=" + b(String(O))];
              var _,
                k = [];
              if (void 0 === O) return k;
              if ("comma" === i && c(O))
                x && p && (O = s.maybeMap(O, p)),
                  (_ = [
                    { value: O.length > 0 ? O.join(",") || null : void 0 },
                  ]);
              else if (c(h)) _ = h;
              else {
                var I = Object.keys(O);
                _ = d ? I.sort(d) : I;
              }
              for (
                var T = o && c(O) && 1 === O.length ? r + "[]" : r, C = 0;
                C < _.length;
                ++C
              ) {
                var M = _[C],
                  R =
                    "object" == typeof M && void 0 !== M.value ? M.value : O[M];
                if (!l || null !== R) {
                  var F = c(O)
                    ? "function" == typeof i
                      ? i(T, M)
                      : T
                    : T + (y ? "." + M : "[" + M + "]");
                  E.set(t, P);
                  var D = n();
                  D.set(m, E),
                    u(
                      k,
                      e(
                        R,
                        F,
                        i,
                        o,
                        a,
                        l,
                        "comma" === i && x && c(O) ? null : p,
                        h,
                        d,
                        y,
                        g,
                        v,
                        b,
                        x,
                        w,
                        D
                      )
                    );
                }
              }
              return k;
            };
          e.exports = function (e, t) {
            var r,
              s = e,
              l = (function (e) {
                if (!e) return f;
                if (
                  null !== e.encoder &&
                  void 0 !== e.encoder &&
                  "function" != typeof e.encoder
                )
                  throw new TypeError("Encoder has to be a function.");
                var t = e.charset || f.charset;
                if (
                  void 0 !== e.charset &&
                  "utf-8" !== e.charset &&
                  "iso-8859-1" !== e.charset
                )
                  throw new TypeError(
                    "The charset option must be either utf-8, iso-8859-1, or undefined"
                  );
                var r = i.default;
                if (void 0 !== e.format) {
                  if (!o.call(i.formatters, e.format))
                    throw new TypeError("Unknown format option provided.");
                  r = e.format;
                }
                var n = i.formatters[r],
                  s = f.filter;
                return (
                  ("function" == typeof e.filter || c(e.filter)) &&
                    (s = e.filter),
                  {
                    addQueryPrefix:
                      "boolean" == typeof e.addQueryPrefix
                        ? e.addQueryPrefix
                        : f.addQueryPrefix,
                    allowDots:
                      void 0 === e.allowDots ? f.allowDots : !!e.allowDots,
                    charset: t,
                    charsetSentinel:
                      "boolean" == typeof e.charsetSentinel
                        ? e.charsetSentinel
                        : f.charsetSentinel,
                    delimiter:
                      void 0 === e.delimiter ? f.delimiter : e.delimiter,
                    encode: "boolean" == typeof e.encode ? e.encode : f.encode,
                    encoder:
                      "function" == typeof e.encoder ? e.encoder : f.encoder,
                    encodeValuesOnly:
                      "boolean" == typeof e.encodeValuesOnly
                        ? e.encodeValuesOnly
                        : f.encodeValuesOnly,
                    filter: s,
                    format: r,
                    formatter: n,
                    serializeDate:
                      "function" == typeof e.serializeDate
                        ? e.serializeDate
                        : f.serializeDate,
                    skipNulls:
                      "boolean" == typeof e.skipNulls
                        ? e.skipNulls
                        : f.skipNulls,
                    sort: "function" == typeof e.sort ? e.sort : null,
                    strictNullHandling:
                      "boolean" == typeof e.strictNullHandling
                        ? e.strictNullHandling
                        : f.strictNullHandling,
                  }
                );
              })(t);
            "function" == typeof l.filter
              ? (s = (0, l.filter)("", s))
              : c(l.filter) && (r = l.filter);
            var p,
              h = [];
            if ("object" != typeof s || null === s) return "";
            p =
              t && t.arrayFormat in a
                ? t.arrayFormat
                : t && "indices" in t
                ? t.indices
                  ? "indices"
                  : "repeat"
                : "indices";
            var m = a[p];
            if (
              t &&
              "commaRoundTrip" in t &&
              "boolean" != typeof t.commaRoundTrip
            )
              throw new TypeError(
                "`commaRoundTrip` must be a boolean, or absent"
              );
            var y = "comma" === m && t && t.commaRoundTrip;
            r || (r = Object.keys(s)), l.sort && r.sort(l.sort);
            for (var g = n(), v = 0; v < r.length; ++v) {
              var b = r[v];
              (l.skipNulls && null === s[b]) ||
                u(
                  h,
                  d(
                    s[b],
                    b,
                    m,
                    y,
                    l.strictNullHandling,
                    l.skipNulls,
                    l.encode ? l.encoder : null,
                    l.filter,
                    l.sort,
                    l.allowDots,
                    l.serializeDate,
                    l.format,
                    l.formatter,
                    l.encodeValuesOnly,
                    l.charset,
                    g
                  )
                );
            }
            var x = h.join(l.delimiter),
              w = !0 === l.addQueryPrefix ? "?" : "";
            return (
              l.charsetSentinel &&
                ("iso-8859-1" === l.charset
                  ? (w += "utf8=%26%2310003%3B&")
                  : (w += "utf8=%E2%9C%93&")),
              x.length > 0 ? w + x : ""
            );
          };
        },
        7720: (e, t, r) => {
          "use strict";
          var n = r(4765),
            s = Object.prototype.hasOwnProperty,
            i = Array.isArray,
            o = (function () {
              for (var e = [], t = 0; t < 256; ++t)
                e.push(
                  "%" + ((t < 16 ? "0" : "") + t.toString(16)).toUpperCase()
                );
              return e;
            })(),
            a = function (e, t) {
              for (
                var r = t && t.plainObjects ? Object.create(null) : {}, n = 0;
                n < e.length;
                ++n
              )
                void 0 !== e[n] && (r[n] = e[n]);
              return r;
            };
          e.exports = {
            arrayToObject: a,
            assign: function (e, t) {
              return Object.keys(t).reduce(function (e, r) {
                return (e[r] = t[r]), e;
              }, e);
            },
            combine: function (e, t) {
              return [].concat(e, t);
            },
            compact: function (e) {
              for (
                var t = [{ obj: { o: e }, prop: "o" }], r = [], n = 0;
                n < t.length;
                ++n
              )
                for (
                  var s = t[n], o = s.obj[s.prop], a = Object.keys(o), c = 0;
                  c < a.length;
                  ++c
                ) {
                  var l = a[c],
                    u = o[l];
                  "object" == typeof u &&
                    null !== u &&
                    -1 === r.indexOf(u) &&
                    (t.push({ obj: o, prop: l }), r.push(u));
                }
              return (
                (function (e) {
                  for (; e.length > 1; ) {
                    var t = e.pop(),
                      r = t.obj[t.prop];
                    if (i(r)) {
                      for (var n = [], s = 0; s < r.length; ++s)
                        void 0 !== r[s] && n.push(r[s]);
                      t.obj[t.prop] = n;
                    }
                  }
                })(t),
                e
              );
            },
            decode: function (e, t, r) {
              var n = e.replace(/\+/g, " ");
              if ("iso-8859-1" === r)
                return n.replace(/%[0-9a-f]{2}/gi, unescape);
              try {
                return decodeURIComponent(n);
              } catch (e) {
                return n;
              }
            },
            encode: function (e, t, r, s, i) {
              if (0 === e.length) return e;
              var a = e;
              if (
                ("symbol" == typeof e
                  ? (a = Symbol.prototype.toString.call(e))
                  : "string" != typeof e && (a = String(e)),
                "iso-8859-1" === r)
              )
                return escape(a).replace(/%u[0-9a-f]{4}/gi, function (e) {
                  return "%26%23" + parseInt(e.slice(2), 16) + "%3B";
                });
              for (var c = "", l = 0; l < a.length; ++l) {
                var u = a.charCodeAt(l);
                45 === u ||
                46 === u ||
                95 === u ||
                126 === u ||
                (u >= 48 && u <= 57) ||
                (u >= 65 && u <= 90) ||
                (u >= 97 && u <= 122) ||
                (i === n.RFC1738 && (40 === u || 41 === u))
                  ? (c += a.charAt(l))
                  : u < 128
                  ? (c += o[u])
                  : u < 2048
                  ? (c += o[192 | (u >> 6)] + o[128 | (63 & u)])
                  : u < 55296 || u >= 57344
                  ? (c +=
                      o[224 | (u >> 12)] +
                      o[128 | ((u >> 6) & 63)] +
                      o[128 | (63 & u)])
                  : ((l += 1),
                    (u =
                      65536 + (((1023 & u) << 10) | (1023 & a.charCodeAt(l)))),
                    (c +=
                      o[240 | (u >> 18)] +
                      o[128 | ((u >> 12) & 63)] +
                      o[128 | ((u >> 6) & 63)] +
                      o[128 | (63 & u)]));
              }
              return c;
            },
            isBuffer: function (e) {
              return (
                !(!e || "object" != typeof e) &&
                !!(
                  e.constructor &&
                  e.constructor.isBuffer &&
                  e.constructor.isBuffer(e)
                )
              );
            },
            isRegExp: function (e) {
              return "[object RegExp]" === Object.prototype.toString.call(e);
            },
            maybeMap: function (e, t) {
              if (i(e)) {
                for (var r = [], n = 0; n < e.length; n += 1) r.push(t(e[n]));
                return r;
              }
              return t(e);
            },
            merge: function e(t, r, n) {
              if (!r) return t;
              if ("object" != typeof r) {
                if (i(t)) t.push(r);
                else {
                  if (!t || "object" != typeof t) return [t, r];
                  ((n && (n.plainObjects || n.allowPrototypes)) ||
                    !s.call(Object.prototype, r)) &&
                    (t[r] = !0);
                }
                return t;
              }
              if (!t || "object" != typeof t) return [t].concat(r);
              var o = t;
              return (
                i(t) && !i(r) && (o = a(t, n)),
                i(t) && i(r)
                  ? (r.forEach(function (r, i) {
                      if (s.call(t, i)) {
                        var o = t[i];
                        o && "object" == typeof o && r && "object" == typeof r
                          ? (t[i] = e(o, r, n))
                          : t.push(r);
                      } else t[i] = r;
                    }),
                    t)
                  : Object.keys(r).reduce(function (t, i) {
                      var o = r[i];
                      return (
                        s.call(t, i) ? (t[i] = e(t[i], o, n)) : (t[i] = o), t
                      );
                    }, o)
              );
            },
          };
        },
        8068: (e) => {
          "use strict";
          var t = (() => {
            var e = Object.defineProperty,
              t = Object.getOwnPropertyDescriptor,
              r = Object.getOwnPropertyNames,
              n = Object.getOwnPropertySymbols,
              s = Object.prototype.hasOwnProperty,
              i = Object.prototype.propertyIsEnumerable,
              o = (t, r, n) =>
                r in t
                  ? e(t, r, {
                      enumerable: !0,
                      configurable: !0,
                      writable: !0,
                      value: n,
                    })
                  : (t[r] = n),
              a = (e, t) => {
                for (var r in t || (t = {})) s.call(t, r) && o(e, r, t[r]);
                if (n) for (var r of n(t)) i.call(t, r) && o(e, r, t[r]);
                return e;
              },
              c = (e, t, r) => (o(e, "symbol" != typeof t ? t + "" : t, r), r),
              l = {};
            ((t, r) => {
              for (var n in r) e(t, n, { get: r[n], enumerable: !0 });
            })(l, {
              DEFAULT_OPTIONS: () => p,
              DEFAULT_UUID_LENGTH: () => u,
              default: () => m,
            });
            var u = 6,
              p = {
                dictionary: "alphanum",
                shuffle: !0,
                debug: !1,
                length: u,
                counter: 0,
              },
              h = class {
                constructor(e = {}) {
                  c(this, "counter"),
                    c(this, "debug"),
                    c(this, "dict"),
                    c(this, "version"),
                    c(this, "dictIndex", 0),
                    c(this, "dictRange", []),
                    c(this, "lowerBound", 0),
                    c(this, "upperBound", 0),
                    c(this, "dictLength", 0),
                    c(this, "uuidLength"),
                    c(this, "_digit_first_ascii", 48),
                    c(this, "_digit_last_ascii", 58),
                    c(this, "_alpha_lower_first_ascii", 97),
                    c(this, "_alpha_lower_last_ascii", 123),
                    c(this, "_hex_last_ascii", 103),
                    c(this, "_alpha_upper_first_ascii", 65),
                    c(this, "_alpha_upper_last_ascii", 91),
                    c(this, "_number_dict_ranges", {
                      digits: [this._digit_first_ascii, this._digit_last_ascii],
                    }),
                    c(this, "_alpha_dict_ranges", {
                      lowerCase: [
                        this._alpha_lower_first_ascii,
                        this._alpha_lower_last_ascii,
                      ],
                      upperCase: [
                        this._alpha_upper_first_ascii,
                        this._alpha_upper_last_ascii,
                      ],
                    }),
                    c(this, "_alpha_lower_dict_ranges", {
                      lowerCase: [
                        this._alpha_lower_first_ascii,
                        this._alpha_lower_last_ascii,
                      ],
                    }),
                    c(this, "_alpha_upper_dict_ranges", {
                      upperCase: [
                        this._alpha_upper_first_ascii,
                        this._alpha_upper_last_ascii,
                      ],
                    }),
                    c(this, "_alphanum_dict_ranges", {
                      digits: [this._digit_first_ascii, this._digit_last_ascii],
                      lowerCase: [
                        this._alpha_lower_first_ascii,
                        this._alpha_lower_last_ascii,
                      ],
                      upperCase: [
                        this._alpha_upper_first_ascii,
                        this._alpha_upper_last_ascii,
                      ],
                    }),
                    c(this, "_alphanum_lower_dict_ranges", {
                      digits: [this._digit_first_ascii, this._digit_last_ascii],
                      lowerCase: [
                        this._alpha_lower_first_ascii,
                        this._alpha_lower_last_ascii,
                      ],
                    }),
                    c(this, "_alphanum_upper_dict_ranges", {
                      digits: [this._digit_first_ascii, this._digit_last_ascii],
                      upperCase: [
                        this._alpha_upper_first_ascii,
                        this._alpha_upper_last_ascii,
                      ],
                    }),
                    c(this, "_hex_dict_ranges", {
                      decDigits: [
                        this._digit_first_ascii,
                        this._digit_last_ascii,
                      ],
                      alphaDigits: [
                        this._alpha_lower_first_ascii,
                        this._hex_last_ascii,
                      ],
                    }),
                    c(this, "_dict_ranges", {
                      _number_dict_ranges: this._number_dict_ranges,
                      _alpha_dict_ranges: this._alpha_dict_ranges,
                      _alpha_lower_dict_ranges: this._alpha_lower_dict_ranges,
                      _alpha_upper_dict_ranges: this._alpha_upper_dict_ranges,
                      _alphanum_dict_ranges: this._alphanum_dict_ranges,
                      _alphanum_lower_dict_ranges:
                        this._alphanum_lower_dict_ranges,
                      _alphanum_upper_dict_ranges:
                        this._alphanum_upper_dict_ranges,
                      _hex_dict_ranges: this._hex_dict_ranges,
                    }),
                    c(this, "log", (...e) => {
                      const t = [...e];
                      if (
                        ((t[0] = `[short-unique-id] ${e[0]}`),
                        !0 === this.debug &&
                          "undefined" != typeof console &&
                          null !== console)
                      )
                        return console.log(...t);
                    }),
                    c(this, "setDictionary", (e, t) => {
                      let r;
                      if (e && Array.isArray(e) && e.length > 1) r = e;
                      else {
                        let t;
                        (r = []), (this.dictIndex = t = 0);
                        const n = `_${e}_dict_ranges`,
                          s = this._dict_ranges[n];
                        Object.keys(s).forEach((e) => {
                          const n = e;
                          for (
                            this.dictRange = s[n],
                              this.lowerBound = this.dictRange[0],
                              this.upperBound = this.dictRange[1],
                              this.dictIndex = t = this.lowerBound;
                            this.lowerBound <= this.upperBound
                              ? t < this.upperBound
                              : t > this.upperBound;
                            this.dictIndex =
                              this.lowerBound <= this.upperBound
                                ? (t += 1)
                                : (t -= 1)
                          )
                            r.push(String.fromCharCode(this.dictIndex));
                        });
                      }
                      if (t) {
                        const e = 0.5;
                        r = r.sort(() => Math.random() - e);
                      }
                      (this.dict = r),
                        (this.dictLength = this.dict.length),
                        this.setCounter(0);
                    }),
                    c(this, "seq", () => this.sequentialUUID()),
                    c(this, "sequentialUUID", () => {
                      let e,
                        t,
                        r = "";
                      e = this.counter;
                      do {
                        (t = e % this.dictLength),
                          (e = Math.trunc(e / this.dictLength)),
                          (r += this.dict[t]);
                      } while (0 !== e);
                      return (this.counter += 1), r;
                    }),
                    c(this, "rnd", (e = this.uuidLength || u) =>
                      this.randomUUID(e)
                    ),
                    c(this, "randomUUID", (e = this.uuidLength || u) => {
                      let t, r, n;
                      if (null == e || e < 1)
                        throw new Error("Invalid UUID Length Provided");
                      for (t = "", n = 0; n < e; n += 1)
                        (r =
                          parseInt(
                            (Math.random() * this.dictLength).toFixed(0),
                            10
                          ) % this.dictLength),
                          (t += this.dict[r]);
                      return t;
                    }),
                    c(this, "fmt", (e, t) => this.formattedUUID(e, t)),
                    c(this, "formattedUUID", (e, t) => {
                      const r = {
                        $r: this.randomUUID,
                        $s: this.sequentialUUID,
                        $t: this.stamp,
                      };
                      return e.replace(
                        /\$[rs]\d{0,}|\$t0|\$t[1-9]\d{1,}/g,
                        (e) => {
                          const n = e.slice(0, 2),
                            s = parseInt(e.slice(2), 10);
                          return "$s" === n
                            ? r[n]().padStart(s, "0")
                            : "$t" === n && t
                            ? r[n](s, t)
                            : r[n](s);
                        }
                      );
                    }),
                    c(this, "availableUUIDs", (e = this.uuidLength) =>
                      parseFloat(
                        Math.pow([...new Set(this.dict)].length, e).toFixed(0)
                      )
                    ),
                    c(
                      this,
                      "approxMaxBeforeCollision",
                      (e = this.availableUUIDs(this.uuidLength)) =>
                        parseFloat(Math.sqrt((Math.PI / 2) * e).toFixed(20))
                    ),
                    c(
                      this,
                      "collisionProbability",
                      (
                        e = this.availableUUIDs(this.uuidLength),
                        t = this.uuidLength
                      ) =>
                        parseFloat(
                          (
                            this.approxMaxBeforeCollision(e) /
                            this.availableUUIDs(t)
                          ).toFixed(20)
                        )
                    ),
                    c(
                      this,
                      "uniqueness",
                      (e = this.availableUUIDs(this.uuidLength)) => {
                        const t = parseFloat(
                          (1 - this.approxMaxBeforeCollision(e) / e).toFixed(20)
                        );
                        return t > 1 ? 1 : t < 0 ? 0 : t;
                      }
                    ),
                    c(this, "getVersion", () => this.version),
                    c(this, "stamp", (e, t) => {
                      const r = Math.floor(+(t || new Date()) / 1e3).toString(
                        16
                      );
                      if ("number" == typeof e && 0 === e) return r;
                      if ("number" != typeof e || e < 10)
                        throw new Error(
                          [
                            "Param finalLength must be a number greater than or equal to 10,",
                            "or 0 if you want the raw hexadecimal timestamp",
                          ].join("\n")
                        );
                      const n = e - 9,
                        s = Math.round(Math.random() * (n > 15 ? 15 : n)),
                        i = this.randomUUID(n);
                      return `${i.substring(0, s)}${r}${i.substring(
                        s
                      )}${s.toString(16)}`;
                    }),
                    c(this, "parseStamp", (e, t) => {
                      if (t && !/t0|t[1-9]\d{1,}/.test(t))
                        throw new Error(
                          "Cannot extract date from a formated UUID with no timestamp in the format"
                        );
                      const r = t
                        ? t
                            .replace(
                              /\$[rs]\d{0,}|\$t0|\$t[1-9]\d{1,}/g,
                              (e) => {
                                const t = {
                                    $r: (e) =>
                                      [...Array(e)].map(() => "r").join(""),
                                    $s: (e) =>
                                      [...Array(e)].map(() => "s").join(""),
                                    $t: (e) =>
                                      [...Array(e)].map(() => "t").join(""),
                                  },
                                  r = e.slice(0, 2),
                                  n = parseInt(e.slice(2), 10);
                                return t[r](n);
                              }
                            )
                            .replace(/^(.*?)(t{8,})(.*)$/g, (t, r, n) =>
                              e.substring(r.length, r.length + n.length)
                            )
                        : e;
                      if (8 === r.length)
                        return new Date(1e3 * parseInt(r, 16));
                      if (r.length < 10)
                        throw new Error("Stamp length invalid");
                      const n = parseInt(r.substring(r.length - 1), 16);
                      return new Date(
                        1e3 * parseInt(r.substring(n, n + 8), 16)
                      );
                    }),
                    c(this, "setCounter", (e) => {
                      this.counter = e;
                    });
                  const t = a(a({}, p), e);
                  (this.counter = 0),
                    (this.debug = !1),
                    (this.dict = []),
                    (this.version = "5.0.2");
                  const {
                    dictionary: r,
                    shuffle: n,
                    length: s,
                    counter: i,
                  } = t;
                  return (
                    (this.uuidLength = s),
                    this.setDictionary(r, n),
                    this.setCounter(i),
                    (this.debug = t.debug),
                    this.log(this.dict),
                    this.log(
                      `Generator instantiated with Dictionary Size ${this.dictLength} and counter set to ${this.counter}`
                    ),
                    (this.log = this.log.bind(this)),
                    (this.setDictionary = this.setDictionary.bind(this)),
                    (this.setCounter = this.setCounter.bind(this)),
                    (this.seq = this.seq.bind(this)),
                    (this.sequentialUUID = this.sequentialUUID.bind(this)),
                    (this.rnd = this.rnd.bind(this)),
                    (this.randomUUID = this.randomUUID.bind(this)),
                    (this.fmt = this.fmt.bind(this)),
                    (this.formattedUUID = this.formattedUUID.bind(this)),
                    (this.availableUUIDs = this.availableUUIDs.bind(this)),
                    (this.approxMaxBeforeCollision =
                      this.approxMaxBeforeCollision.bind(this)),
                    (this.collisionProbability =
                      this.collisionProbability.bind(this)),
                    (this.uniqueness = this.uniqueness.bind(this)),
                    (this.getVersion = this.getVersion.bind(this)),
                    (this.stamp = this.stamp.bind(this)),
                    (this.parseStamp = this.parseStamp.bind(this)),
                    this
                  );
                }
              };
            c(h, "default", h);
            var f,
              m = h;
            return (
              (f = l),
              ((n, i, o, a) => {
                if ((i && "object" == typeof i) || "function" == typeof i)
                  for (let c of r(i))
                    s.call(n, c) ||
                      c === o ||
                      e(n, c, {
                        get: () => i[c],
                        enumerable: !(a = t(i, c)) || a.enumerable,
                      });
                return n;
              })(e({}, "__esModule", { value: !0 }), f)
            );
          })();
          (e.exports = t.default),
            "undefined" != typeof window && (t = t.default);
        },
        920: (e, t, r) => {
          "use strict";
          var n = r(453),
            s = r(8075),
            i = r(8859),
            o = n("%TypeError%"),
            a = n("%WeakMap%", !0),
            c = n("%Map%", !0),
            l = s("WeakMap.prototype.get", !0),
            u = s("WeakMap.prototype.set", !0),
            p = s("WeakMap.prototype.has", !0),
            h = s("Map.prototype.get", !0),
            f = s("Map.prototype.set", !0),
            m = s("Map.prototype.has", !0),
            d = function (e, t) {
              for (var r, n = e; null !== (r = n.next); n = r)
                if (r.key === t)
                  return (n.next = r.next), (r.next = e.next), (e.next = r), r;
            };
          e.exports = function () {
            var e,
              t,
              r,
              n = {
                assert: function (e) {
                  if (!n.has(e))
                    throw new o("Side channel does not contain " + i(e));
                },
                get: function (n) {
                  if (
                    a &&
                    n &&
                    ("object" == typeof n || "function" == typeof n)
                  ) {
                    if (e) return l(e, n);
                  } else if (c) {
                    if (t) return h(t, n);
                  } else if (r)
                    return (function (e, t) {
                      var r = d(e, t);
                      return r && r.value;
                    })(r, n);
                },
                has: function (n) {
                  if (
                    a &&
                    n &&
                    ("object" == typeof n || "function" == typeof n)
                  ) {
                    if (e) return p(e, n);
                  } else if (c) {
                    if (t) return m(t, n);
                  } else if (r)
                    return (function (e, t) {
                      return !!d(e, t);
                    })(r, n);
                  return !1;
                },
                set: function (n, s) {
                  a && n && ("object" == typeof n || "function" == typeof n)
                    ? (e || (e = new a()), u(e, n, s))
                    : c
                    ? (t || (t = new c()), f(t, n, s))
                    : (r || (r = { key: {}, next: null }),
                      (function (e, t, r) {
                        var n = d(e, t);
                        n
                          ? (n.value = r)
                          : (e.next = { key: t, next: e.next, value: r });
                      })(r, n, s));
                },
              };
            return n;
          };
        },
        2646: (e) => {
          !(function () {
            "use strict";
            var t,
              r,
              n,
              s,
              i,
              o = "properties",
              a = "deepProperties",
              c = "propertyDescriptors",
              l = "staticProperties",
              u = "staticDeepProperties",
              p = "staticPropertyDescriptors",
              h = "configuration",
              f = "deepConfiguration",
              m = "deepProps",
              d = "deepStatics",
              y = "deepConf",
              g = "initializers",
              v = "methods",
              b = "composers",
              x = "compose";
            function w(e) {
              return Object.getOwnPropertyNames(e).concat(
                Object.getOwnPropertySymbols
                  ? Object.getOwnPropertySymbols(e)
                  : []
              );
            }
            function E(e, t) {
              return Array.prototype.slice.call(arguments, 2).reduce(e, t);
            }
            var j = E.bind(0, function (e, t) {
              if (t)
                for (var r = w(t), n = 0; n < r.length; n += 1)
                  Object.defineProperty(
                    e,
                    r[n],
                    Object.getOwnPropertyDescriptor(t, r[n])
                  );
              return e;
            });
            function O(e) {
              return "function" == typeof e;
            }
            function S(e) {
              return (e && "object" == typeof e) || O(e);
            }
            function P(e) {
              return (
                e && "object" == typeof e && e.__proto__ == Object.prototype
              );
            }
            var A = E.bind(0, function e(r, n) {
              if (n === t) return r;
              if (Array.isArray(n))
                return (Array.isArray(r) ? r : []).concat(n);
              if (!P(n)) return n;
              for (var s, i, o = w(n), a = 0; a < o.length; )
                (s = o[a++]),
                  (i = Object.getOwnPropertyDescriptor(n, s)).hasOwnProperty(
                    "value"
                  )
                    ? i.value !== t &&
                      (r[s] = e(
                        P(r[s]) || Array.isArray(n[s]) ? r[s] : {},
                        n[s]
                      ))
                    : Object.defineProperty(r, s, i);
              return r;
            });
            function $() {
              return (r = Array.prototype.concat
                .apply([], arguments)
                .filter(function (e, t, r) {
                  return O(e) && r.indexOf(e) === t;
                })).length
                ? r
                : t;
            }
            function _(e, t) {
              function n(r, n) {
                S(t[r]) && (S(e[r]) || (e[r] = {}), (n || j)(e[r], t[r]));
              }
              function s(n) {
                (r = $(e[n], t[n])) && (e[n] = r);
              }
              return (
                t &&
                  S((t = t[x] || t)) &&
                  (n(v),
                  n(o),
                  n(a, A),
                  n(c),
                  n(l),
                  n(u, A),
                  n(p),
                  n(h),
                  n(f, A),
                  s(g),
                  s(b)),
                e
              );
            }
            function k() {
              return (function (e) {
                return (
                  (r = function e(r) {
                    var n,
                      s,
                      i = e[x] || {},
                      l = { __proto__: i[v] },
                      u = i[g],
                      p = Array.prototype.slice.apply(arguments),
                      h = i[a];
                    if (
                      (h && A(l, h),
                      (h = i[o]) && j(l, h),
                      (h = i[c]) && Object.defineProperties(l, h),
                      !u || !u.length)
                    )
                      return l;
                    for (r === t && (r = {}), i = 0; i < u.length; )
                      O((n = u[i++])) &&
                        (l =
                          (s = n.call(l, r, {
                            instance: l,
                            stamp: e,
                            args: p,
                          })) === t
                            ? l
                            : s);
                    return l;
                  }),
                  (n = e[u]) && A(r, n),
                  (n = e[l]) && j(r, n),
                  (n = e[p]) && Object.defineProperties(r, n),
                  (n = O(r[x]) ? r[x] : k),
                  j(
                    (r[x] = function () {
                      return n.apply(this, arguments);
                    }),
                    e
                  ),
                  r
                );
              })(Array.prototype.concat.apply([this], arguments).reduce(_, {}));
            }
            function I(e) {
              return O(e) && O(e[x]);
            }
            var T = {};
            function C(e, i) {
              return function () {
                return (
                  ((s = {})[e] = i.apply(
                    t,
                    Array.prototype.concat.apply([{}], arguments)
                  )),
                  (((r = this) && r[x]) || n).call(r, s)
                );
              };
            }
            (T[v] = C(v, j)),
              (T[o] = T.props = C(o, j)),
              (T[g] = T.init = C(g, $)),
              (T[b] = C(b, $)),
              (T[a] = T[m] = C(a, A)),
              (T[l] = T.statics = C(l, j)),
              (T[u] = T[d] = C(u, A)),
              (T[h] = T.conf = C(h, j)),
              (T[f] = T[y] = C(f, A)),
              (T[c] = C(c, j)),
              (T[p] = C(p, j)),
              (n = T[x] =
                j(function () {
                  for (
                    var e, w, E = 0, O = [], P = arguments, _ = this;
                    E < P.length;

                  )
                    S((e = P[E++])) &&
                      O.push(
                        I(e)
                          ? e
                          : (((s = {})[v] = (w = e)[v] || t),
                            (n = w.props),
                            (s[o] = S((r = w[o]) || n) ? j({}, n, r) : t),
                            (s[g] = $(w.init, w[g])),
                            (s[b] = $(w[b])),
                            (n = w[m]),
                            (s[a] = S((r = w[a]) || n) ? A({}, n, r) : t),
                            (s[c] = w[c]),
                            (n = w.statics),
                            (s[l] = S((r = w[l]) || n) ? j({}, n, r) : t),
                            (n = w[d]),
                            (s[u] = S((r = w[u]) || n) ? A({}, n, r) : t),
                            (r = w[p]),
                            (s[p] = S(
                              (n = w.name && { name: { value: w.name } }) || r
                            )
                              ? j({}, r, n)
                              : t),
                            (n = w.conf),
                            (s[h] = S((r = w[h]) || n) ? j({}, n, r) : t),
                            (n = w[y]),
                            (s[f] = S((r = w[f]) || n) ? A({}, n, r) : t),
                            s)
                      );
                  if (
                    ((e = k.apply(_ || i, O)),
                    _ && O.unshift(_),
                    Array.isArray((P = e[x][b])))
                  )
                    for (E = 0; E < P.length; )
                      e = I((_ = P[E++]({ stamp: e, composables: O }))) ? _ : e;
                  return e;
                }, T)),
              (T.create = function () {
                return this.apply(t, arguments);
              }),
              ((s = {})[l] = T),
              (i = k(s)),
              (n[x] = n.bind()),
              (n.version = "4.3.2"),
              "object" != typeof t ? (e.exports = n) : (self.stampit = n);
          })();
        },
        6623: (e) => {
          "use strict";
          function t(e) {
            return Object.prototype.toString.call(e);
          }
          var r =
            Array.isArray ||
            function (e) {
              return "[object Array]" === Object.prototype.toString.call(e);
            };
          function n(e, t) {
            if (e.forEach) return e.forEach(t);
            for (var r = 0; r < e.length; r++) t(e[r], r, e);
          }
          var s =
              Object.keys ||
              function (e) {
                var t = [];
                for (var r in e) t.push(r);
                return t;
              },
            i = Object.prototype.propertyIsEnumerable,
            o = Object.getOwnPropertySymbols;
          function a(e) {
            var t = s(e);
            if (o)
              for (var r = o(e), n = 0; n < r.length; n++)
                i.call(e, r[n]) && t.push(r[n]);
            return t;
          }
          var c =
            Object.prototype.hasOwnProperty ||
            function (e, t) {
              return t in e;
            };
          function l(e) {
            if ("object" == typeof e && null !== e) {
              var s;
              if (r(e)) s = [];
              else if ("[object Date]" === t(e))
                s = new Date(e.getTime ? e.getTime() : e);
              else if (
                (function (e) {
                  return "[object RegExp]" === t(e);
                })(e)
              )
                s = new RegExp(e);
              else if (
                (function (e) {
                  return "[object Error]" === t(e);
                })(e)
              )
                s = { message: e.message };
              else if (
                (function (e) {
                  return "[object Boolean]" === t(e);
                })(e) ||
                (function (e) {
                  return "[object Number]" === t(e);
                })(e) ||
                (function (e) {
                  return "[object String]" === t(e);
                })(e)
              )
                s = Object(e);
              else if (Object.create && Object.getPrototypeOf)
                s = Object.create(Object.getPrototypeOf(e));
              else if (e.constructor === Object) s = {};
              else {
                var i =
                    (e.constructor && e.constructor.prototype) ||
                    e.__proto__ ||
                    {},
                  o = function () {};
                (o.prototype = i), (s = new o());
              }
              return (
                n(a(e), function (t) {
                  s[t] = e[t];
                }),
                s
              );
            }
            return e;
          }
          function u(e, t, s) {
            var i = [],
              o = [],
              u = !0;
            return (function e(p) {
              var h = s ? l(p) : p,
                f = {},
                m = !0,
                d = {
                  node: h,
                  node_: p,
                  path: [].concat(i),
                  parent: o[o.length - 1],
                  parents: o,
                  key: i[i.length - 1],
                  isRoot: 0 === i.length,
                  level: i.length,
                  circular: null,
                  update: function (e, t) {
                    d.isRoot || (d.parent.node[d.key] = e),
                      (d.node = e),
                      t && (m = !1);
                  },
                  delete: function (e) {
                    delete d.parent.node[d.key], e && (m = !1);
                  },
                  remove: function (e) {
                    r(d.parent.node)
                      ? d.parent.node.splice(d.key, 1)
                      : delete d.parent.node[d.key],
                      e && (m = !1);
                  },
                  keys: null,
                  before: function (e) {
                    f.before = e;
                  },
                  after: function (e) {
                    f.after = e;
                  },
                  pre: function (e) {
                    f.pre = e;
                  },
                  post: function (e) {
                    f.post = e;
                  },
                  stop: function () {
                    u = !1;
                  },
                  block: function () {
                    m = !1;
                  },
                };
              if (!u) return d;
              function y() {
                if ("object" == typeof d.node && null !== d.node) {
                  (d.keys && d.node_ === d.node) || (d.keys = a(d.node)),
                    (d.isLeaf = 0 === d.keys.length);
                  for (var e = 0; e < o.length; e++)
                    if (o[e].node_ === p) {
                      d.circular = o[e];
                      break;
                    }
                } else (d.isLeaf = !0), (d.keys = null);
                (d.notLeaf = !d.isLeaf), (d.notRoot = !d.isRoot);
              }
              y();
              var g = t.call(d, d.node);
              return (
                void 0 !== g && d.update && d.update(g),
                f.before && f.before.call(d, d.node),
                m
                  ? ("object" != typeof d.node ||
                      null === d.node ||
                      d.circular ||
                      (o.push(d),
                      y(),
                      n(d.keys, function (t, r) {
                        i.push(t), f.pre && f.pre.call(d, d.node[t], t);
                        var n = e(d.node[t]);
                        s && c.call(d.node, t) && (d.node[t] = n.node),
                          (n.isLast = r === d.keys.length - 1),
                          (n.isFirst = 0 === r),
                          f.post && f.post.call(d, n),
                          i.pop();
                      }),
                      o.pop()),
                    f.after && f.after.call(d, d.node),
                    d)
                  : d
              );
            })(e).node;
          }
          function p(e) {
            this.value = e;
          }
          function h(e) {
            return new p(e);
          }
          (p.prototype.get = function (e) {
            for (var t = this.value, r = 0; r < e.length; r++) {
              var n = e[r];
              if (!t || !c.call(t, n)) return;
              t = t[n];
            }
            return t;
          }),
            (p.prototype.has = function (e) {
              for (var t = this.value, r = 0; r < e.length; r++) {
                var n = e[r];
                if (!t || !c.call(t, n)) return !1;
                t = t[n];
              }
              return !0;
            }),
            (p.prototype.set = function (e, t) {
              for (var r = this.value, n = 0; n < e.length - 1; n++) {
                var s = e[n];
                c.call(r, s) || (r[s] = {}), (r = r[s]);
              }
              return (r[e[n]] = t), t;
            }),
            (p.prototype.map = function (e) {
              return u(this.value, e, !0);
            }),
            (p.prototype.forEach = function (e) {
              return (this.value = u(this.value, e, !1)), this.value;
            }),
            (p.prototype.reduce = function (e, t) {
              var r = 1 === arguments.length,
                n = r ? this.value : t;
              return (
                this.forEach(function (t) {
                  (this.isRoot && r) || (n = e.call(this, n, t));
                }),
                n
              );
            }),
            (p.prototype.paths = function () {
              var e = [];
              return (
                this.forEach(function () {
                  e.push(this.path);
                }),
                e
              );
            }),
            (p.prototype.nodes = function () {
              var e = [];
              return (
                this.forEach(function () {
                  e.push(this.node);
                }),
                e
              );
            }),
            (p.prototype.clone = function () {
              var e = [],
                t = [];
              return (function r(s) {
                for (var i = 0; i < e.length; i++) if (e[i] === s) return t[i];
                if ("object" == typeof s && null !== s) {
                  var o = l(s);
                  return (
                    e.push(s),
                    t.push(o),
                    n(a(s), function (e) {
                      o[e] = r(s[e]);
                    }),
                    e.pop(),
                    t.pop(),
                    o
                  );
                }
                return s;
              })(this.value);
            }),
            n(a(p.prototype), function (e) {
              h[e] = function (t) {
                var r = [].slice.call(arguments, 1),
                  n = new p(t);
                return n[e].apply(n, r);
              };
            }),
            (e.exports = h);
        },
        2634: () => {},
        8675: (e, t, r) => {
          e.exports = r(1523);
        },
      },
      t = {};
    function r(n) {
      var s = t[n];
      if (void 0 !== s) return s.exports;
      var i = (t[n] = { id: n, loaded: !1, exports: {} });
      return e[n].call(i.exports, i, i.exports, r), (i.loaded = !0), i.exports;
    }
    (r.n = (e) => {
      var t = e && e.__esModule ? () => e.default : () => e;
      return r.d(t, { a: t }), t;
    }),
      (r.d = (e, t) => {
        for (var n in t)
          r.o(t, n) &&
            !r.o(e, n) &&
            Object.defineProperty(e, n, { enumerable: !0, get: t[n] });
      }),
      (r.g = (function () {
        if ("object" == typeof globalThis) return globalThis;
        try {
          return this || new Function("return this")();
        } catch (e) {
          if ("object" == typeof window) return window;
        }
      })()),
      (r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
      (r.r = (e) => {
        "undefined" != typeof Symbol &&
          Symbol.toStringTag &&
          Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
          Object.defineProperty(e, "__esModule", { value: !0 });
      }),
      (r.nmd = (e) => ((e.paths = []), e.children || (e.children = []), e));
    var n = {};
    return (
      (() => {
        "use strict";
        r.d(n, { default: () => Wj });
        var e = {};
        r.r(e),
          r.d(e, {
            JsonPatchError: () => Qr,
            _areEquals: () => ln,
            applyOperation: () => nn,
            applyPatch: () => sn,
            applyReducer: () => on,
            deepClone: () => Zr,
            getValueByPointer: () => rn,
            validate: () => cn,
            validator: () => an,
          });
        var t = {};
        r.r(t),
          r.d(t, {
            compare: () => gn,
            generate: () => dn,
            observe: () => mn,
            unobserve: () => fn,
          });
        var s = {};
        r.r(s),
          r.d(s, {
            bJ: () => Yi,
            uQ: () => zi,
            Zd: () => Wi,
            LH: () => Hi,
            isHttpUrl: () => Ji,
            hd: () => Xi,
            aj: () => Qi,
            z9: () => Ki,
            zj: () => Zi,
          });
        var i = {};
        r.r(i),
          r.d(i, {
            hasElementSourceMap: () => Wa,
            includesClasses: () => Ya,
            includesSymbols: () => Ka,
            isAnnotationElement: () => Va,
            isArrayElement: () => qa,
            isBooleanElement: () => Da,
            isCommentElement: () => za,
            isElement: () => Ca,
            isLinkElement: () => Ba,
            isMemberElement: () => La,
            isNullElement: () => Fa,
            isNumberElement: () => Ra,
            isObjectElement: () => Na,
            isParseResultElement: () => Ha,
            isPrimitiveElement: () => Ga,
            isRefElement: () => Ua,
            isSourceMapElement: () => Ja,
            isStringElement: () => Ma,
          });
        var o = {};
        r.r(o),
          r.d(o, {
            isJSONReferenceElement: () => Zp,
            isJSONSchemaElement: () => Qp,
            isLinkDescriptionElement: () => th,
            isMediaElement: () => eh,
          });
        var a = {};
        r.r(a),
          r.d(a, {
            isOpenApiExtension: () => Hh,
            isReferenceLikeElement: () => Uh,
            isServerLikeElement: () => Vh,
            isTagLikeElement: () => zh,
          });
        var c = {};
        r.r(c),
          r.d(c, {
            isBooleanJsonSchemaElement: () => Qf,
            isCallbackElement: () => Tf,
            isComponentsElement: () => Cf,
            isContactElement: () => Mf,
            isExampleElement: () => Rf,
            isExternalDocumentationElement: () => Ff,
            isHeaderElement: () => Df,
            isInfoElement: () => Nf,
            isLicenseElement: () => qf,
            isLinkElement: () => Lf,
            isMediaTypeElement: () => rm,
            isOpenApi3_0Element: () => Uf,
            isOpenapiElement: () => Bf,
            isOperationElement: () => Vf,
            isParameterElement: () => zf,
            isPathItemElement: () => Hf,
            isPathsElement: () => Jf,
            isReferenceElement: () => Gf,
            isRequestBodyElement: () => Wf,
            isResponseElement: () => Kf,
            isResponsesElement: () => Yf,
            isSchemaElement: () => Xf,
            isSecurityRequirementElement: () => Zf,
            isServerElement: () => em,
            isServerVariableElement: () => tm,
            isServersElement: () => nm,
          });
        var l = {};
        r.r(l),
          r.d(l, {
            isBooleanJsonSchemaElement: () => $b,
            isCallbackElement: () => ib,
            isComponentsElement: () => ob,
            isContactElement: () => ab,
            isExampleElement: () => cb,
            isExternalDocumentationElement: () => lb,
            isHeaderElement: () => ub,
            isInfoElement: () => pb,
            isJsonSchemaDialectElement: () => hb,
            isLicenseElement: () => fb,
            isLinkElement: () => mb,
            isMediaTypeElement: () => Tb,
            isOpenApi3_1Element: () => yb,
            isOpenapiElement: () => db,
            isOperationElement: () => gb,
            isParameterElement: () => vb,
            isPathItemElement: () => bb,
            isPathItemElementExternal: () => xb,
            isPathsElement: () => wb,
            isReferenceElement: () => Eb,
            isReferenceElementExternal: () => jb,
            isRequestBodyElement: () => Ob,
            isResponseElement: () => Sb,
            isResponsesElement: () => Pb,
            isSchemaElement: () => Ab,
            isSecurityRequirementElement: () => _b,
            isServerElement: () => kb,
            isServerVariableElement: () => Ib,
          });
        var u = {};
        r.r(u),
          r.d(u, {
            cookie: () => $j,
            header: () => Aj,
            path: () => Oj,
            query: () => Sj,
          });
        const p = "application/json, application/yaml",
          h = "https://swagger.io",
          f = Object.freeze({ url: "/" });
        var m = r(5373),
          d = r.n(m);
        function y(e) {
          return null == e;
        }
        var g = {
          isNothing: y,
          isObject: function (e) {
            return "object" == typeof e && null !== e;
          },
          toArray: function (e) {
            return Array.isArray(e) ? e : y(e) ? [] : [e];
          },
          repeat: function (e, t) {
            var r,
              n = "";
            for (r = 0; r < t; r += 1) n += e;
            return n;
          },
          isNegativeZero: function (e) {
            return 0 === e && Number.NEGATIVE_INFINITY === 1 / e;
          },
          extend: function (e, t) {
            var r, n, s, i;
            if (t)
              for (r = 0, n = (i = Object.keys(t)).length; r < n; r += 1)
                e[(s = i[r])] = t[s];
            return e;
          },
        };
        function v(e, t) {
          var r = "",
            n = e.reason || "(unknown reason)";
          return e.mark
            ? (e.mark.name && (r += 'in "' + e.mark.name + '" '),
              (r += "(" + (e.mark.line + 1) + ":" + (e.mark.column + 1) + ")"),
              !t && e.mark.snippet && (r += "\n\n" + e.mark.snippet),
              n + " " + r)
            : n;
        }
        function b(e, t) {
          Error.call(this),
            (this.name = "YAMLException"),
            (this.reason = e),
            (this.mark = t),
            (this.message = v(this, !1)),
            Error.captureStackTrace
              ? Error.captureStackTrace(this, this.constructor)
              : (this.stack = new Error().stack || "");
        }
        (b.prototype = Object.create(Error.prototype)),
          (b.prototype.constructor = b),
          (b.prototype.toString = function (e) {
            return this.name + ": " + v(this, e);
          });
        var x = b;
        function w(e, t, r, n, s) {
          var i = "",
            o = "",
            a = Math.floor(s / 2) - 1;
          return (
            n - t > a && (t = n - a + (i = " ... ").length),
            r - n > a && (r = n + a - (o = " ...").length),
            {
              str: i + e.slice(t, r).replace(/\t/g, "→") + o,
              pos: n - t + i.length,
            }
          );
        }
        function E(e, t) {
          return g.repeat(" ", t - e.length) + e;
        }
        var j = function (e, t) {
            if (((t = Object.create(t || null)), !e.buffer)) return null;
            t.maxLength || (t.maxLength = 79),
              "number" != typeof t.indent && (t.indent = 1),
              "number" != typeof t.linesBefore && (t.linesBefore = 3),
              "number" != typeof t.linesAfter && (t.linesAfter = 2);
            for (
              var r, n = /\r?\n|\r|\0/g, s = [0], i = [], o = -1;
              (r = n.exec(e.buffer));

            )
              i.push(r.index),
                s.push(r.index + r[0].length),
                e.position <= r.index && o < 0 && (o = s.length - 2);
            o < 0 && (o = s.length - 1);
            var a,
              c,
              l = "",
              u = Math.min(e.line + t.linesAfter, i.length).toString().length,
              p = t.maxLength - (t.indent + u + 3);
            for (a = 1; a <= t.linesBefore && !(o - a < 0); a++)
              (c = w(
                e.buffer,
                s[o - a],
                i[o - a],
                e.position - (s[o] - s[o - a]),
                p
              )),
                (l =
                  g.repeat(" ", t.indent) +
                  E((e.line - a + 1).toString(), u) +
                  " | " +
                  c.str +
                  "\n" +
                  l);
            for (
              c = w(e.buffer, s[o], i[o], e.position, p),
                l +=
                  g.repeat(" ", t.indent) +
                  E((e.line + 1).toString(), u) +
                  " | " +
                  c.str +
                  "\n",
                l += g.repeat("-", t.indent + u + 3 + c.pos) + "^\n",
                a = 1;
              a <= t.linesAfter && !(o + a >= i.length);
              a++
            )
              (c = w(
                e.buffer,
                s[o + a],
                i[o + a],
                e.position - (s[o] - s[o + a]),
                p
              )),
                (l +=
                  g.repeat(" ", t.indent) +
                  E((e.line + a + 1).toString(), u) +
                  " | " +
                  c.str +
                  "\n");
            return l.replace(/\n$/, "");
          },
          O = [
            "kind",
            "multi",
            "resolve",
            "construct",
            "instanceOf",
            "predicate",
            "represent",
            "representName",
            "defaultStyle",
            "styleAliases",
          ],
          S = ["scalar", "sequence", "mapping"];
        var P = function (e, t) {
          if (
            ((t = t || {}),
            Object.keys(t).forEach(function (t) {
              if (-1 === O.indexOf(t))
                throw new x(
                  'Unknown option "' +
                    t +
                    '" is met in definition of "' +
                    e +
                    '" YAML type.'
                );
            }),
            (this.options = t),
            (this.tag = e),
            (this.kind = t.kind || null),
            (this.resolve =
              t.resolve ||
              function () {
                return !0;
              }),
            (this.construct =
              t.construct ||
              function (e) {
                return e;
              }),
            (this.instanceOf = t.instanceOf || null),
            (this.predicate = t.predicate || null),
            (this.represent = t.represent || null),
            (this.representName = t.representName || null),
            (this.defaultStyle = t.defaultStyle || null),
            (this.multi = t.multi || !1),
            (this.styleAliases = (function (e) {
              var t = {};
              return (
                null !== e &&
                  Object.keys(e).forEach(function (r) {
                    e[r].forEach(function (e) {
                      t[String(e)] = r;
                    });
                  }),
                t
              );
            })(t.styleAliases || null)),
            -1 === S.indexOf(this.kind))
          )
            throw new x(
              'Unknown kind "' +
                this.kind +
                '" is specified for "' +
                e +
                '" YAML type.'
            );
        };
        function A(e, t) {
          var r = [];
          return (
            e[t].forEach(function (e) {
              var t = r.length;
              r.forEach(function (r, n) {
                r.tag === e.tag &&
                  r.kind === e.kind &&
                  r.multi === e.multi &&
                  (t = n);
              }),
                (r[t] = e);
            }),
            r
          );
        }
        function $(e) {
          return this.extend(e);
        }
        $.prototype.extend = function (e) {
          var t = [],
            r = [];
          if (e instanceof P) r.push(e);
          else if (Array.isArray(e)) r = r.concat(e);
          else {
            if (
              !e ||
              (!Array.isArray(e.implicit) && !Array.isArray(e.explicit))
            )
              throw new x(
                "Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })"
              );
            e.implicit && (t = t.concat(e.implicit)),
              e.explicit && (r = r.concat(e.explicit));
          }
          t.forEach(function (e) {
            if (!(e instanceof P))
              throw new x(
                "Specified list of YAML types (or a single Type object) contains a non-Type object."
              );
            if (e.loadKind && "scalar" !== e.loadKind)
              throw new x(
                "There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported."
              );
            if (e.multi)
              throw new x(
                "There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit."
              );
          }),
            r.forEach(function (e) {
              if (!(e instanceof P))
                throw new x(
                  "Specified list of YAML types (or a single Type object) contains a non-Type object."
                );
            });
          var n = Object.create($.prototype);
          return (
            (n.implicit = (this.implicit || []).concat(t)),
            (n.explicit = (this.explicit || []).concat(r)),
            (n.compiledImplicit = A(n, "implicit")),
            (n.compiledExplicit = A(n, "explicit")),
            (n.compiledTypeMap = (function () {
              var e,
                t,
                r = {
                  scalar: {},
                  sequence: {},
                  mapping: {},
                  fallback: {},
                  multi: {
                    scalar: [],
                    sequence: [],
                    mapping: [],
                    fallback: [],
                  },
                };
              function n(e) {
                e.multi
                  ? (r.multi[e.kind].push(e), r.multi.fallback.push(e))
                  : (r[e.kind][e.tag] = r.fallback[e.tag] = e);
              }
              for (e = 0, t = arguments.length; e < t; e += 1)
                arguments[e].forEach(n);
              return r;
            })(n.compiledImplicit, n.compiledExplicit)),
            n
          );
        };
        var _ = $,
          k = new P("tag:yaml.org,2002:str", {
            kind: "scalar",
            construct: function (e) {
              return null !== e ? e : "";
            },
          }),
          I = new P("tag:yaml.org,2002:seq", {
            kind: "sequence",
            construct: function (e) {
              return null !== e ? e : [];
            },
          }),
          T = new P("tag:yaml.org,2002:map", {
            kind: "mapping",
            construct: function (e) {
              return null !== e ? e : {};
            },
          }),
          C = new _({ explicit: [k, I, T] });
        var M = new P("tag:yaml.org,2002:null", {
          kind: "scalar",
          resolve: function (e) {
            if (null === e) return !0;
            var t = e.length;
            return (
              (1 === t && "~" === e) ||
              (4 === t && ("null" === e || "Null" === e || "NULL" === e))
            );
          },
          construct: function () {
            return null;
          },
          predicate: function (e) {
            return null === e;
          },
          represent: {
            canonical: function () {
              return "~";
            },
            lowercase: function () {
              return "null";
            },
            uppercase: function () {
              return "NULL";
            },
            camelcase: function () {
              return "Null";
            },
            empty: function () {
              return "";
            },
          },
          defaultStyle: "lowercase",
        });
        var R = new P("tag:yaml.org,2002:bool", {
          kind: "scalar",
          resolve: function (e) {
            if (null === e) return !1;
            var t = e.length;
            return (
              (4 === t && ("true" === e || "True" === e || "TRUE" === e)) ||
              (5 === t && ("false" === e || "False" === e || "FALSE" === e))
            );
          },
          construct: function (e) {
            return "true" === e || "True" === e || "TRUE" === e;
          },
          predicate: function (e) {
            return "[object Boolean]" === Object.prototype.toString.call(e);
          },
          represent: {
            lowercase: function (e) {
              return e ? "true" : "false";
            },
            uppercase: function (e) {
              return e ? "TRUE" : "FALSE";
            },
            camelcase: function (e) {
              return e ? "True" : "False";
            },
          },
          defaultStyle: "lowercase",
        });
        function F(e) {
          return 48 <= e && e <= 55;
        }
        function D(e) {
          return 48 <= e && e <= 57;
        }
        var N = new P("tag:yaml.org,2002:int", {
            kind: "scalar",
            resolve: function (e) {
              if (null === e) return !1;
              var t,
                r,
                n = e.length,
                s = 0,
                i = !1;
              if (!n) return !1;
              if (
                (("-" !== (t = e[s]) && "+" !== t) || (t = e[++s]), "0" === t)
              ) {
                if (s + 1 === n) return !0;
                if ("b" === (t = e[++s])) {
                  for (s++; s < n; s++)
                    if ("_" !== (t = e[s])) {
                      if ("0" !== t && "1" !== t) return !1;
                      i = !0;
                    }
                  return i && "_" !== t;
                }
                if ("x" === t) {
                  for (s++; s < n; s++)
                    if ("_" !== (t = e[s])) {
                      if (
                        !(
                          (48 <= (r = e.charCodeAt(s)) && r <= 57) ||
                          (65 <= r && r <= 70) ||
                          (97 <= r && r <= 102)
                        )
                      )
                        return !1;
                      i = !0;
                    }
                  return i && "_" !== t;
                }
                if ("o" === t) {
                  for (s++; s < n; s++)
                    if ("_" !== (t = e[s])) {
                      if (!F(e.charCodeAt(s))) return !1;
                      i = !0;
                    }
                  return i && "_" !== t;
                }
              }
              if ("_" === t) return !1;
              for (; s < n; s++)
                if ("_" !== (t = e[s])) {
                  if (!D(e.charCodeAt(s))) return !1;
                  i = !0;
                }
              return !(!i || "_" === t);
            },
            construct: function (e) {
              var t,
                r = e,
                n = 1;
              if (
                (-1 !== r.indexOf("_") && (r = r.replace(/_/g, "")),
                ("-" !== (t = r[0]) && "+" !== t) ||
                  ("-" === t && (n = -1), (t = (r = r.slice(1))[0])),
                "0" === r)
              )
                return 0;
              if ("0" === t) {
                if ("b" === r[1]) return n * parseInt(r.slice(2), 2);
                if ("x" === r[1]) return n * parseInt(r.slice(2), 16);
                if ("o" === r[1]) return n * parseInt(r.slice(2), 8);
              }
              return n * parseInt(r, 10);
            },
            predicate: function (e) {
              return (
                "[object Number]" === Object.prototype.toString.call(e) &&
                e % 1 == 0 &&
                !g.isNegativeZero(e)
              );
            },
            represent: {
              binary: function (e) {
                return e >= 0
                  ? "0b" + e.toString(2)
                  : "-0b" + e.toString(2).slice(1);
              },
              octal: function (e) {
                return e >= 0
                  ? "0o" + e.toString(8)
                  : "-0o" + e.toString(8).slice(1);
              },
              decimal: function (e) {
                return e.toString(10);
              },
              hexadecimal: function (e) {
                return e >= 0
                  ? "0x" + e.toString(16).toUpperCase()
                  : "-0x" + e.toString(16).toUpperCase().slice(1);
              },
            },
            defaultStyle: "decimal",
            styleAliases: {
              binary: [2, "bin"],
              octal: [8, "oct"],
              decimal: [10, "dec"],
              hexadecimal: [16, "hex"],
            },
          }),
          q = new RegExp(
            "^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$"
          );
        var L = /^[-+]?[0-9]+e/;
        var B = new P("tag:yaml.org,2002:float", {
            kind: "scalar",
            resolve: function (e) {
              return null !== e && !(!q.test(e) || "_" === e[e.length - 1]);
            },
            construct: function (e) {
              var t, r;
              return (
                (r =
                  "-" === (t = e.replace(/_/g, "").toLowerCase())[0] ? -1 : 1),
                "+-".indexOf(t[0]) >= 0 && (t = t.slice(1)),
                ".inf" === t
                  ? 1 === r
                    ? Number.POSITIVE_INFINITY
                    : Number.NEGATIVE_INFINITY
                  : ".nan" === t
                  ? NaN
                  : r * parseFloat(t, 10)
              );
            },
            predicate: function (e) {
              return (
                "[object Number]" === Object.prototype.toString.call(e) &&
                (e % 1 != 0 || g.isNegativeZero(e))
              );
            },
            represent: function (e, t) {
              var r;
              if (isNaN(e))
                switch (t) {
                  case "lowercase":
                    return ".nan";
                  case "uppercase":
                    return ".NAN";
                  case "camelcase":
                    return ".NaN";
                }
              else if (Number.POSITIVE_INFINITY === e)
                switch (t) {
                  case "lowercase":
                    return ".inf";
                  case "uppercase":
                    return ".INF";
                  case "camelcase":
                    return ".Inf";
                }
              else if (Number.NEGATIVE_INFINITY === e)
                switch (t) {
                  case "lowercase":
                    return "-.inf";
                  case "uppercase":
                    return "-.INF";
                  case "camelcase":
                    return "-.Inf";
                }
              else if (g.isNegativeZero(e)) return "-0.0";
              return (r = e.toString(10)), L.test(r) ? r.replace("e", ".e") : r;
            },
            defaultStyle: "lowercase",
          }),
          U = C.extend({ implicit: [M, R, N, B] }),
          V = U,
          z = new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),
          H = new RegExp(
            "^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$"
          );
        var J = new P("tag:yaml.org,2002:timestamp", {
          kind: "scalar",
          resolve: function (e) {
            return null !== e && (null !== z.exec(e) || null !== H.exec(e));
          },
          construct: function (e) {
            var t,
              r,
              n,
              s,
              i,
              o,
              a,
              c,
              l = 0,
              u = null;
            if ((null === (t = z.exec(e)) && (t = H.exec(e)), null === t))
              throw new Error("Date resolve error");
            if (((r = +t[1]), (n = +t[2] - 1), (s = +t[3]), !t[4]))
              return new Date(Date.UTC(r, n, s));
            if (((i = +t[4]), (o = +t[5]), (a = +t[6]), t[7])) {
              for (l = t[7].slice(0, 3); l.length < 3; ) l += "0";
              l = +l;
            }
            return (
              t[9] &&
                ((u = 6e4 * (60 * +t[10] + +(t[11] || 0))),
                "-" === t[9] && (u = -u)),
              (c = new Date(Date.UTC(r, n, s, i, o, a, l))),
              u && c.setTime(c.getTime() - u),
              c
            );
          },
          instanceOf: Date,
          represent: function (e) {
            return e.toISOString();
          },
        });
        var G = new P("tag:yaml.org,2002:merge", {
            kind: "scalar",
            resolve: function (e) {
              return "<<" === e || null === e;
            },
          }),
          W =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";
        var K = new P("tag:yaml.org,2002:binary", {
            kind: "scalar",
            resolve: function (e) {
              if (null === e) return !1;
              var t,
                r,
                n = 0,
                s = e.length,
                i = W;
              for (r = 0; r < s; r++)
                if (!((t = i.indexOf(e.charAt(r))) > 64)) {
                  if (t < 0) return !1;
                  n += 6;
                }
              return n % 8 == 0;
            },
            construct: function (e) {
              var t,
                r,
                n = e.replace(/[\r\n=]/g, ""),
                s = n.length,
                i = W,
                o = 0,
                a = [];
              for (t = 0; t < s; t++)
                t % 4 == 0 &&
                  t &&
                  (a.push((o >> 16) & 255),
                  a.push((o >> 8) & 255),
                  a.push(255 & o)),
                  (o = (o << 6) | i.indexOf(n.charAt(t)));
              return (
                0 === (r = (s % 4) * 6)
                  ? (a.push((o >> 16) & 255),
                    a.push((o >> 8) & 255),
                    a.push(255 & o))
                  : 18 === r
                  ? (a.push((o >> 10) & 255), a.push((o >> 2) & 255))
                  : 12 === r && a.push((o >> 4) & 255),
                new Uint8Array(a)
              );
            },
            predicate: function (e) {
              return (
                "[object Uint8Array]" === Object.prototype.toString.call(e)
              );
            },
            represent: function (e) {
              var t,
                r,
                n = "",
                s = 0,
                i = e.length,
                o = W;
              for (t = 0; t < i; t++)
                t % 3 == 0 &&
                  t &&
                  ((n += o[(s >> 18) & 63]),
                  (n += o[(s >> 12) & 63]),
                  (n += o[(s >> 6) & 63]),
                  (n += o[63 & s])),
                  (s = (s << 8) + e[t]);
              return (
                0 === (r = i % 3)
                  ? ((n += o[(s >> 18) & 63]),
                    (n += o[(s >> 12) & 63]),
                    (n += o[(s >> 6) & 63]),
                    (n += o[63 & s]))
                  : 2 === r
                  ? ((n += o[(s >> 10) & 63]),
                    (n += o[(s >> 4) & 63]),
                    (n += o[(s << 2) & 63]),
                    (n += o[64]))
                  : 1 === r &&
                    ((n += o[(s >> 2) & 63]),
                    (n += o[(s << 4) & 63]),
                    (n += o[64]),
                    (n += o[64])),
                n
              );
            },
          }),
          Y = Object.prototype.hasOwnProperty,
          X = Object.prototype.toString;
        var Q = new P("tag:yaml.org,2002:omap", {
            kind: "sequence",
            resolve: function (e) {
              if (null === e) return !0;
              var t,
                r,
                n,
                s,
                i,
                o = [],
                a = e;
              for (t = 0, r = a.length; t < r; t += 1) {
                if (((n = a[t]), (i = !1), "[object Object]" !== X.call(n)))
                  return !1;
                for (s in n)
                  if (Y.call(n, s)) {
                    if (i) return !1;
                    i = !0;
                  }
                if (!i) return !1;
                if (-1 !== o.indexOf(s)) return !1;
                o.push(s);
              }
              return !0;
            },
            construct: function (e) {
              return null !== e ? e : [];
            },
          }),
          Z = Object.prototype.toString;
        var ee = new P("tag:yaml.org,2002:pairs", {
            kind: "sequence",
            resolve: function (e) {
              if (null === e) return !0;
              var t,
                r,
                n,
                s,
                i,
                o = e;
              for (
                i = new Array(o.length), t = 0, r = o.length;
                t < r;
                t += 1
              ) {
                if (((n = o[t]), "[object Object]" !== Z.call(n))) return !1;
                if (1 !== (s = Object.keys(n)).length) return !1;
                i[t] = [s[0], n[s[0]]];
              }
              return !0;
            },
            construct: function (e) {
              if (null === e) return [];
              var t,
                r,
                n,
                s,
                i,
                o = e;
              for (i = new Array(o.length), t = 0, r = o.length; t < r; t += 1)
                (n = o[t]), (s = Object.keys(n)), (i[t] = [s[0], n[s[0]]]);
              return i;
            },
          }),
          te = Object.prototype.hasOwnProperty;
        var re = new P("tag:yaml.org,2002:set", {
            kind: "mapping",
            resolve: function (e) {
              if (null === e) return !0;
              var t,
                r = e;
              for (t in r) if (te.call(r, t) && null !== r[t]) return !1;
              return !0;
            },
            construct: function (e) {
              return null !== e ? e : {};
            },
          }),
          ne = V.extend({ implicit: [J, G], explicit: [K, Q, ee, re] }),
          se = Object.prototype.hasOwnProperty,
          ie = 1,
          oe = 2,
          ae = 3,
          ce = 4,
          le = 1,
          ue = 2,
          pe = 3,
          he =
            /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,
          fe = /[\x85\u2028\u2029]/,
          me = /[,\[\]\{\}]/,
          de = /^(?:!|!!|![a-z\-]+!)$/i,
          ye =
            /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;
        function ge(e) {
          return Object.prototype.toString.call(e);
        }
        function ve(e) {
          return 10 === e || 13 === e;
        }
        function be(e) {
          return 9 === e || 32 === e;
        }
        function xe(e) {
          return 9 === e || 32 === e || 10 === e || 13 === e;
        }
        function we(e) {
          return 44 === e || 91 === e || 93 === e || 123 === e || 125 === e;
        }
        function Ee(e) {
          var t;
          return 48 <= e && e <= 57
            ? e - 48
            : 97 <= (t = 32 | e) && t <= 102
            ? t - 97 + 10
            : -1;
        }
        function je(e) {
          return 48 === e
            ? "\0"
            : 97 === e
            ? ""
            : 98 === e
            ? "\b"
            : 116 === e || 9 === e
            ? "\t"
            : 110 === e
            ? "\n"
            : 118 === e
            ? "\v"
            : 102 === e
            ? "\f"
            : 114 === e
            ? "\r"
            : 101 === e
            ? ""
            : 32 === e
            ? " "
            : 34 === e
            ? '"'
            : 47 === e
            ? "/"
            : 92 === e
            ? "\\"
            : 78 === e
            ? ""
            : 95 === e
            ? " "
            : 76 === e
            ? "\u2028"
            : 80 === e
            ? "\u2029"
            : "";
        }
        function Oe(e) {
          return e <= 65535
            ? String.fromCharCode(e)
            : String.fromCharCode(
                55296 + ((e - 65536) >> 10),
                56320 + ((e - 65536) & 1023)
              );
        }
        for (
          var Se = new Array(256), Pe = new Array(256), Ae = 0;
          Ae < 256;
          Ae++
        )
          (Se[Ae] = je(Ae) ? 1 : 0), (Pe[Ae] = je(Ae));
        function $e(e, t) {
          (this.input = e),
            (this.filename = t.filename || null),
            (this.schema = t.schema || ne),
            (this.onWarning = t.onWarning || null),
            (this.legacy = t.legacy || !1),
            (this.json = t.json || !1),
            (this.listener = t.listener || null),
            (this.implicitTypes = this.schema.compiledImplicit),
            (this.typeMap = this.schema.compiledTypeMap),
            (this.length = e.length),
            (this.position = 0),
            (this.line = 0),
            (this.lineStart = 0),
            (this.lineIndent = 0),
            (this.firstTabInLine = -1),
            (this.documents = []);
        }
        function _e(e, t) {
          var r = {
            name: e.filename,
            buffer: e.input.slice(0, -1),
            position: e.position,
            line: e.line,
            column: e.position - e.lineStart,
          };
          return (r.snippet = j(r)), new x(t, r);
        }
        function ke(e, t) {
          throw _e(e, t);
        }
        function Ie(e, t) {
          e.onWarning && e.onWarning.call(null, _e(e, t));
        }
        var Te = {
          YAML: function (e, t, r) {
            var n, s, i;
            null !== e.version && ke(e, "duplication of %YAML directive"),
              1 !== r.length &&
                ke(e, "YAML directive accepts exactly one argument"),
              null === (n = /^([0-9]+)\.([0-9]+)$/.exec(r[0])) &&
                ke(e, "ill-formed argument of the YAML directive"),
              (s = parseInt(n[1], 10)),
              (i = parseInt(n[2], 10)),
              1 !== s && ke(e, "unacceptable YAML version of the document"),
              (e.version = r[0]),
              (e.checkLineBreaks = i < 2),
              1 !== i &&
                2 !== i &&
                Ie(e, "unsupported YAML version of the document");
          },
          TAG: function (e, t, r) {
            var n, s;
            2 !== r.length &&
              ke(e, "TAG directive accepts exactly two arguments"),
              (n = r[0]),
              (s = r[1]),
              de.test(n) ||
                ke(
                  e,
                  "ill-formed tag handle (first argument) of the TAG directive"
                ),
              se.call(e.tagMap, n) &&
                ke(
                  e,
                  'there is a previously declared suffix for "' +
                    n +
                    '" tag handle'
                ),
              ye.test(s) ||
                ke(
                  e,
                  "ill-formed tag prefix (second argument) of the TAG directive"
                );
            try {
              s = decodeURIComponent(s);
            } catch (t) {
              ke(e, "tag prefix is malformed: " + s);
            }
            e.tagMap[n] = s;
          },
        };
        function Ce(e, t, r, n) {
          var s, i, o, a;
          if (t < r) {
            if (((a = e.input.slice(t, r)), n))
              for (s = 0, i = a.length; s < i; s += 1)
                9 === (o = a.charCodeAt(s)) ||
                  (32 <= o && o <= 1114111) ||
                  ke(e, "expected valid JSON character");
            else
              he.test(a) &&
                ke(e, "the stream contains non-printable characters");
            e.result += a;
          }
        }
        function Me(e, t, r, n) {
          var s, i, o, a;
          for (
            g.isObject(r) ||
              ke(
                e,
                "cannot merge mappings; the provided source object is unacceptable"
              ),
              o = 0,
              a = (s = Object.keys(r)).length;
            o < a;
            o += 1
          )
            (i = s[o]), se.call(t, i) || ((t[i] = r[i]), (n[i] = !0));
        }
        function Re(e, t, r, n, s, i, o, a, c) {
          var l, u;
          if (Array.isArray(s))
            for (
              l = 0, u = (s = Array.prototype.slice.call(s)).length;
              l < u;
              l += 1
            )
              Array.isArray(s[l]) &&
                ke(e, "nested arrays are not supported inside keys"),
                "object" == typeof s &&
                  "[object Object]" === ge(s[l]) &&
                  (s[l] = "[object Object]");
          if (
            ("object" == typeof s &&
              "[object Object]" === ge(s) &&
              (s = "[object Object]"),
            (s = String(s)),
            null === t && (t = {}),
            "tag:yaml.org,2002:merge" === n)
          )
            if (Array.isArray(i))
              for (l = 0, u = i.length; l < u; l += 1) Me(e, t, i[l], r);
            else Me(e, t, i, r);
          else
            e.json ||
              se.call(r, s) ||
              !se.call(t, s) ||
              ((e.line = o || e.line),
              (e.lineStart = a || e.lineStart),
              (e.position = c || e.position),
              ke(e, "duplicated mapping key")),
              "__proto__" === s
                ? Object.defineProperty(t, s, {
                    configurable: !0,
                    enumerable: !0,
                    writable: !0,
                    value: i,
                  })
                : (t[s] = i),
              delete r[s];
          return t;
        }
        function Fe(e) {
          var t;
          10 === (t = e.input.charCodeAt(e.position))
            ? e.position++
            : 13 === t
            ? (e.position++,
              10 === e.input.charCodeAt(e.position) && e.position++)
            : ke(e, "a line break is expected"),
            (e.line += 1),
            (e.lineStart = e.position),
            (e.firstTabInLine = -1);
        }
        function De(e, t, r) {
          for (var n = 0, s = e.input.charCodeAt(e.position); 0 !== s; ) {
            for (; be(s); )
              9 === s &&
                -1 === e.firstTabInLine &&
                (e.firstTabInLine = e.position),
                (s = e.input.charCodeAt(++e.position));
            if (t && 35 === s)
              do {
                s = e.input.charCodeAt(++e.position);
              } while (10 !== s && 13 !== s && 0 !== s);
            if (!ve(s)) break;
            for (
              Fe(e), s = e.input.charCodeAt(e.position), n++, e.lineIndent = 0;
              32 === s;

            )
              e.lineIndent++, (s = e.input.charCodeAt(++e.position));
          }
          return (
            -1 !== r &&
              0 !== n &&
              e.lineIndent < r &&
              Ie(e, "deficient indentation"),
            n
          );
        }
        function Ne(e) {
          var t,
            r = e.position;
          return !(
            (45 !== (t = e.input.charCodeAt(r)) && 46 !== t) ||
            t !== e.input.charCodeAt(r + 1) ||
            t !== e.input.charCodeAt(r + 2) ||
            ((r += 3), 0 !== (t = e.input.charCodeAt(r)) && !xe(t))
          );
        }
        function qe(e, t) {
          1 === t
            ? (e.result += " ")
            : t > 1 && (e.result += g.repeat("\n", t - 1));
        }
        function Le(e, t) {
          var r,
            n,
            s = e.tag,
            i = e.anchor,
            o = [],
            a = !1;
          if (-1 !== e.firstTabInLine) return !1;
          for (
            null !== e.anchor && (e.anchorMap[e.anchor] = o),
              n = e.input.charCodeAt(e.position);
            0 !== n &&
            (-1 !== e.firstTabInLine &&
              ((e.position = e.firstTabInLine),
              ke(e, "tab characters must not be used in indentation")),
            45 === n) &&
            xe(e.input.charCodeAt(e.position + 1));

          )
            if (((a = !0), e.position++, De(e, !0, -1) && e.lineIndent <= t))
              o.push(null), (n = e.input.charCodeAt(e.position));
            else if (
              ((r = e.line),
              Ve(e, t, ae, !1, !0),
              o.push(e.result),
              De(e, !0, -1),
              (n = e.input.charCodeAt(e.position)),
              (e.line === r || e.lineIndent > t) && 0 !== n)
            )
              ke(e, "bad indentation of a sequence entry");
            else if (e.lineIndent < t) break;
          return (
            !!a &&
            ((e.tag = s),
            (e.anchor = i),
            (e.kind = "sequence"),
            (e.result = o),
            !0)
          );
        }
        function Be(e) {
          var t,
            r,
            n,
            s,
            i = !1,
            o = !1;
          if (33 !== (s = e.input.charCodeAt(e.position))) return !1;
          if (
            (null !== e.tag && ke(e, "duplication of a tag property"),
            60 === (s = e.input.charCodeAt(++e.position))
              ? ((i = !0), (s = e.input.charCodeAt(++e.position)))
              : 33 === s
              ? ((o = !0), (r = "!!"), (s = e.input.charCodeAt(++e.position)))
              : (r = "!"),
            (t = e.position),
            i)
          ) {
            do {
              s = e.input.charCodeAt(++e.position);
            } while (0 !== s && 62 !== s);
            e.position < e.length
              ? ((n = e.input.slice(t, e.position)),
                (s = e.input.charCodeAt(++e.position)))
              : ke(e, "unexpected end of the stream within a verbatim tag");
          } else {
            for (; 0 !== s && !xe(s); )
              33 === s &&
                (o
                  ? ke(e, "tag suffix cannot contain exclamation marks")
                  : ((r = e.input.slice(t - 1, e.position + 1)),
                    de.test(r) ||
                      ke(e, "named tag handle cannot contain such characters"),
                    (o = !0),
                    (t = e.position + 1))),
                (s = e.input.charCodeAt(++e.position));
            (n = e.input.slice(t, e.position)),
              me.test(n) &&
                ke(e, "tag suffix cannot contain flow indicator characters");
          }
          n &&
            !ye.test(n) &&
            ke(e, "tag name cannot contain such characters: " + n);
          try {
            n = decodeURIComponent(n);
          } catch (t) {
            ke(e, "tag name is malformed: " + n);
          }
          return (
            i
              ? (e.tag = n)
              : se.call(e.tagMap, r)
              ? (e.tag = e.tagMap[r] + n)
              : "!" === r
              ? (e.tag = "!" + n)
              : "!!" === r
              ? (e.tag = "tag:yaml.org,2002:" + n)
              : ke(e, 'undeclared tag handle "' + r + '"'),
            !0
          );
        }
        function Ue(e) {
          var t, r;
          if (38 !== (r = e.input.charCodeAt(e.position))) return !1;
          for (
            null !== e.anchor && ke(e, "duplication of an anchor property"),
              r = e.input.charCodeAt(++e.position),
              t = e.position;
            0 !== r && !xe(r) && !we(r);

          )
            r = e.input.charCodeAt(++e.position);
          return (
            e.position === t &&
              ke(
                e,
                "name of an anchor node must contain at least one character"
              ),
            (e.anchor = e.input.slice(t, e.position)),
            !0
          );
        }
        function Ve(e, t, r, n, s) {
          var i,
            o,
            a,
            c,
            l,
            u,
            p,
            h,
            f,
            m = 1,
            d = !1,
            y = !1;
          if (
            (null !== e.listener && e.listener("open", e),
            (e.tag = null),
            (e.anchor = null),
            (e.kind = null),
            (e.result = null),
            (i = o = a = ce === r || ae === r),
            n &&
              De(e, !0, -1) &&
              ((d = !0),
              e.lineIndent > t
                ? (m = 1)
                : e.lineIndent === t
                ? (m = 0)
                : e.lineIndent < t && (m = -1)),
            1 === m)
          )
            for (; Be(e) || Ue(e); )
              De(e, !0, -1)
                ? ((d = !0),
                  (a = i),
                  e.lineIndent > t
                    ? (m = 1)
                    : e.lineIndent === t
                    ? (m = 0)
                    : e.lineIndent < t && (m = -1))
                : (a = !1);
          if (
            (a && (a = d || s),
            (1 !== m && ce !== r) ||
              ((h = ie === r || oe === r ? t : t + 1),
              (f = e.position - e.lineStart),
              1 === m
                ? (a &&
                    (Le(e, f) ||
                      (function (e, t, r) {
                        var n,
                          s,
                          i,
                          o,
                          a,
                          c,
                          l,
                          u = e.tag,
                          p = e.anchor,
                          h = {},
                          f = Object.create(null),
                          m = null,
                          d = null,
                          y = null,
                          g = !1,
                          v = !1;
                        if (-1 !== e.firstTabInLine) return !1;
                        for (
                          null !== e.anchor && (e.anchorMap[e.anchor] = h),
                            l = e.input.charCodeAt(e.position);
                          0 !== l;

                        ) {
                          if (
                            (g ||
                              -1 === e.firstTabInLine ||
                              ((e.position = e.firstTabInLine),
                              ke(
                                e,
                                "tab characters must not be used in indentation"
                              )),
                            (n = e.input.charCodeAt(e.position + 1)),
                            (i = e.line),
                            (63 !== l && 58 !== l) || !xe(n))
                          ) {
                            if (
                              ((o = e.line),
                              (a = e.lineStart),
                              (c = e.position),
                              !Ve(e, r, oe, !1, !0))
                            )
                              break;
                            if (e.line === i) {
                              for (l = e.input.charCodeAt(e.position); be(l); )
                                l = e.input.charCodeAt(++e.position);
                              if (58 === l)
                                xe((l = e.input.charCodeAt(++e.position))) ||
                                  ke(
                                    e,
                                    "a whitespace character is expected after the key-value separator within a block mapping"
                                  ),
                                  g &&
                                    (Re(e, h, f, m, d, null, o, a, c),
                                    (m = d = y = null)),
                                  (v = !0),
                                  (g = !1),
                                  (s = !1),
                                  (m = e.tag),
                                  (d = e.result);
                              else {
                                if (!v) return (e.tag = u), (e.anchor = p), !0;
                                ke(
                                  e,
                                  "can not read an implicit mapping pair; a colon is missed"
                                );
                              }
                            } else {
                              if (!v) return (e.tag = u), (e.anchor = p), !0;
                              ke(
                                e,
                                "can not read a block mapping entry; a multiline key may not be an implicit key"
                              );
                            }
                          } else
                            63 === l
                              ? (g &&
                                  (Re(e, h, f, m, d, null, o, a, c),
                                  (m = d = y = null)),
                                (v = !0),
                                (g = !0),
                                (s = !0))
                              : g
                              ? ((g = !1), (s = !0))
                              : ke(
                                  e,
                                  "incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"
                                ),
                              (e.position += 1),
                              (l = n);
                          if (
                            ((e.line === i || e.lineIndent > t) &&
                              (g &&
                                ((o = e.line),
                                (a = e.lineStart),
                                (c = e.position)),
                              Ve(e, t, ce, !0, s) &&
                                (g ? (d = e.result) : (y = e.result)),
                              g ||
                                (Re(e, h, f, m, d, y, o, a, c),
                                (m = d = y = null)),
                              De(e, !0, -1),
                              (l = e.input.charCodeAt(e.position))),
                            (e.line === i || e.lineIndent > t) && 0 !== l)
                          )
                            ke(e, "bad indentation of a mapping entry");
                          else if (e.lineIndent < t) break;
                        }
                        return (
                          g && Re(e, h, f, m, d, null, o, a, c),
                          v &&
                            ((e.tag = u),
                            (e.anchor = p),
                            (e.kind = "mapping"),
                            (e.result = h)),
                          v
                        );
                      })(e, f, h))) ||
                  (function (e, t) {
                    var r,
                      n,
                      s,
                      i,
                      o,
                      a,
                      c,
                      l,
                      u,
                      p,
                      h,
                      f,
                      m = !0,
                      d = e.tag,
                      y = e.anchor,
                      g = Object.create(null);
                    if (91 === (f = e.input.charCodeAt(e.position)))
                      (o = 93), (l = !1), (i = []);
                    else {
                      if (123 !== f) return !1;
                      (o = 125), (l = !0), (i = {});
                    }
                    for (
                      null !== e.anchor && (e.anchorMap[e.anchor] = i),
                        f = e.input.charCodeAt(++e.position);
                      0 !== f;

                    ) {
                      if (
                        (De(e, !0, t),
                        (f = e.input.charCodeAt(e.position)) === o)
                      )
                        return (
                          e.position++,
                          (e.tag = d),
                          (e.anchor = y),
                          (e.kind = l ? "mapping" : "sequence"),
                          (e.result = i),
                          !0
                        );
                      m
                        ? 44 === f &&
                          ke(e, "expected the node content, but found ','")
                        : ke(e, "missed comma between flow collection entries"),
                        (h = null),
                        (a = c = !1),
                        63 === f &&
                          xe(e.input.charCodeAt(e.position + 1)) &&
                          ((a = c = !0), e.position++, De(e, !0, t)),
                        (r = e.line),
                        (n = e.lineStart),
                        (s = e.position),
                        Ve(e, t, ie, !1, !0),
                        (p = e.tag),
                        (u = e.result),
                        De(e, !0, t),
                        (f = e.input.charCodeAt(e.position)),
                        (!c && e.line !== r) ||
                          58 !== f ||
                          ((a = !0),
                          (f = e.input.charCodeAt(++e.position)),
                          De(e, !0, t),
                          Ve(e, t, ie, !1, !0),
                          (h = e.result)),
                        l
                          ? Re(e, i, g, p, u, h, r, n, s)
                          : a
                          ? i.push(Re(e, null, g, p, u, h, r, n, s))
                          : i.push(u),
                        De(e, !0, t),
                        44 === (f = e.input.charCodeAt(e.position))
                          ? ((m = !0), (f = e.input.charCodeAt(++e.position)))
                          : (m = !1);
                    }
                    ke(
                      e,
                      "unexpected end of the stream within a flow collection"
                    );
                  })(e, h)
                  ? (y = !0)
                  : ((o &&
                      (function (e, t) {
                        var r,
                          n,
                          s,
                          i,
                          o,
                          a = le,
                          c = !1,
                          l = !1,
                          u = t,
                          p = 0,
                          h = !1;
                        if (124 === (i = e.input.charCodeAt(e.position)))
                          n = !1;
                        else {
                          if (62 !== i) return !1;
                          n = !0;
                        }
                        for (e.kind = "scalar", e.result = ""; 0 !== i; )
                          if (
                            43 === (i = e.input.charCodeAt(++e.position)) ||
                            45 === i
                          )
                            le === a
                              ? (a = 43 === i ? pe : ue)
                              : ke(e, "repeat of a chomping mode identifier");
                          else {
                            if (
                              !(
                                (s = 48 <= (o = i) && o <= 57 ? o - 48 : -1) >=
                                0
                              )
                            )
                              break;
                            0 === s
                              ? ke(
                                  e,
                                  "bad explicit indentation width of a block scalar; it cannot be less than one"
                                )
                              : l
                              ? ke(
                                  e,
                                  "repeat of an indentation width identifier"
                                )
                              : ((u = t + s - 1), (l = !0));
                          }
                        if (be(i)) {
                          do {
                            i = e.input.charCodeAt(++e.position);
                          } while (be(i));
                          if (35 === i)
                            do {
                              i = e.input.charCodeAt(++e.position);
                            } while (!ve(i) && 0 !== i);
                        }
                        for (; 0 !== i; ) {
                          for (
                            Fe(e),
                              e.lineIndent = 0,
                              i = e.input.charCodeAt(e.position);
                            (!l || e.lineIndent < u) && 32 === i;

                          )
                            e.lineIndent++,
                              (i = e.input.charCodeAt(++e.position));
                          if (
                            (!l && e.lineIndent > u && (u = e.lineIndent),
                            ve(i))
                          )
                            p++;
                          else {
                            if (e.lineIndent < u) {
                              a === pe
                                ? (e.result += g.repeat("\n", c ? 1 + p : p))
                                : a === le && c && (e.result += "\n");
                              break;
                            }
                            for (
                              n
                                ? be(i)
                                  ? ((h = !0),
                                    (e.result += g.repeat("\n", c ? 1 + p : p)))
                                  : h
                                  ? ((h = !1),
                                    (e.result += g.repeat("\n", p + 1)))
                                  : 0 === p
                                  ? c && (e.result += " ")
                                  : (e.result += g.repeat("\n", p))
                                : (e.result += g.repeat("\n", c ? 1 + p : p)),
                                c = !0,
                                l = !0,
                                p = 0,
                                r = e.position;
                              !ve(i) && 0 !== i;

                            )
                              i = e.input.charCodeAt(++e.position);
                            Ce(e, r, e.position, !1);
                          }
                        }
                        return !0;
                      })(e, h)) ||
                    (function (e, t) {
                      var r, n, s;
                      if (39 !== (r = e.input.charCodeAt(e.position)))
                        return !1;
                      for (
                        e.kind = "scalar",
                          e.result = "",
                          e.position++,
                          n = s = e.position;
                        0 !== (r = e.input.charCodeAt(e.position));

                      )
                        if (39 === r) {
                          if (
                            (Ce(e, n, e.position, !0),
                            39 !== (r = e.input.charCodeAt(++e.position)))
                          )
                            return !0;
                          (n = e.position), e.position++, (s = e.position);
                        } else
                          ve(r)
                            ? (Ce(e, n, s, !0),
                              qe(e, De(e, !1, t)),
                              (n = s = e.position))
                            : e.position === e.lineStart && Ne(e)
                            ? ke(
                                e,
                                "unexpected end of the document within a single quoted scalar"
                              )
                            : (e.position++, (s = e.position));
                      ke(
                        e,
                        "unexpected end of the stream within a single quoted scalar"
                      );
                    })(e, h) ||
                    (function (e, t) {
                      var r, n, s, i, o, a, c;
                      if (34 !== (a = e.input.charCodeAt(e.position)))
                        return !1;
                      for (
                        e.kind = "scalar",
                          e.result = "",
                          e.position++,
                          r = n = e.position;
                        0 !== (a = e.input.charCodeAt(e.position));

                      ) {
                        if (34 === a)
                          return Ce(e, r, e.position, !0), e.position++, !0;
                        if (92 === a) {
                          if (
                            (Ce(e, r, e.position, !0),
                            ve((a = e.input.charCodeAt(++e.position))))
                          )
                            De(e, !1, t);
                          else if (a < 256 && Se[a])
                            (e.result += Pe[a]), e.position++;
                          else if (
                            (o =
                              120 === (c = a)
                                ? 2
                                : 117 === c
                                ? 4
                                : 85 === c
                                ? 8
                                : 0) > 0
                          ) {
                            for (s = o, i = 0; s > 0; s--)
                              (o = Ee(
                                (a = e.input.charCodeAt(++e.position))
                              )) >= 0
                                ? (i = (i << 4) + o)
                                : ke(e, "expected hexadecimal character");
                            (e.result += Oe(i)), e.position++;
                          } else ke(e, "unknown escape sequence");
                          r = n = e.position;
                        } else
                          ve(a)
                            ? (Ce(e, r, n, !0),
                              qe(e, De(e, !1, t)),
                              (r = n = e.position))
                            : e.position === e.lineStart && Ne(e)
                            ? ke(
                                e,
                                "unexpected end of the document within a double quoted scalar"
                              )
                            : (e.position++, (n = e.position));
                      }
                      ke(
                        e,
                        "unexpected end of the stream within a double quoted scalar"
                      );
                    })(e, h)
                      ? (y = !0)
                      : !(function (e) {
                          var t, r, n;
                          if (42 !== (n = e.input.charCodeAt(e.position)))
                            return !1;
                          for (
                            n = e.input.charCodeAt(++e.position),
                              t = e.position;
                            0 !== n && !xe(n) && !we(n);

                          )
                            n = e.input.charCodeAt(++e.position);
                          return (
                            e.position === t &&
                              ke(
                                e,
                                "name of an alias node must contain at least one character"
                              ),
                            (r = e.input.slice(t, e.position)),
                            se.call(e.anchorMap, r) ||
                              ke(e, 'unidentified alias "' + r + '"'),
                            (e.result = e.anchorMap[r]),
                            De(e, !0, -1),
                            !0
                          );
                        })(e)
                      ? (function (e, t, r) {
                          var n,
                            s,
                            i,
                            o,
                            a,
                            c,
                            l,
                            u,
                            p = e.kind,
                            h = e.result;
                          if (
                            xe((u = e.input.charCodeAt(e.position))) ||
                            we(u) ||
                            35 === u ||
                            38 === u ||
                            42 === u ||
                            33 === u ||
                            124 === u ||
                            62 === u ||
                            39 === u ||
                            34 === u ||
                            37 === u ||
                            64 === u ||
                            96 === u
                          )
                            return !1;
                          if (
                            (63 === u || 45 === u) &&
                            (xe((n = e.input.charCodeAt(e.position + 1))) ||
                              (r && we(n)))
                          )
                            return !1;
                          for (
                            e.kind = "scalar",
                              e.result = "",
                              s = i = e.position,
                              o = !1;
                            0 !== u;

                          ) {
                            if (58 === u) {
                              if (
                                xe((n = e.input.charCodeAt(e.position + 1))) ||
                                (r && we(n))
                              )
                                break;
                            } else if (35 === u) {
                              if (xe(e.input.charCodeAt(e.position - 1))) break;
                            } else {
                              if (
                                (e.position === e.lineStart && Ne(e)) ||
                                (r && we(u))
                              )
                                break;
                              if (ve(u)) {
                                if (
                                  ((a = e.line),
                                  (c = e.lineStart),
                                  (l = e.lineIndent),
                                  De(e, !1, -1),
                                  e.lineIndent >= t)
                                ) {
                                  (o = !0),
                                    (u = e.input.charCodeAt(e.position));
                                  continue;
                                }
                                (e.position = i),
                                  (e.line = a),
                                  (e.lineStart = c),
                                  (e.lineIndent = l);
                                break;
                              }
                            }
                            o &&
                              (Ce(e, s, i, !1),
                              qe(e, e.line - a),
                              (s = i = e.position),
                              (o = !1)),
                              be(u) || (i = e.position + 1),
                              (u = e.input.charCodeAt(++e.position));
                          }
                          return (
                            Ce(e, s, i, !1),
                            !!e.result || ((e.kind = p), (e.result = h), !1)
                          );
                        })(e, h, ie === r) &&
                        ((y = !0), null === e.tag && (e.tag = "?"))
                      : ((y = !0),
                        (null === e.tag && null === e.anchor) ||
                          ke(e, "alias node should not have any properties")),
                    null !== e.anchor && (e.anchorMap[e.anchor] = e.result))
                : 0 === m && (y = a && Le(e, f))),
            null === e.tag)
          )
            null !== e.anchor && (e.anchorMap[e.anchor] = e.result);
          else if ("?" === e.tag) {
            for (
              null !== e.result &&
                "scalar" !== e.kind &&
                ke(
                  e,
                  'unacceptable node kind for !<?> tag; it should be "scalar", not "' +
                    e.kind +
                    '"'
                ),
                c = 0,
                l = e.implicitTypes.length;
              c < l;
              c += 1
            )
              if ((p = e.implicitTypes[c]).resolve(e.result)) {
                (e.result = p.construct(e.result)),
                  (e.tag = p.tag),
                  null !== e.anchor && (e.anchorMap[e.anchor] = e.result);
                break;
              }
          } else if ("!" !== e.tag) {
            if (se.call(e.typeMap[e.kind || "fallback"], e.tag))
              p = e.typeMap[e.kind || "fallback"][e.tag];
            else
              for (
                p = null,
                  c = 0,
                  l = (u = e.typeMap.multi[e.kind || "fallback"]).length;
                c < l;
                c += 1
              )
                if (e.tag.slice(0, u[c].tag.length) === u[c].tag) {
                  p = u[c];
                  break;
                }
            p || ke(e, "unknown tag !<" + e.tag + ">"),
              null !== e.result &&
                p.kind !== e.kind &&
                ke(
                  e,
                  "unacceptable node kind for !<" +
                    e.tag +
                    '> tag; it should be "' +
                    p.kind +
                    '", not "' +
                    e.kind +
                    '"'
                ),
              p.resolve(e.result, e.tag)
                ? ((e.result = p.construct(e.result, e.tag)),
                  null !== e.anchor && (e.anchorMap[e.anchor] = e.result))
                : ke(
                    e,
                    "cannot resolve a node with !<" + e.tag + "> explicit tag"
                  );
          }
          return (
            null !== e.listener && e.listener("close", e),
            null !== e.tag || null !== e.anchor || y
          );
        }
        function ze(e) {
          var t,
            r,
            n,
            s,
            i = e.position,
            o = !1;
          for (
            e.version = null,
              e.checkLineBreaks = e.legacy,
              e.tagMap = Object.create(null),
              e.anchorMap = Object.create(null);
            0 !== (s = e.input.charCodeAt(e.position)) &&
            (De(e, !0, -1),
            (s = e.input.charCodeAt(e.position)),
            !(e.lineIndent > 0 || 37 !== s));

          ) {
            for (
              o = !0, s = e.input.charCodeAt(++e.position), t = e.position;
              0 !== s && !xe(s);

            )
              s = e.input.charCodeAt(++e.position);
            for (
              n = [],
                (r = e.input.slice(t, e.position)).length < 1 &&
                  ke(
                    e,
                    "directive name must not be less than one character in length"
                  );
              0 !== s;

            ) {
              for (; be(s); ) s = e.input.charCodeAt(++e.position);
              if (35 === s) {
                do {
                  s = e.input.charCodeAt(++e.position);
                } while (0 !== s && !ve(s));
                break;
              }
              if (ve(s)) break;
              for (t = e.position; 0 !== s && !xe(s); )
                s = e.input.charCodeAt(++e.position);
              n.push(e.input.slice(t, e.position));
            }
            0 !== s && Fe(e),
              se.call(Te, r)
                ? Te[r](e, r, n)
                : Ie(e, 'unknown document directive "' + r + '"');
          }
          De(e, !0, -1),
            0 === e.lineIndent &&
            45 === e.input.charCodeAt(e.position) &&
            45 === e.input.charCodeAt(e.position + 1) &&
            45 === e.input.charCodeAt(e.position + 2)
              ? ((e.position += 3), De(e, !0, -1))
              : o && ke(e, "directives end mark is expected"),
            Ve(e, e.lineIndent - 1, ce, !1, !0),
            De(e, !0, -1),
            e.checkLineBreaks &&
              fe.test(e.input.slice(i, e.position)) &&
              Ie(e, "non-ASCII line breaks are interpreted as content"),
            e.documents.push(e.result),
            e.position === e.lineStart && Ne(e)
              ? 46 === e.input.charCodeAt(e.position) &&
                ((e.position += 3), De(e, !0, -1))
              : e.position < e.length - 1 &&
                ke(e, "end of the stream or a document separator is expected");
        }
        function He(e, t) {
          (t = t || {}),
            0 !== (e = String(e)).length &&
              (10 !== e.charCodeAt(e.length - 1) &&
                13 !== e.charCodeAt(e.length - 1) &&
                (e += "\n"),
              65279 === e.charCodeAt(0) && (e = e.slice(1)));
          var r = new $e(e, t),
            n = e.indexOf("\0");
          for (
            -1 !== n &&
              ((r.position = n), ke(r, "null byte is not allowed in input")),
              r.input += "\0";
            32 === r.input.charCodeAt(r.position);

          )
            (r.lineIndent += 1), (r.position += 1);
          for (; r.position < r.length - 1; ) ze(r);
          return r.documents;
        }
        var Je = {
            loadAll: function (e, t, r) {
              null !== t &&
                "object" == typeof t &&
                void 0 === r &&
                ((r = t), (t = null));
              var n = He(e, r);
              if ("function" != typeof t) return n;
              for (var s = 0, i = n.length; s < i; s += 1) t(n[s]);
            },
            load: function (e, t) {
              var r = He(e, t);
              if (0 !== r.length) {
                if (1 === r.length) return r[0];
                throw new x(
                  "expected a single document in the stream, but found more"
                );
              }
            },
          },
          Ge = Object.prototype.toString,
          We = Object.prototype.hasOwnProperty,
          Ke = 65279,
          Ye = 9,
          Xe = 10,
          Qe = 13,
          Ze = 32,
          et = 33,
          tt = 34,
          rt = 35,
          nt = 37,
          st = 38,
          it = 39,
          ot = 42,
          at = 44,
          ct = 45,
          lt = 58,
          ut = 61,
          pt = 62,
          ht = 63,
          ft = 64,
          mt = 91,
          dt = 93,
          yt = 96,
          gt = 123,
          vt = 124,
          bt = 125,
          xt = {
            0: "\\0",
            7: "\\a",
            8: "\\b",
            9: "\\t",
            10: "\\n",
            11: "\\v",
            12: "\\f",
            13: "\\r",
            27: "\\e",
            34: '\\"',
            92: "\\\\",
            133: "\\N",
            160: "\\_",
            8232: "\\L",
            8233: "\\P",
          },
          wt = [
            "y",
            "Y",
            "yes",
            "Yes",
            "YES",
            "on",
            "On",
            "ON",
            "n",
            "N",
            "no",
            "No",
            "NO",
            "off",
            "Off",
            "OFF",
          ],
          Et = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;
        function jt(e) {
          var t, r, n;
          if (((t = e.toString(16).toUpperCase()), e <= 255))
            (r = "x"), (n = 2);
          else if (e <= 65535) (r = "u"), (n = 4);
          else {
            if (!(e <= 4294967295))
              throw new x(
                "code point within a string may not be greater than 0xFFFFFFFF"
              );
            (r = "U"), (n = 8);
          }
          return "\\" + r + g.repeat("0", n - t.length) + t;
        }
        var Ot = 1,
          St = 2;
        function Pt(e) {
          (this.schema = e.schema || ne),
            (this.indent = Math.max(1, e.indent || 2)),
            (this.noArrayIndent = e.noArrayIndent || !1),
            (this.skipInvalid = e.skipInvalid || !1),
            (this.flowLevel = g.isNothing(e.flowLevel) ? -1 : e.flowLevel),
            (this.styleMap = (function (e, t) {
              var r, n, s, i, o, a, c;
              if (null === t) return {};
              for (
                r = {}, s = 0, i = (n = Object.keys(t)).length;
                s < i;
                s += 1
              )
                (o = n[s]),
                  (a = String(t[o])),
                  "!!" === o.slice(0, 2) &&
                    (o = "tag:yaml.org,2002:" + o.slice(2)),
                  (c = e.compiledTypeMap.fallback[o]) &&
                    We.call(c.styleAliases, a) &&
                    (a = c.styleAliases[a]),
                  (r[o] = a);
              return r;
            })(this.schema, e.styles || null)),
            (this.sortKeys = e.sortKeys || !1),
            (this.lineWidth = e.lineWidth || 80),
            (this.noRefs = e.noRefs || !1),
            (this.noCompatMode = e.noCompatMode || !1),
            (this.condenseFlow = e.condenseFlow || !1),
            (this.quotingType = '"' === e.quotingType ? St : Ot),
            (this.forceQuotes = e.forceQuotes || !1),
            (this.replacer =
              "function" == typeof e.replacer ? e.replacer : null),
            (this.implicitTypes = this.schema.compiledImplicit),
            (this.explicitTypes = this.schema.compiledExplicit),
            (this.tag = null),
            (this.result = ""),
            (this.duplicates = []),
            (this.usedDuplicates = null);
        }
        function At(e, t) {
          for (
            var r, n = g.repeat(" ", t), s = 0, i = -1, o = "", a = e.length;
            s < a;

          )
            -1 === (i = e.indexOf("\n", s))
              ? ((r = e.slice(s)), (s = a))
              : ((r = e.slice(s, i + 1)), (s = i + 1)),
              r.length && "\n" !== r && (o += n),
              (o += r);
          return o;
        }
        function $t(e, t) {
          return "\n" + g.repeat(" ", e.indent * t);
        }
        function _t(e) {
          return e === Ze || e === Ye;
        }
        function kt(e) {
          return (
            (32 <= e && e <= 126) ||
            (161 <= e && e <= 55295 && 8232 !== e && 8233 !== e) ||
            (57344 <= e && e <= 65533 && e !== Ke) ||
            (65536 <= e && e <= 1114111)
          );
        }
        function It(e) {
          return kt(e) && e !== Ke && e !== Qe && e !== Xe;
        }
        function Tt(e, t, r) {
          var n = It(e),
            s = n && !_t(e);
          return (
            ((r
              ? n
              : n &&
                e !== at &&
                e !== mt &&
                e !== dt &&
                e !== gt &&
                e !== bt) &&
              e !== rt &&
              !(t === lt && !s)) ||
            (It(t) && !_t(t) && e === rt) ||
            (t === lt && s)
          );
        }
        function Ct(e, t) {
          var r,
            n = e.charCodeAt(t);
          return n >= 55296 &&
            n <= 56319 &&
            t + 1 < e.length &&
            (r = e.charCodeAt(t + 1)) >= 56320 &&
            r <= 57343
            ? 1024 * (n - 55296) + r - 56320 + 65536
            : n;
        }
        function Mt(e) {
          return /^\n* /.test(e);
        }
        var Rt = 1,
          Ft = 2,
          Dt = 3,
          Nt = 4,
          qt = 5;
        function Lt(e, t, r, n, s, i, o, a) {
          var c,
            l,
            u = 0,
            p = null,
            h = !1,
            f = !1,
            m = -1 !== n,
            d = -1,
            y =
              kt((l = Ct(e, 0))) &&
              l !== Ke &&
              !_t(l) &&
              l !== ct &&
              l !== ht &&
              l !== lt &&
              l !== at &&
              l !== mt &&
              l !== dt &&
              l !== gt &&
              l !== bt &&
              l !== rt &&
              l !== st &&
              l !== ot &&
              l !== et &&
              l !== vt &&
              l !== ut &&
              l !== pt &&
              l !== it &&
              l !== tt &&
              l !== nt &&
              l !== ft &&
              l !== yt &&
              (function (e) {
                return !_t(e) && e !== lt;
              })(Ct(e, e.length - 1));
          if (t || o)
            for (c = 0; c < e.length; u >= 65536 ? (c += 2) : c++) {
              if (!kt((u = Ct(e, c)))) return qt;
              (y = y && Tt(u, p, a)), (p = u);
            }
          else {
            for (c = 0; c < e.length; u >= 65536 ? (c += 2) : c++) {
              if ((u = Ct(e, c)) === Xe)
                (h = !0),
                  m &&
                    ((f = f || (c - d - 1 > n && " " !== e[d + 1])), (d = c));
              else if (!kt(u)) return qt;
              (y = y && Tt(u, p, a)), (p = u);
            }
            f = f || (m && c - d - 1 > n && " " !== e[d + 1]);
          }
          return h || f
            ? r > 9 && Mt(e)
              ? qt
              : o
              ? i === St
                ? qt
                : Ft
              : f
              ? Nt
              : Dt
            : !y || o || s(e)
            ? i === St
              ? qt
              : Ft
            : Rt;
        }
        function Bt(e, t, r, n, s) {
          e.dump = (function () {
            if (0 === t.length) return e.quotingType === St ? '""' : "''";
            if (!e.noCompatMode && (-1 !== wt.indexOf(t) || Et.test(t)))
              return e.quotingType === St ? '"' + t + '"' : "'" + t + "'";
            var i = e.indent * Math.max(1, r),
              o =
                -1 === e.lineWidth
                  ? -1
                  : Math.max(Math.min(e.lineWidth, 40), e.lineWidth - i),
              a = n || (e.flowLevel > -1 && r >= e.flowLevel);
            switch (
              Lt(
                t,
                a,
                e.indent,
                o,
                function (t) {
                  return (function (e, t) {
                    var r, n;
                    for (r = 0, n = e.implicitTypes.length; r < n; r += 1)
                      if (e.implicitTypes[r].resolve(t)) return !0;
                    return !1;
                  })(e, t);
                },
                e.quotingType,
                e.forceQuotes && !n,
                s
              )
            ) {
              case Rt:
                return t;
              case Ft:
                return "'" + t.replace(/'/g, "''") + "'";
              case Dt:
                return "|" + Ut(t, e.indent) + Vt(At(t, i));
              case Nt:
                return (
                  ">" +
                  Ut(t, e.indent) +
                  Vt(
                    At(
                      (function (e, t) {
                        var r,
                          n,
                          s = /(\n+)([^\n]*)/g,
                          i =
                            ((a = e.indexOf("\n")),
                            (a = -1 !== a ? a : e.length),
                            (s.lastIndex = a),
                            zt(e.slice(0, a), t)),
                          o = "\n" === e[0] || " " === e[0];
                        var a;
                        for (; (n = s.exec(e)); ) {
                          var c = n[1],
                            l = n[2];
                          (r = " " === l[0]),
                            (i +=
                              c + (o || r || "" === l ? "" : "\n") + zt(l, t)),
                            (o = r);
                        }
                        return i;
                      })(t, o),
                      i
                    )
                  )
                );
              case qt:
                return (
                  '"' +
                  (function (e) {
                    for (
                      var t, r = "", n = 0, s = 0;
                      s < e.length;
                      n >= 65536 ? (s += 2) : s++
                    )
                      (n = Ct(e, s)),
                        !(t = xt[n]) && kt(n)
                          ? ((r += e[s]), n >= 65536 && (r += e[s + 1]))
                          : (r += t || jt(n));
                    return r;
                  })(t) +
                  '"'
                );
              default:
                throw new x("impossible error: invalid scalar style");
            }
          })();
        }
        function Ut(e, t) {
          var r = Mt(e) ? String(t) : "",
            n = "\n" === e[e.length - 1];
          return (
            r +
            (n && ("\n" === e[e.length - 2] || "\n" === e)
              ? "+"
              : n
              ? ""
              : "-") +
            "\n"
          );
        }
        function Vt(e) {
          return "\n" === e[e.length - 1] ? e.slice(0, -1) : e;
        }
        function zt(e, t) {
          if ("" === e || " " === e[0]) return e;
          for (
            var r, n, s = / [^ ]/g, i = 0, o = 0, a = 0, c = "";
            (r = s.exec(e));

          )
            (a = r.index) - i > t &&
              ((n = o > i ? o : a), (c += "\n" + e.slice(i, n)), (i = n + 1)),
              (o = a);
          return (
            (c += "\n"),
            e.length - i > t && o > i
              ? (c += e.slice(i, o) + "\n" + e.slice(o + 1))
              : (c += e.slice(i)),
            c.slice(1)
          );
        }
        function Ht(e, t, r, n) {
          var s,
            i,
            o,
            a = "",
            c = e.tag;
          for (s = 0, i = r.length; s < i; s += 1)
            (o = r[s]),
              e.replacer && (o = e.replacer.call(r, String(s), o)),
              (Gt(e, t + 1, o, !0, !0, !1, !0) ||
                (void 0 === o && Gt(e, t + 1, null, !0, !0, !1, !0))) &&
                ((n && "" === a) || (a += $t(e, t)),
                e.dump && Xe === e.dump.charCodeAt(0)
                  ? (a += "-")
                  : (a += "- "),
                (a += e.dump));
          (e.tag = c), (e.dump = a || "[]");
        }
        function Jt(e, t, r) {
          var n, s, i, o, a, c;
          for (
            i = 0, o = (s = r ? e.explicitTypes : e.implicitTypes).length;
            i < o;
            i += 1
          )
            if (
              ((a = s[i]).instanceOf || a.predicate) &&
              (!a.instanceOf ||
                ("object" == typeof t && t instanceof a.instanceOf)) &&
              (!a.predicate || a.predicate(t))
            ) {
              if (
                (r
                  ? a.multi && a.representName
                    ? (e.tag = a.representName(t))
                    : (e.tag = a.tag)
                  : (e.tag = "?"),
                a.represent)
              ) {
                if (
                  ((c = e.styleMap[a.tag] || a.defaultStyle),
                  "[object Function]" === Ge.call(a.represent))
                )
                  n = a.represent(t, c);
                else {
                  if (!We.call(a.represent, c))
                    throw new x(
                      "!<" +
                        a.tag +
                        '> tag resolver accepts not "' +
                        c +
                        '" style'
                    );
                  n = a.represent[c](t, c);
                }
                e.dump = n;
              }
              return !0;
            }
          return !1;
        }
        function Gt(e, t, r, n, s, i, o) {
          (e.tag = null), (e.dump = r), Jt(e, r, !1) || Jt(e, r, !0);
          var a,
            c = Ge.call(e.dump),
            l = n;
          n && (n = e.flowLevel < 0 || e.flowLevel > t);
          var u,
            p,
            h = "[object Object]" === c || "[object Array]" === c;
          if (
            (h && (p = -1 !== (u = e.duplicates.indexOf(r))),
            ((null !== e.tag && "?" !== e.tag) ||
              p ||
              (2 !== e.indent && t > 0)) &&
              (s = !1),
            p && e.usedDuplicates[u])
          )
            e.dump = "*ref_" + u;
          else {
            if (
              (h && p && !e.usedDuplicates[u] && (e.usedDuplicates[u] = !0),
              "[object Object]" === c)
            )
              n && 0 !== Object.keys(e.dump).length
                ? (!(function (e, t, r, n) {
                    var s,
                      i,
                      o,
                      a,
                      c,
                      l,
                      u = "",
                      p = e.tag,
                      h = Object.keys(r);
                    if (!0 === e.sortKeys) h.sort();
                    else if ("function" == typeof e.sortKeys)
                      h.sort(e.sortKeys);
                    else if (e.sortKeys)
                      throw new x("sortKeys must be a boolean or a function");
                    for (s = 0, i = h.length; s < i; s += 1)
                      (l = ""),
                        (n && "" === u) || (l += $t(e, t)),
                        (a = r[(o = h[s])]),
                        e.replacer && (a = e.replacer.call(r, o, a)),
                        Gt(e, t + 1, o, !0, !0, !0) &&
                          ((c =
                            (null !== e.tag && "?" !== e.tag) ||
                            (e.dump && e.dump.length > 1024)) &&
                            (e.dump && Xe === e.dump.charCodeAt(0)
                              ? (l += "?")
                              : (l += "? ")),
                          (l += e.dump),
                          c && (l += $t(e, t)),
                          Gt(e, t + 1, a, !0, c) &&
                            (e.dump && Xe === e.dump.charCodeAt(0)
                              ? (l += ":")
                              : (l += ": "),
                            (u += l += e.dump)));
                    (e.tag = p), (e.dump = u || "{}");
                  })(e, t, e.dump, s),
                  p && (e.dump = "&ref_" + u + e.dump))
                : (!(function (e, t, r) {
                    var n,
                      s,
                      i,
                      o,
                      a,
                      c = "",
                      l = e.tag,
                      u = Object.keys(r);
                    for (n = 0, s = u.length; n < s; n += 1)
                      (a = ""),
                        "" !== c && (a += ", "),
                        e.condenseFlow && (a += '"'),
                        (o = r[(i = u[n])]),
                        e.replacer && (o = e.replacer.call(r, i, o)),
                        Gt(e, t, i, !1, !1) &&
                          (e.dump.length > 1024 && (a += "? "),
                          (a +=
                            e.dump +
                            (e.condenseFlow ? '"' : "") +
                            ":" +
                            (e.condenseFlow ? "" : " ")),
                          Gt(e, t, o, !1, !1) && (c += a += e.dump));
                    (e.tag = l), (e.dump = "{" + c + "}");
                  })(e, t, e.dump),
                  p && (e.dump = "&ref_" + u + " " + e.dump));
            else if ("[object Array]" === c)
              n && 0 !== e.dump.length
                ? (e.noArrayIndent && !o && t > 0
                    ? Ht(e, t - 1, e.dump, s)
                    : Ht(e, t, e.dump, s),
                  p && (e.dump = "&ref_" + u + e.dump))
                : (!(function (e, t, r) {
                    var n,
                      s,
                      i,
                      o = "",
                      a = e.tag;
                    for (n = 0, s = r.length; n < s; n += 1)
                      (i = r[n]),
                        e.replacer && (i = e.replacer.call(r, String(n), i)),
                        (Gt(e, t, i, !1, !1) ||
                          (void 0 === i && Gt(e, t, null, !1, !1))) &&
                          ("" !== o && (o += "," + (e.condenseFlow ? "" : " ")),
                          (o += e.dump));
                    (e.tag = a), (e.dump = "[" + o + "]");
                  })(e, t, e.dump),
                  p && (e.dump = "&ref_" + u + " " + e.dump));
            else {
              if ("[object String]" !== c) {
                if ("[object Undefined]" === c) return !1;
                if (e.skipInvalid) return !1;
                throw new x("unacceptable kind of an object to dump " + c);
              }
              "?" !== e.tag && Bt(e, e.dump, t, i, l);
            }
            null !== e.tag &&
              "?" !== e.tag &&
              ((a = encodeURI(
                "!" === e.tag[0] ? e.tag.slice(1) : e.tag
              ).replace(/!/g, "%21")),
              (a =
                "!" === e.tag[0]
                  ? "!" + a
                  : "tag:yaml.org,2002:" === a.slice(0, 18)
                  ? "!!" + a.slice(18)
                  : "!<" + a + ">"),
              (e.dump = a + " " + e.dump));
          }
          return !0;
        }
        function Wt(e, t) {
          var r,
            n,
            s = [],
            i = [];
          for (Kt(e, s, i), r = 0, n = i.length; r < n; r += 1)
            t.duplicates.push(s[i[r]]);
          t.usedDuplicates = new Array(n);
        }
        function Kt(e, t, r) {
          var n, s, i;
          if (null !== e && "object" == typeof e)
            if (-1 !== (s = t.indexOf(e))) -1 === r.indexOf(s) && r.push(s);
            else if ((t.push(e), Array.isArray(e)))
              for (s = 0, i = e.length; s < i; s += 1) Kt(e[s], t, r);
            else
              for (s = 0, i = (n = Object.keys(e)).length; s < i; s += 1)
                Kt(e[n[s]], t, r);
        }
        function Yt(e, t) {
          return function () {
            throw new Error(
              "Function yaml." +
                e +
                " is removed in js-yaml 4. Use yaml." +
                t +
                " instead, which is now safe by default."
            );
          };
        }
        var Xt = P,
          Qt = _,
          Zt = C,
          er = U,
          tr = V,
          rr = ne,
          nr = Je.load,
          sr = Je.loadAll,
          ir = {
            dump: function (e, t) {
              var r = new Pt((t = t || {}));
              r.noRefs || Wt(e, r);
              var n = e;
              return (
                r.replacer && (n = r.replacer.call({ "": n }, "", n)),
                Gt(r, 0, n, !0, !0) ? r.dump + "\n" : ""
              );
            },
          }.dump,
          or = x,
          ar = {
            binary: K,
            float: B,
            map: T,
            null: M,
            pairs: ee,
            set: re,
            timestamp: J,
            bool: R,
            int: N,
            merge: G,
            omap: Q,
            seq: I,
            str: k,
          },
          cr = Yt("safeLoad", "load"),
          lr = Yt("safeLoadAll", "loadAll"),
          ur = Yt("safeDump", "dump");
        const pr = {
            Type: Xt,
            Schema: Qt,
            FAILSAFE_SCHEMA: Zt,
            JSON_SCHEMA: er,
            CORE_SCHEMA: tr,
            DEFAULT_SCHEMA: rr,
            load: nr,
            loadAll: sr,
            dump: ir,
            YAMLException: or,
            types: ar,
            safeLoad: cr,
            safeLoadAll: lr,
            safeDump: ur,
          },
          {
            fetch: hr,
            Response: fr,
            Headers: mr,
            Request: dr,
            FormData: yr,
            File: gr,
            Blob: vr,
          } = globalThis;
        void 0 === globalThis.fetch && (globalThis.fetch = hr),
          void 0 === globalThis.Headers && (globalThis.Headers = mr),
          void 0 === globalThis.Request && (globalThis.Request = dr),
          void 0 === globalThis.Response && (globalThis.Response = fr),
          void 0 === globalThis.FormData && (globalThis.FormData = yr),
          void 0 === globalThis.File && (globalThis.File = gr),
          void 0 === globalThis.Blob && (globalThis.Blob = vr);
        const br = (e) => ":/?#[]@!$&'()*+,;=".indexOf(e) > -1,
          xr = (e) => /^[a-z0-9\-._~]+$/i.test(e);
        function wr(e, { escape: t } = {}, r) {
          return (
            "number" == typeof e && (e = e.toString()),
            "string" == typeof e && e.length && t
              ? r
                ? JSON.parse(e)
                : [...e]
                    .map((e) => {
                      if (xr(e)) return e;
                      if (br(e) && "unsafe" === t) return e;
                      const r = new TextEncoder();
                      return Array.from(r.encode(e))
                        .map((e) =>
                          `0${e.toString(16).toUpperCase()}`.slice(-2)
                        )
                        .map((e) => `%${e}`)
                        .join("");
                    })
                    .join("")
              : e
          );
        }
        function Er(e) {
          const { value: t } = e;
          return Array.isArray(t)
            ? (function ({
                key: e,
                value: t,
                style: r,
                explode: n,
                escape: s,
              }) {
                const i = (e) => wr(e, { escape: s });
                if ("simple" === r) return t.map((e) => i(e)).join(",");
                if ("label" === r) return `.${t.map((e) => i(e)).join(".")}`;
                if ("matrix" === r)
                  return t
                    .map((e) => i(e))
                    .reduce(
                      (t, r) =>
                        !t || n ? `${t || ""};${e}=${r}` : `${t},${r}`,
                      ""
                    );
                if ("form" === r) {
                  const r = n ? `&${e}=` : ",";
                  return t.map((e) => i(e)).join(r);
                }
                if ("spaceDelimited" === r) {
                  const r = n ? `${e}=` : "";
                  return t.map((e) => i(e)).join(` ${r}`);
                }
                if ("pipeDelimited" === r) {
                  const r = n ? `${e}=` : "";
                  return t.map((e) => i(e)).join(`|${r}`);
                }
                return;
              })(e)
            : "object" == typeof t
            ? (function ({
                key: e,
                value: t,
                style: r,
                explode: n,
                escape: s,
              }) {
                const i = (e) => wr(e, { escape: s }),
                  o = Object.keys(t);
                if ("simple" === r)
                  return o.reduce((e, r) => {
                    const s = i(t[r]);
                    return `${e ? `${e},` : ""}${r}${n ? "=" : ","}${s}`;
                  }, "");
                if ("label" === r)
                  return o.reduce((e, r) => {
                    const s = i(t[r]);
                    return `${e ? `${e}.` : "."}${r}${n ? "=" : "."}${s}`;
                  }, "");
                if ("matrix" === r && n)
                  return o.reduce(
                    (e, r) => `${e ? `${e};` : ";"}${r}=${i(t[r])}`,
                    ""
                  );
                if ("matrix" === r)
                  return o.reduce((r, n) => {
                    const s = i(t[n]);
                    return `${r ? `${r},` : `;${e}=`}${n},${s}`;
                  }, "");
                if ("form" === r)
                  return o.reduce((e, r) => {
                    const s = i(t[r]);
                    return `${e ? `${e}${n ? "&" : ","}` : ""}${r}${
                      n ? "=" : ","
                    }${s}`;
                  }, "");
                return;
              })(e)
            : (function ({ key: e, value: t, style: r, escape: n }) {
                const s = (e) => wr(e, { escape: n });
                if ("simple" === r) return s(t);
                if ("label" === r) return `.${s(t)}`;
                if ("matrix" === r) return `;${e}=${s(t)}`;
                if ("form" === r) return s(t);
                if ("deepObject" === r) return s(t, {}, !0);
                return;
              })(e);
        }
        const jr = { serializeRes: Pr, mergeInQueryOrForm: Fr };
        async function Or(e, t = {}) {
          "object" == typeof e && (e = (t = e).url),
            (t.headers = t.headers || {}),
            jr.mergeInQueryOrForm(t),
            t.headers &&
              Object.keys(t.headers).forEach((e) => {
                const r = t.headers[e];
                "string" == typeof r && (t.headers[e] = r.replace(/\n+/g, " "));
              }),
            t.requestInterceptor && (t = (await t.requestInterceptor(t)) || t);
          const r = t.headers["content-type"] || t.headers["Content-Type"];
          let n;
          /multipart\/form-data/i.test(r) &&
            (delete t.headers["content-type"],
            delete t.headers["Content-Type"]);
          try {
            (n = await (t.userFetch || fetch)(t.url, t)),
              (n = await jr.serializeRes(n, e, t)),
              t.responseInterceptor &&
                (n = (await t.responseInterceptor(n)) || n);
          } catch (e) {
            if (!n) throw e;
            const t = new Error(
              n.statusText || `response status is ${n.status}`
            );
            throw (
              ((t.status = n.status),
              (t.statusCode = n.status),
              (t.responseError = e),
              t)
            );
          }
          if (!n.ok) {
            const e = new Error(
              n.statusText || `response status is ${n.status}`
            );
            throw (
              ((e.status = n.status),
              (e.statusCode = n.status),
              (e.response = n),
              e)
            );
          }
          return n;
        }
        const Sr = (e = "") => /(json|xml|yaml|text)\b/.test(e);
        function Pr(e, t, { loadSpec: r = !1 } = {}) {
          const n = {
              ok: e.ok,
              url: e.url || t,
              status: e.status,
              statusText: e.statusText,
              headers: Ar(e.headers),
            },
            s = n.headers["content-type"],
            i = r || Sr(s);
          return (i ? e.text : e.blob || e.buffer).call(e).then((e) => {
            if (((n.text = e), (n.data = e), i))
              try {
                const t = (function (e, t) {
                  return t &&
                    (0 === t.indexOf("application/json") ||
                      t.indexOf("+json") > 0)
                    ? JSON.parse(e)
                    : pr.load(e);
                })(e, s);
                (n.body = t), (n.obj = t);
              } catch (e) {
                n.parseError = e;
              }
            return n;
          });
        }
        function Ar(e = {}) {
          return "function" != typeof e.entries
            ? {}
            : Array.from(e.entries()).reduce(
                (e, [t, r]) => (
                  (e[t] = (function (e) {
                    return e.includes(", ") ? e.split(", ") : e;
                  })(r)),
                  e
                ),
                {}
              );
        }
        function $r(e, t) {
          return (
            t || "undefined" == typeof navigator || (t = navigator),
            t && "ReactNative" === t.product
              ? !(!e || "object" != typeof e || "string" != typeof e.uri)
              : ("undefined" != typeof File && e instanceof File) ||
                ("undefined" != typeof Blob && e instanceof Blob) ||
                !!ArrayBuffer.isView(e) ||
                (null !== e &&
                  "object" == typeof e &&
                  "function" == typeof e.pipe)
          );
        }
        function _r(e, t) {
          return Array.isArray(e) && e.some((e) => $r(e, t));
        }
        const kr = { form: ",", spaceDelimited: "%20", pipeDelimited: "|" },
          Ir = { csv: ",", ssv: "%20", tsv: "%09", pipes: "|" };
        class Tr extends File {
          constructor(e, t = "", r = {}) {
            super([e], t, r), (this.data = e);
          }
          valueOf() {
            return this.data;
          }
          toString() {
            return this.valueOf();
          }
        }
        function Cr(e, t, r = !1) {
          const {
              collectionFormat: n,
              allowEmptyValue: s,
              serializationOption: i,
              encoding: o,
            } = t,
            a = "object" != typeof t || Array.isArray(t) ? t : t.value,
            c = r ? (e) => e.toString() : (e) => encodeURIComponent(e),
            l = c(e);
          if (void 0 === a && s) return [[l, ""]];
          if ($r(a) || _r(a)) return [[l, a]];
          if (i) return Mr(e, a, r, i);
          if (o) {
            if (
              [typeof o.style, typeof o.explode, typeof o.allowReserved].some(
                (e) => "undefined" !== e
              )
            ) {
              const { style: t, explode: n, allowReserved: s } = o;
              return Mr(e, a, r, { style: t, explode: n, allowReserved: s });
            }
            if ("string" == typeof o.contentType) {
              if (o.contentType.startsWith("application/json")) {
                const e = c("string" == typeof a ? a : JSON.stringify(a));
                return [[l, new Tr(e, "blob", { type: o.contentType })]];
              }
              const e = c(String(a));
              return [[l, new Tr(e, "blob", { type: o.contentType })]];
            }
            return "object" != typeof a
              ? [[l, c(a)]]
              : Array.isArray(a) && a.every((e) => "object" != typeof e)
              ? [[l, a.map(c).join(",")]]
              : [[l, c(JSON.stringify(a))]];
          }
          return "object" != typeof a
            ? [[l, c(a)]]
            : Array.isArray(a)
            ? "multi" === n
              ? [[l, a.map(c)]]
              : [[l, a.map(c).join(Ir[n || "csv"])]]
            : [[l, ""]];
        }
        function Mr(e, t, r, n) {
          const s = n.style || "form",
            i = void 0 === n.explode ? "form" === s : n.explode,
            o = !r && (n && n.allowReserved ? "unsafe" : "reserved"),
            a = (e) => wr(e, { escape: o }),
            c = r ? (e) => e : (e) => wr(e, { escape: o });
          return "object" != typeof t
            ? [[c(e), a(t)]]
            : Array.isArray(t)
            ? i
              ? [[c(e), t.map(a)]]
              : [[c(e), t.map(a).join(kr[s])]]
            : "deepObject" === s
            ? Object.keys(t).map((r) => [c(`${e}[${r}]`), a(t[r])])
            : i
            ? Object.keys(t).map((e) => [c(e), a(t[e])])
            : [
                [
                  c(e),
                  Object.keys(t)
                    .map((e) => [`${c(e)},${a(t[e])}`])
                    .join(","),
                ],
              ];
        }
        function Rr(e) {
          const t = Object.keys(e).reduce((t, r) => {
            for (const [n, s] of Cr(r, e[r]))
              t[n] = s instanceof Tr ? s.valueOf() : s;
            return t;
          }, {});
          return d().stringify(t, { encode: !1, indices: !1 }) || "";
        }
        function Fr(e = {}) {
          const { url: t = "", query: r, form: n } = e;
          if (n) {
            const t = Object.keys(n).some((e) => {
                const { value: t } = n[e];
                return $r(t) || _r(t);
              }),
              r = e.headers["content-type"] || e.headers["Content-Type"];
            if (t || /multipart\/form-data/i.test(r)) {
              const t =
                ((s = e.form),
                Object.entries(s).reduce((e, [t, r]) => {
                  for (const [n, s] of Cr(t, r, !0))
                    if (Array.isArray(s))
                      for (const t of s)
                        if (ArrayBuffer.isView(t)) {
                          const r = new Blob([t]);
                          e.append(n, r);
                        } else e.append(n, t);
                    else if (ArrayBuffer.isView(s)) {
                      const t = new Blob([s]);
                      e.append(n, t);
                    } else e.append(n, s);
                  return e;
                }, new FormData()));
              (e.formdata = t), (e.body = t);
            } else e.body = Rr(n);
            delete e.form;
          }
          var s;
          if (r) {
            const [n, s] = t.split("?");
            let i = "";
            if (s) {
              const e = d().parse(s);
              Object.keys(r).forEach((t) => delete e[t]),
                (i = d().stringify(e, { encode: !0 }));
            }
            const o = ((...e) => {
              const t = e.filter((e) => e).join("&");
              return t ? `?${t}` : "";
            })(i, Rr(r));
            (e.url = n + o), delete e.query;
          }
          return e;
        }
        function Dr(e, t = {}) {
          const { requestInterceptor: r, responseInterceptor: n } = t,
            s = e.withCredentials ? "include" : "same-origin";
          return (t) =>
            e({
              url: t,
              loadSpec: !0,
              requestInterceptor: r,
              responseInterceptor: n,
              headers: { Accept: p },
              credentials: s,
            }).then((e) => e.body);
        }
        const Nr = (e) => {
            const { baseDoc: t, url: r } = e,
              n = t ?? r ?? "";
            return "string" == typeof globalThis.document?.baseURI
              ? String(new URL(n, globalThis.document.baseURI))
              : n;
          },
          qr = (e) => {
            const { fetch: t, http: r } = e;
            return t || r || Or;
          };
        var Lr,
          Br =
            ((Lr = function (e, t) {
              return (
                (Lr =
                  Object.setPrototypeOf ||
                  ({ __proto__: [] } instanceof Array &&
                    function (e, t) {
                      e.__proto__ = t;
                    }) ||
                  function (e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r]);
                  }),
                Lr(e, t)
              );
            }),
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              Lr(e, t),
                (e.prototype =
                  null === t
                    ? Object.create(t)
                    : ((r.prototype = t.prototype), new r()));
            }),
          Ur = Object.prototype.hasOwnProperty;
        function Vr(e, t) {
          return Ur.call(e, t);
        }
        function zr(e) {
          if (Array.isArray(e)) {
            for (var t = new Array(e.length), r = 0; r < t.length; r++)
              t[r] = "" + r;
            return t;
          }
          if (Object.keys) return Object.keys(e);
          var n = [];
          for (var s in e) Vr(e, s) && n.push(s);
          return n;
        }
        function Hr(e) {
          switch (typeof e) {
            case "object":
              return JSON.parse(JSON.stringify(e));
            case "undefined":
              return null;
            default:
              return e;
          }
        }
        function Jr(e) {
          for (var t, r = 0, n = e.length; r < n; ) {
            if (!((t = e.charCodeAt(r)) >= 48 && t <= 57)) return !1;
            r++;
          }
          return !0;
        }
        function Gr(e) {
          return -1 === e.indexOf("/") && -1 === e.indexOf("~")
            ? e
            : e.replace(/~/g, "~0").replace(/\//g, "~1");
        }
        function Wr(e) {
          return e.replace(/~1/g, "/").replace(/~0/g, "~");
        }
        function Kr(e) {
          if (void 0 === e) return !0;
          if (e)
            if (Array.isArray(e)) {
              for (var t = 0, r = e.length; t < r; t++) if (Kr(e[t])) return !0;
            } else if ("object" == typeof e)
              for (var n = zr(e), s = n.length, i = 0; i < s; i++)
                if (Kr(e[n[i]])) return !0;
          return !1;
        }
        function Yr(e, t) {
          var r = [e];
          for (var n in t) {
            var s =
              "object" == typeof t[n] ? JSON.stringify(t[n], null, 2) : t[n];
            void 0 !== s && r.push(n + ": " + s);
          }
          return r.join("\n");
        }
        var Xr = (function (e) {
            function t(t, r, n, s, i) {
              var o = this.constructor,
                a =
                  e.call(
                    this,
                    Yr(t, { name: r, index: n, operation: s, tree: i })
                  ) || this;
              return (
                (a.name = r),
                (a.index = n),
                (a.operation = s),
                (a.tree = i),
                Object.setPrototypeOf(a, o.prototype),
                (a.message = Yr(t, {
                  name: r,
                  index: n,
                  operation: s,
                  tree: i,
                })),
                a
              );
            }
            return Br(t, e), t;
          })(Error),
          Qr = Xr,
          Zr = Hr,
          en = {
            add: function (e, t, r) {
              return (e[t] = this.value), { newDocument: r };
            },
            remove: function (e, t, r) {
              var n = e[t];
              return delete e[t], { newDocument: r, removed: n };
            },
            replace: function (e, t, r) {
              var n = e[t];
              return (e[t] = this.value), { newDocument: r, removed: n };
            },
            move: function (e, t, r) {
              var n = rn(r, this.path);
              n && (n = Hr(n));
              var s = nn(r, { op: "remove", path: this.from }).removed;
              return (
                nn(r, { op: "add", path: this.path, value: s }),
                { newDocument: r, removed: n }
              );
            },
            copy: function (e, t, r) {
              var n = rn(r, this.from);
              return (
                nn(r, { op: "add", path: this.path, value: Hr(n) }),
                { newDocument: r }
              );
            },
            test: function (e, t, r) {
              return { newDocument: r, test: ln(e[t], this.value) };
            },
            _get: function (e, t, r) {
              return (this.value = e[t]), { newDocument: r };
            },
          },
          tn = {
            add: function (e, t, r) {
              return (
                Jr(t) ? e.splice(t, 0, this.value) : (e[t] = this.value),
                { newDocument: r, index: t }
              );
            },
            remove: function (e, t, r) {
              return { newDocument: r, removed: e.splice(t, 1)[0] };
            },
            replace: function (e, t, r) {
              var n = e[t];
              return (e[t] = this.value), { newDocument: r, removed: n };
            },
            move: en.move,
            copy: en.copy,
            test: en.test,
            _get: en._get,
          };
        function rn(e, t) {
          if ("" == t) return e;
          var r = { op: "_get", path: t };
          return nn(e, r), r.value;
        }
        function nn(e, t, r, n, s, i) {
          if (
            (void 0 === r && (r = !1),
            void 0 === n && (n = !0),
            void 0 === s && (s = !0),
            void 0 === i && (i = 0),
            r && ("function" == typeof r ? r(t, 0, e, t.path) : an(t, 0)),
            "" === t.path)
          ) {
            var o = { newDocument: e };
            if ("add" === t.op) return (o.newDocument = t.value), o;
            if ("replace" === t.op)
              return (o.newDocument = t.value), (o.removed = e), o;
            if ("move" === t.op || "copy" === t.op)
              return (
                (o.newDocument = rn(e, t.from)),
                "move" === t.op && (o.removed = e),
                o
              );
            if ("test" === t.op) {
              if (((o.test = ln(e, t.value)), !1 === o.test))
                throw new Qr(
                  "Test operation failed",
                  "TEST_OPERATION_FAILED",
                  i,
                  t,
                  e
                );
              return (o.newDocument = e), o;
            }
            if ("remove" === t.op)
              return (o.removed = e), (o.newDocument = null), o;
            if ("_get" === t.op) return (t.value = e), o;
            if (r)
              throw new Qr(
                "Operation `op` property is not one of operations defined in RFC-6902",
                "OPERATION_OP_INVALID",
                i,
                t,
                e
              );
            return o;
          }
          n || (e = Hr(e));
          var a = (t.path || "").split("/"),
            c = e,
            l = 1,
            u = a.length,
            p = void 0,
            h = void 0,
            f = void 0;
          for (f = "function" == typeof r ? r : an; ; ) {
            if (
              ((h = a[l]) && -1 != h.indexOf("~") && (h = Wr(h)),
              s &&
                ("__proto__" == h ||
                  ("prototype" == h && l > 0 && "constructor" == a[l - 1])))
            )
              throw new TypeError(
                "JSON-Patch: modifying `__proto__` or `constructor/prototype` prop is banned for security reasons, if this was on purpose, please set `banPrototypeModifications` flag false and pass it to this function. More info in fast-json-patch README"
              );
            if (
              (r &&
                void 0 === p &&
                (void 0 === c[h]
                  ? (p = a.slice(0, l).join("/"))
                  : l == u - 1 && (p = t.path),
                void 0 !== p && f(t, 0, e, p)),
              l++,
              Array.isArray(c))
            ) {
              if ("-" === h) h = c.length;
              else {
                if (r && !Jr(h))
                  throw new Qr(
                    "Expected an unsigned base-10 integer value, making the new referenced value the array element with the zero-based index",
                    "OPERATION_PATH_ILLEGAL_ARRAY_INDEX",
                    i,
                    t,
                    e
                  );
                Jr(h) && (h = ~~h);
              }
              if (l >= u) {
                if (r && "add" === t.op && h > c.length)
                  throw new Qr(
                    "The specified index MUST NOT be greater than the number of elements in the array",
                    "OPERATION_VALUE_OUT_OF_BOUNDS",
                    i,
                    t,
                    e
                  );
                if (!1 === (o = tn[t.op].call(t, c, h, e)).test)
                  throw new Qr(
                    "Test operation failed",
                    "TEST_OPERATION_FAILED",
                    i,
                    t,
                    e
                  );
                return o;
              }
            } else if (l >= u) {
              if (!1 === (o = en[t.op].call(t, c, h, e)).test)
                throw new Qr(
                  "Test operation failed",
                  "TEST_OPERATION_FAILED",
                  i,
                  t,
                  e
                );
              return o;
            }
            if (((c = c[h]), r && l < u && (!c || "object" != typeof c)))
              throw new Qr(
                "Cannot perform operation at the desired path",
                "OPERATION_PATH_UNRESOLVABLE",
                i,
                t,
                e
              );
          }
        }
        function sn(e, t, r, n, s) {
          if (
            (void 0 === n && (n = !0),
            void 0 === s && (s = !0),
            r && !Array.isArray(t))
          )
            throw new Qr(
              "Patch sequence must be an array",
              "SEQUENCE_NOT_AN_ARRAY"
            );
          n || (e = Hr(e));
          for (var i = new Array(t.length), o = 0, a = t.length; o < a; o++)
            (i[o] = nn(e, t[o], r, !0, s, o)), (e = i[o].newDocument);
          return (i.newDocument = e), i;
        }
        function on(e, t, r) {
          var n = nn(e, t);
          if (!1 === n.test)
            throw new Qr(
              "Test operation failed",
              "TEST_OPERATION_FAILED",
              r,
              t,
              e
            );
          return n.newDocument;
        }
        function an(e, t, r, n) {
          if ("object" != typeof e || null === e || Array.isArray(e))
            throw new Qr(
              "Operation is not an object",
              "OPERATION_NOT_AN_OBJECT",
              t,
              e,
              r
            );
          if (!en[e.op])
            throw new Qr(
              "Operation `op` property is not one of operations defined in RFC-6902",
              "OPERATION_OP_INVALID",
              t,
              e,
              r
            );
          if ("string" != typeof e.path)
            throw new Qr(
              "Operation `path` property is not a string",
              "OPERATION_PATH_INVALID",
              t,
              e,
              r
            );
          if (0 !== e.path.indexOf("/") && e.path.length > 0)
            throw new Qr(
              'Operation `path` property must start with "/"',
              "OPERATION_PATH_INVALID",
              t,
              e,
              r
            );
          if (("move" === e.op || "copy" === e.op) && "string" != typeof e.from)
            throw new Qr(
              "Operation `from` property is not present (applicable in `move` and `copy` operations)",
              "OPERATION_FROM_REQUIRED",
              t,
              e,
              r
            );
          if (
            ("add" === e.op || "replace" === e.op || "test" === e.op) &&
            void 0 === e.value
          )
            throw new Qr(
              "Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)",
              "OPERATION_VALUE_REQUIRED",
              t,
              e,
              r
            );
          if (
            ("add" === e.op || "replace" === e.op || "test" === e.op) &&
            Kr(e.value)
          )
            throw new Qr(
              "Operation `value` property is not present (applicable in `add`, `replace` and `test` operations)",
              "OPERATION_VALUE_CANNOT_CONTAIN_UNDEFINED",
              t,
              e,
              r
            );
          if (r)
            if ("add" == e.op) {
              var s = e.path.split("/").length,
                i = n.split("/").length;
              if (s !== i + 1 && s !== i)
                throw new Qr(
                  "Cannot perform an `add` operation at the desired path",
                  "OPERATION_PATH_CANNOT_ADD",
                  t,
                  e,
                  r
                );
            } else if (
              "replace" === e.op ||
              "remove" === e.op ||
              "_get" === e.op
            ) {
              if (e.path !== n)
                throw new Qr(
                  "Cannot perform the operation at a path that does not exist",
                  "OPERATION_PATH_UNRESOLVABLE",
                  t,
                  e,
                  r
                );
            } else if ("move" === e.op || "copy" === e.op) {
              var o = cn([{ op: "_get", path: e.from, value: void 0 }], r);
              if (o && "OPERATION_PATH_UNRESOLVABLE" === o.name)
                throw new Qr(
                  "Cannot perform the operation from a path that does not exist",
                  "OPERATION_FROM_UNRESOLVABLE",
                  t,
                  e,
                  r
                );
            }
        }
        function cn(e, t, r) {
          try {
            if (!Array.isArray(e))
              throw new Qr(
                "Patch sequence must be an array",
                "SEQUENCE_NOT_AN_ARRAY"
              );
            if (t) sn(Hr(t), Hr(e), r || !0);
            else {
              r = r || an;
              for (var n = 0; n < e.length; n++) r(e[n], n, t, void 0);
            }
          } catch (e) {
            if (e instanceof Qr) return e;
            throw e;
          }
        }
        function ln(e, t) {
          if (e === t) return !0;
          if (e && t && "object" == typeof e && "object" == typeof t) {
            var r,
              n,
              s,
              i = Array.isArray(e),
              o = Array.isArray(t);
            if (i && o) {
              if ((n = e.length) != t.length) return !1;
              for (r = n; 0 != r--; ) if (!ln(e[r], t[r])) return !1;
              return !0;
            }
            if (i != o) return !1;
            var a = Object.keys(e);
            if ((n = a.length) !== Object.keys(t).length) return !1;
            for (r = n; 0 != r--; ) if (!t.hasOwnProperty(a[r])) return !1;
            for (r = n; 0 != r--; ) if (!ln(e[(s = a[r])], t[s])) return !1;
            return !0;
          }
          return e != e && t != t;
        }
        var un = new WeakMap(),
          pn = function (e) {
            (this.observers = new Map()), (this.obj = e);
          },
          hn = function (e, t) {
            (this.callback = e), (this.observer = t);
          };
        function fn(e, t) {
          t.unobserve();
        }
        function mn(e, t) {
          var r,
            n = (function (e) {
              return un.get(e);
            })(e);
          if (n) {
            var s = (function (e, t) {
              return e.observers.get(t);
            })(n, t);
            r = s && s.observer;
          } else (n = new pn(e)), un.set(e, n);
          if (r) return r;
          if (((r = {}), (n.value = Hr(e)), t)) {
            (r.callback = t), (r.next = null);
            var i = function () {
                dn(r);
              },
              o = function () {
                clearTimeout(r.next), (r.next = setTimeout(i));
              };
            "undefined" != typeof window &&
              (window.addEventListener("mouseup", o),
              window.addEventListener("keyup", o),
              window.addEventListener("mousedown", o),
              window.addEventListener("keydown", o),
              window.addEventListener("change", o));
          }
          return (
            (r.patches = []),
            (r.object = e),
            (r.unobserve = function () {
              dn(r),
                clearTimeout(r.next),
                (function (e, t) {
                  e.observers.delete(t.callback);
                })(n, r),
                "undefined" != typeof window &&
                  (window.removeEventListener("mouseup", o),
                  window.removeEventListener("keyup", o),
                  window.removeEventListener("mousedown", o),
                  window.removeEventListener("keydown", o),
                  window.removeEventListener("change", o));
            }),
            n.observers.set(t, new hn(t, r)),
            r
          );
        }
        function dn(e, t) {
          void 0 === t && (t = !1);
          var r = un.get(e.object);
          yn(r.value, e.object, e.patches, "", t),
            e.patches.length && sn(r.value, e.patches);
          var n = e.patches;
          return (
            n.length > 0 && ((e.patches = []), e.callback && e.callback(n)), n
          );
        }
        function yn(e, t, r, n, s) {
          if (t !== e) {
            "function" == typeof t.toJSON && (t = t.toJSON());
            for (
              var i = zr(t), o = zr(e), a = !1, c = o.length - 1;
              c >= 0;
              c--
            ) {
              var l = e[(p = o[c])];
              if (
                !Vr(t, p) ||
                (void 0 === t[p] && void 0 !== l && !1 === Array.isArray(t))
              )
                Array.isArray(e) === Array.isArray(t)
                  ? (s &&
                      r.push({
                        op: "test",
                        path: n + "/" + Gr(p),
                        value: Hr(l),
                      }),
                    r.push({ op: "remove", path: n + "/" + Gr(p) }),
                    (a = !0))
                  : (s && r.push({ op: "test", path: n, value: e }),
                    r.push({ op: "replace", path: n, value: t }),
                    !0);
              else {
                var u = t[p];
                "object" == typeof l &&
                null != l &&
                "object" == typeof u &&
                null != u &&
                Array.isArray(l) === Array.isArray(u)
                  ? yn(l, u, r, n + "/" + Gr(p), s)
                  : l !== u &&
                    (!0,
                    s &&
                      r.push({
                        op: "test",
                        path: n + "/" + Gr(p),
                        value: Hr(l),
                      }),
                    r.push({
                      op: "replace",
                      path: n + "/" + Gr(p),
                      value: Hr(u),
                    }));
              }
            }
            if (a || i.length != o.length)
              for (c = 0; c < i.length; c++) {
                var p;
                Vr(e, (p = i[c])) ||
                  void 0 === t[p] ||
                  r.push({ op: "add", path: n + "/" + Gr(p), value: Hr(t[p]) });
              }
          }
        }
        function gn(e, t, r) {
          void 0 === r && (r = !1);
          var n = [];
          return yn(e, t, n, "", r), n;
        }
        Object.assign({}, e, t, {
          JsonPatchError: Xr,
          deepClone: Hr,
          escapePathComponent: Gr,
          unescapePathComponent: Wr,
        });
        var vn = r(4744),
          bn = r.n(vn);
        const xn = {
          add: function (e, t) {
            return { op: "add", path: e, value: t };
          },
          replace: En,
          remove: function (e) {
            return { op: "remove", path: e };
          },
          merge: function (e, t) {
            return { type: "mutation", op: "merge", path: e, value: t };
          },
          mergeDeep: function (e, t) {
            return { type: "mutation", op: "mergeDeep", path: e, value: t };
          },
          context: function (e, t) {
            return { type: "context", path: e, value: t };
          },
          getIn: function (e, t) {
            return t.reduce((e, t) => (void 0 !== t && e ? e[t] : e), e);
          },
          applyPatch: function (e, t, r) {
            if (
              ((r = r || {}),
              "merge" === (t = { ...t, path: t.path && wn(t.path) }).op)
            ) {
              const r = Rn(e, t.path);
              Object.assign(r, t.value), sn(e, [En(t.path, r)]);
            } else if ("mergeDeep" === t.op) {
              const r = Rn(e, t.path),
                n = bn()(r, t.value);
              e = sn(e, [En(t.path, n)]).newDocument;
            } else if ("add" === t.op && "" === t.path && _n(t.value)) {
              sn(
                e,
                Object.keys(t.value).reduce(
                  (e, r) => (
                    e.push({ op: "add", path: `/${wn(r)}`, value: t.value[r] }),
                    e
                  ),
                  []
                )
              );
            } else if ("replace" === t.op && "" === t.path) {
              let { value: n } = t;
              r.allowMetaPatches &&
                t.meta &&
                Cn(t) &&
                (Array.isArray(t.value) || _n(t.value)) &&
                (n = { ...n, ...t.meta }),
                (e = n);
            } else if (
              (sn(e, [t]),
              r.allowMetaPatches &&
                t.meta &&
                Cn(t) &&
                (Array.isArray(t.value) || _n(t.value)))
            ) {
              const r = { ...Rn(e, t.path), ...t.meta };
              sn(e, [En(t.path, r)]);
            }
            return e;
          },
          parentPathMatch: function (e, t) {
            if (!Array.isArray(t)) return !1;
            for (let r = 0, n = t.length; r < n; r += 1)
              if (t[r] !== e[r]) return !1;
            return !0;
          },
          flatten: An,
          fullyNormalizeArray: function (e) {
            return $n(An(Pn(e)));
          },
          normalizeArray: Pn,
          isPromise: function (e) {
            return _n(e) && kn(e.then);
          },
          forEachNew: function (e, t) {
            try {
              return jn(e, Sn, t);
            } catch (e) {
              return e;
            }
          },
          forEachNewPrimitive: function (e, t) {
            try {
              return jn(e, On, t);
            } catch (e) {
              return e;
            }
          },
          isJsonPatch: In,
          isContextPatch: function (e) {
            return Mn(e) && "context" === e.type;
          },
          isPatch: Mn,
          isMutation: Tn,
          isAdditiveMutation: Cn,
          isGenerator: function (e) {
            return (
              "[object GeneratorFunction]" === Object.prototype.toString.call(e)
            );
          },
          isFunction: kn,
          isObject: _n,
          isError: function (e) {
            return e instanceof Error;
          },
        };
        function wn(e) {
          return Array.isArray(e)
            ? e.length < 1
              ? ""
              : `/${e
                  .map((e) => (e + "").replace(/~/g, "~0").replace(/\//g, "~1"))
                  .join("/")}`
            : e;
        }
        function En(e, t, r) {
          return { op: "replace", path: e, value: t, meta: r };
        }
        function jn(e, t, r) {
          return $n(An(e.filter(Cn).map((e) => t(e.value, r, e.path)) || []));
        }
        function On(e, t, r) {
          return (
            (r = r || []),
            Array.isArray(e)
              ? e.map((e, n) => On(e, t, r.concat(n)))
              : _n(e)
              ? Object.keys(e).map((n) => On(e[n], t, r.concat(n)))
              : t(e, r[r.length - 1], r)
          );
        }
        function Sn(e, t, r) {
          let n = [];
          if ((r = r || []).length > 0) {
            const s = t(e, r[r.length - 1], r);
            s && (n = n.concat(s));
          }
          if (Array.isArray(e)) {
            const s = e.map((e, n) => Sn(e, t, r.concat(n)));
            s && (n = n.concat(s));
          } else if (_n(e)) {
            const s = Object.keys(e).map((n) => Sn(e[n], t, r.concat(n)));
            s && (n = n.concat(s));
          }
          return (n = An(n)), n;
        }
        function Pn(e) {
          return Array.isArray(e) ? e : [e];
        }
        function An(e) {
          return [].concat(...e.map((e) => (Array.isArray(e) ? An(e) : e)));
        }
        function $n(e) {
          return e.filter((e) => void 0 !== e);
        }
        function _n(e) {
          return e && "object" == typeof e;
        }
        function kn(e) {
          return e && "function" == typeof e;
        }
        function In(e) {
          if (Mn(e)) {
            const { op: t } = e;
            return "add" === t || "remove" === t || "replace" === t;
          }
          return !1;
        }
        function Tn(e) {
          return In(e) || (Mn(e) && "mutation" === e.type);
        }
        function Cn(e) {
          return (
            Tn(e) &&
            ("add" === e.op ||
              "replace" === e.op ||
              "merge" === e.op ||
              "mergeDeep" === e.op)
          );
        }
        function Mn(e) {
          return e && "object" == typeof e;
        }
        function Rn(e, t) {
          try {
            return rn(e, t);
          } catch (e) {
            return console.error(e), {};
          }
        }
        var Fn = r(5606);
        function Dn(e) {
          return (
            null != e &&
            "object" == typeof e &&
            !0 === e["@@functional/placeholder"]
          );
        }
        function Nn(e) {
          return function t(r) {
            return 0 === arguments.length || Dn(r)
              ? t
              : e.apply(this, arguments);
          };
        }
        function qn(e) {
          return function t(r, n) {
            switch (arguments.length) {
              case 0:
                return t;
              case 1:
                return Dn(r)
                  ? t
                  : Nn(function (t) {
                      return e(r, t);
                    });
              default:
                return Dn(r) && Dn(n)
                  ? t
                  : Dn(r)
                  ? Nn(function (t) {
                      return e(t, n);
                    })
                  : Dn(n)
                  ? Nn(function (t) {
                      return e(r, t);
                    })
                  : e(r, n);
            }
          };
        }
        function Ln(e) {
          return function t(r, n, s) {
            switch (arguments.length) {
              case 0:
                return t;
              case 1:
                return Dn(r)
                  ? t
                  : qn(function (t, n) {
                      return e(r, t, n);
                    });
              case 2:
                return Dn(r) && Dn(n)
                  ? t
                  : Dn(r)
                  ? qn(function (t, r) {
                      return e(t, n, r);
                    })
                  : Dn(n)
                  ? qn(function (t, n) {
                      return e(r, t, n);
                    })
                  : Nn(function (t) {
                      return e(r, n, t);
                    });
              default:
                return Dn(r) && Dn(n) && Dn(s)
                  ? t
                  : Dn(r) && Dn(n)
                  ? qn(function (t, r) {
                      return e(t, r, s);
                    })
                  : Dn(r) && Dn(s)
                  ? qn(function (t, r) {
                      return e(t, n, r);
                    })
                  : Dn(n) && Dn(s)
                  ? qn(function (t, n) {
                      return e(r, t, n);
                    })
                  : Dn(r)
                  ? Nn(function (t) {
                      return e(t, n, s);
                    })
                  : Dn(n)
                  ? Nn(function (t) {
                      return e(r, t, s);
                    })
                  : Dn(s)
                  ? Nn(function (t) {
                      return e(r, n, t);
                    })
                  : e(r, n, s);
            }
          };
        }
        const Bn =
          Number.isInteger ||
          function (e) {
            return e << 0 === e;
          };
        function Un(e) {
          return "[object String]" === Object.prototype.toString.call(e);
        }
        const Vn = qn(function (e, t) {
          var r = e < 0 ? t.length + e : e;
          return Un(t) ? t.charAt(r) : t[r];
        });
        const zn = qn(function (e, t) {
          return e.map(function (e) {
            for (var r, n = t, s = 0; s < e.length; ) {
              if (null == n) return;
              (r = e[s]), (n = Bn(r) ? Vn(r, n) : n[r]), (s += 1);
            }
            return n;
          });
        });
        const Hn = qn(function (e, t) {
          return zn([e], t)[0];
        });
        const Jn = Ln(function (e, t, r) {
          return e(Hn(t, r));
        });
        function Gn(e) {
          return new RegExp(
            e.source,
            e.flags
              ? e.flags
              : (e.global ? "g" : "") +
                (e.ignoreCase ? "i" : "") +
                (e.multiline ? "m" : "") +
                (e.sticky ? "y" : "") +
                (e.unicode ? "u" : "") +
                (e.dotAll ? "s" : "")
          );
        }
        function Wn(e) {
          for (var t, r = []; !(t = e.next()).done; ) r.push(t.value);
          return r;
        }
        function Kn(e, t, r) {
          for (var n = 0, s = r.length; n < s; ) {
            if (e(t, r[n])) return !0;
            n += 1;
          }
          return !1;
        }
        function Yn(e, t) {
          return Object.prototype.hasOwnProperty.call(t, e);
        }
        const Xn =
          "function" == typeof Object.is
            ? Object.is
            : function (e, t) {
                return e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t;
              };
        var Qn = Object.prototype.toString;
        const Zn = (function () {
          return "[object Arguments]" === Qn.call(arguments)
            ? function (e) {
                return "[object Arguments]" === Qn.call(e);
              }
            : function (e) {
                return Yn("callee", e);
              };
        })();
        var es = !{ toString: null }.propertyIsEnumerable("toString"),
          ts = [
            "constructor",
            "valueOf",
            "isPrototypeOf",
            "toString",
            "propertyIsEnumerable",
            "hasOwnProperty",
            "toLocaleString",
          ],
          rs = (function () {
            return arguments.propertyIsEnumerable("length");
          })(),
          ns = function (e, t) {
            for (var r = 0; r < e.length; ) {
              if (e[r] === t) return !0;
              r += 1;
            }
            return !1;
          },
          ss =
            "function" != typeof Object.keys || rs
              ? Nn(function (e) {
                  if (Object(e) !== e) return [];
                  var t,
                    r,
                    n = [],
                    s = rs && Zn(e);
                  for (t in e)
                    !Yn(t, e) || (s && "length" === t) || (n[n.length] = t);
                  if (es)
                    for (r = ts.length - 1; r >= 0; )
                      Yn((t = ts[r]), e) && !ns(n, t) && (n[n.length] = t),
                        (r -= 1);
                  return n;
                })
              : Nn(function (e) {
                  return Object(e) !== e ? [] : Object.keys(e);
                });
        const is = ss;
        const os = Nn(function (e) {
          return null === e
            ? "Null"
            : void 0 === e
            ? "Undefined"
            : Object.prototype.toString.call(e).slice(8, -1);
        });
        function as(e, t, r, n) {
          var s = Wn(e);
          function i(e, t) {
            return cs(e, t, r.slice(), n.slice());
          }
          return !Kn(
            function (e, t) {
              return !Kn(i, t, e);
            },
            Wn(t),
            s
          );
        }
        function cs(e, t, r, n) {
          if (Xn(e, t)) return !0;
          var s,
            i,
            o = os(e);
          if (o !== os(t)) return !1;
          if (
            "function" == typeof e["fantasy-land/equals"] ||
            "function" == typeof t["fantasy-land/equals"]
          )
            return (
              "function" == typeof e["fantasy-land/equals"] &&
              e["fantasy-land/equals"](t) &&
              "function" == typeof t["fantasy-land/equals"] &&
              t["fantasy-land/equals"](e)
            );
          if ("function" == typeof e.equals || "function" == typeof t.equals)
            return (
              "function" == typeof e.equals &&
              e.equals(t) &&
              "function" == typeof t.equals &&
              t.equals(e)
            );
          switch (o) {
            case "Arguments":
            case "Array":
            case "Object":
              if (
                "function" == typeof e.constructor &&
                "Promise" ===
                  ((s = e.constructor),
                  null == (i = String(s).match(/^function (\w*)/)) ? "" : i[1])
              )
                return e === t;
              break;
            case "Boolean":
            case "Number":
            case "String":
              if (typeof e != typeof t || !Xn(e.valueOf(), t.valueOf()))
                return !1;
              break;
            case "Date":
              if (!Xn(e.valueOf(), t.valueOf())) return !1;
              break;
            case "Error":
              return e.name === t.name && e.message === t.message;
            case "RegExp":
              if (
                e.source !== t.source ||
                e.global !== t.global ||
                e.ignoreCase !== t.ignoreCase ||
                e.multiline !== t.multiline ||
                e.sticky !== t.sticky ||
                e.unicode !== t.unicode
              )
                return !1;
          }
          for (var a = r.length - 1; a >= 0; ) {
            if (r[a] === e) return n[a] === t;
            a -= 1;
          }
          switch (o) {
            case "Map":
              return (
                e.size === t.size &&
                as(e.entries(), t.entries(), r.concat([e]), n.concat([t]))
              );
            case "Set":
              return (
                e.size === t.size &&
                as(e.values(), t.values(), r.concat([e]), n.concat([t]))
              );
            case "Arguments":
            case "Array":
            case "Object":
            case "Boolean":
            case "Number":
            case "String":
            case "Date":
            case "Error":
            case "RegExp":
            case "Int8Array":
            case "Uint8Array":
            case "Uint8ClampedArray":
            case "Int16Array":
            case "Uint16Array":
            case "Int32Array":
            case "Uint32Array":
            case "Float32Array":
            case "Float64Array":
            case "ArrayBuffer":
              break;
            default:
              return !1;
          }
          var c = is(e);
          if (c.length !== is(t).length) return !1;
          var l = r.concat([e]),
            u = n.concat([t]);
          for (a = c.length - 1; a >= 0; ) {
            var p = c[a];
            if (!Yn(p, t) || !cs(t[p], e[p], l, u)) return !1;
            a -= 1;
          }
          return !0;
        }
        const ls = qn(function (e, t) {
          return cs(e, t, [], []);
        });
        function us(e, t) {
          return (
            (function (e, t, r) {
              var n, s;
              if ("function" == typeof e.indexOf)
                switch (typeof t) {
                  case "number":
                    if (0 === t) {
                      for (n = 1 / t; r < e.length; ) {
                        if (0 === (s = e[r]) && 1 / s === n) return r;
                        r += 1;
                      }
                      return -1;
                    }
                    if (t != t) {
                      for (; r < e.length; ) {
                        if ("number" == typeof (s = e[r]) && s != s) return r;
                        r += 1;
                      }
                      return -1;
                    }
                    return e.indexOf(t, r);
                  case "string":
                  case "boolean":
                  case "function":
                  case "undefined":
                    return e.indexOf(t, r);
                  case "object":
                    if (null === t) return e.indexOf(t, r);
                }
              for (; r < e.length; ) {
                if (ls(e[r], t)) return r;
                r += 1;
              }
              return -1;
            })(t, e, 0) >= 0
          );
        }
        function ps(e, t) {
          for (var r = 0, n = t.length, s = Array(n); r < n; )
            (s[r] = e(t[r])), (r += 1);
          return s;
        }
        function hs(e) {
          return (
            '"' +
            e
              .replace(/\\/g, "\\\\")
              .replace(/[\b]/g, "\\b")
              .replace(/\f/g, "\\f")
              .replace(/\n/g, "\\n")
              .replace(/\r/g, "\\r")
              .replace(/\t/g, "\\t")
              .replace(/\v/g, "\\v")
              .replace(/\0/g, "\\0")
              .replace(/"/g, '\\"') +
            '"'
          );
        }
        var fs = function (e) {
          return (e < 10 ? "0" : "") + e;
        };
        const ms =
          "function" == typeof Date.prototype.toISOString
            ? function (e) {
                return e.toISOString();
              }
            : function (e) {
                return (
                  e.getUTCFullYear() +
                  "-" +
                  fs(e.getUTCMonth() + 1) +
                  "-" +
                  fs(e.getUTCDate()) +
                  "T" +
                  fs(e.getUTCHours()) +
                  ":" +
                  fs(e.getUTCMinutes()) +
                  ":" +
                  fs(e.getUTCSeconds()) +
                  "." +
                  (e.getUTCMilliseconds() / 1e3).toFixed(3).slice(2, 5) +
                  "Z"
                );
              };
        function ds(e) {
          return function () {
            return !e.apply(this, arguments);
          };
        }
        function ys(e, t, r) {
          for (var n = 0, s = r.length; n < s; ) (t = e(t, r[n])), (n += 1);
          return t;
        }
        const gs =
          Array.isArray ||
          function (e) {
            return (
              null != e &&
              e.length >= 0 &&
              "[object Array]" === Object.prototype.toString.call(e)
            );
          };
        function vs(e, t, r) {
          return function () {
            if (0 === arguments.length) return r();
            var n = arguments[arguments.length - 1];
            if (!gs(n)) {
              for (var s = 0; s < e.length; ) {
                if ("function" == typeof n[e[s]])
                  return n[e[s]].apply(
                    n,
                    Array.prototype.slice.call(arguments, 0, -1)
                  );
                s += 1;
              }
              if (
                (function (e) {
                  return (
                    null != e && "function" == typeof e["@@transducer/step"]
                  );
                })(n)
              )
                return t.apply(
                  null,
                  Array.prototype.slice.call(arguments, 0, -1)
                )(n);
            }
            return r.apply(this, arguments);
          };
        }
        function bs(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
        const xs = function () {
            return this.xf["@@transducer/init"]();
          },
          ws = function (e) {
            return this.xf["@@transducer/result"](e);
          };
        var Es = (function () {
          function e(e, t) {
            (this.xf = t), (this.f = e);
          }
          return (
            (e.prototype["@@transducer/init"] = xs),
            (e.prototype["@@transducer/result"] = ws),
            (e.prototype["@@transducer/step"] = function (e, t) {
              return this.f(t) ? this.xf["@@transducer/step"](e, t) : e;
            }),
            e
          );
        })();
        function js(e) {
          return function (t) {
            return new Es(e, t);
          };
        }
        const Os = qn(
          vs(["fantasy-land/filter", "filter"], js, function (e, t) {
            return bs(t)
              ? ys(
                  function (r, n) {
                    return e(t[n]) && (r[n] = t[n]), r;
                  },
                  {},
                  is(t)
                )
              : (function (e, t) {
                  for (var r = 0, n = t.length, s = []; r < n; )
                    e(t[r]) && (s[s.length] = t[r]), (r += 1);
                  return s;
                })(e, t);
          })
        );
        const Ss = qn(function (e, t) {
          return Os(ds(e), t);
        });
        function Ps(e, t) {
          var r = function (r) {
              var n = t.concat([e]);
              return us(r, n) ? "<Circular>" : Ps(r, n);
            },
            n = function (e, t) {
              return ps(function (t) {
                return hs(t) + ": " + r(e[t]);
              }, t.slice().sort());
            };
          switch (Object.prototype.toString.call(e)) {
            case "[object Arguments]":
              return (
                "(function() { return arguments; }(" +
                ps(r, e).join(", ") +
                "))"
              );
            case "[object Array]":
              return (
                "[" +
                ps(r, e)
                  .concat(
                    n(
                      e,
                      Ss(function (e) {
                        return /^\d+$/.test(e);
                      }, is(e))
                    )
                  )
                  .join(", ") +
                "]"
              );
            case "[object Boolean]":
              return "object" == typeof e
                ? "new Boolean(" + r(e.valueOf()) + ")"
                : e.toString();
            case "[object Date]":
              return (
                "new Date(" + (isNaN(e.valueOf()) ? r(NaN) : hs(ms(e))) + ")"
              );
            case "[object Map]":
              return "new Map(" + r(Array.from(e)) + ")";
            case "[object Null]":
              return "null";
            case "[object Number]":
              return "object" == typeof e
                ? "new Number(" + r(e.valueOf()) + ")"
                : 1 / e == -1 / 0
                ? "-0"
                : e.toString(10);
            case "[object Set]":
              return "new Set(" + r(Array.from(e).sort()) + ")";
            case "[object String]":
              return "object" == typeof e
                ? "new String(" + r(e.valueOf()) + ")"
                : hs(e);
            case "[object Undefined]":
              return "undefined";
            default:
              if ("function" == typeof e.toString) {
                var s = e.toString();
                if ("[object Object]" !== s) return s;
              }
              return "{" + n(e, is(e)).join(", ") + "}";
          }
        }
        const As = Nn(function (e) {
          return Ps(e, []);
        });
        var $s = qn(function (e, t) {
          if (
            ((r = e), "[object RegExp]" !== Object.prototype.toString.call(r))
          )
            throw new TypeError(
              "‘test’ requires a value of type RegExp as its first argument; received " +
                As(e)
            );
          var r;
          return Gn(e).test(t);
        });
        const _s = $s;
        function ks(e, t) {
          switch (e) {
            case 0:
              return function () {
                return t.apply(this, arguments);
              };
            case 1:
              return function (e) {
                return t.apply(this, arguments);
              };
            case 2:
              return function (e, r) {
                return t.apply(this, arguments);
              };
            case 3:
              return function (e, r, n) {
                return t.apply(this, arguments);
              };
            case 4:
              return function (e, r, n, s) {
                return t.apply(this, arguments);
              };
            case 5:
              return function (e, r, n, s, i) {
                return t.apply(this, arguments);
              };
            case 6:
              return function (e, r, n, s, i, o) {
                return t.apply(this, arguments);
              };
            case 7:
              return function (e, r, n, s, i, o, a) {
                return t.apply(this, arguments);
              };
            case 8:
              return function (e, r, n, s, i, o, a, c) {
                return t.apply(this, arguments);
              };
            case 9:
              return function (e, r, n, s, i, o, a, c, l) {
                return t.apply(this, arguments);
              };
            case 10:
              return function (e, r, n, s, i, o, a, c, l, u) {
                return t.apply(this, arguments);
              };
            default:
              throw new Error(
                "First argument to _arity must be a non-negative integer no greater than ten"
              );
          }
        }
        function Is(e, t) {
          return function () {
            return t.call(this, e.apply(this, arguments));
          };
        }
        const Ts = Nn(function (e) {
          return (
            !!gs(e) ||
            (!!e &&
              "object" == typeof e &&
              !Un(e) &&
              (0 === e.length ||
                (e.length > 0 &&
                  e.hasOwnProperty(0) &&
                  e.hasOwnProperty(e.length - 1))))
          );
        });
        var Cs = "undefined" != typeof Symbol ? Symbol.iterator : "@@iterator";
        function Ms(e, t, r) {
          return function (n, s, i) {
            if (Ts(i)) return e(n, s, i);
            if (null == i) return s;
            if ("function" == typeof i["fantasy-land/reduce"])
              return t(n, s, i, "fantasy-land/reduce");
            if (null != i[Cs]) return r(n, s, i[Cs]());
            if ("function" == typeof i.next) return r(n, s, i);
            if ("function" == typeof i.reduce) return t(n, s, i, "reduce");
            throw new TypeError("reduce: list must be array or iterable");
          };
        }
        function Rs(e, t, r) {
          for (var n = 0, s = r.length; n < s; ) {
            if (
              (t = e["@@transducer/step"](t, r[n])) &&
              t["@@transducer/reduced"]
            ) {
              t = t["@@transducer/value"];
              break;
            }
            n += 1;
          }
          return e["@@transducer/result"](t);
        }
        const Fs = qn(function (e, t) {
          return ks(e.length, function () {
            return e.apply(t, arguments);
          });
        });
        function Ds(e, t, r) {
          for (var n = r.next(); !n.done; ) {
            if (
              (t = e["@@transducer/step"](t, n.value)) &&
              t["@@transducer/reduced"]
            ) {
              t = t["@@transducer/value"];
              break;
            }
            n = r.next();
          }
          return e["@@transducer/result"](t);
        }
        function Ns(e, t, r, n) {
          return e["@@transducer/result"](
            r[n](Fs(e["@@transducer/step"], e), t)
          );
        }
        const qs = Ms(Rs, Ns, Ds);
        var Ls = (function () {
          function e(e) {
            this.f = e;
          }
          return (
            (e.prototype["@@transducer/init"] = function () {
              throw new Error("init not implemented on XWrap");
            }),
            (e.prototype["@@transducer/result"] = function (e) {
              return e;
            }),
            (e.prototype["@@transducer/step"] = function (e, t) {
              return this.f(e, t);
            }),
            e
          );
        })();
        function Bs(e) {
          return new Ls(e);
        }
        const Us = Ln(function (e, t, r) {
          return qs("function" == typeof e ? Bs(e) : e, t, r);
        });
        function Vs(e, t) {
          return function () {
            var r = arguments.length;
            if (0 === r) return t();
            var n = arguments[r - 1];
            return gs(n) || "function" != typeof n[e]
              ? t.apply(this, arguments)
              : n[e].apply(n, Array.prototype.slice.call(arguments, 0, r - 1));
          };
        }
        const zs = Ln(
          Vs("slice", function (e, t, r) {
            return Array.prototype.slice.call(r, e, t);
          })
        );
        const Hs = Nn(Vs("tail", zs(1, 1 / 0)));
        function Js() {
          if (0 === arguments.length)
            throw new Error("pipe requires at least one argument");
          return ks(arguments[0].length, Us(Is, arguments[0], Hs(arguments)));
        }
        const Gs = qn(function (e, t) {
          return null == t || t != t ? e : t;
        });
        const Ws = qn(function (e, t) {
          if (null != t) return Bn(e) ? Vn(e, t) : t[e];
        });
        const Ks = Ln(function (e, t, r) {
          return Gs(e, Ws(t, r));
        });
        const Ys = Vn(-1);
        function Xs(e, t, r) {
          return function () {
            for (
              var n = [], s = 0, i = e, o = 0, a = !1;
              o < t.length || s < arguments.length;

            ) {
              var c;
              o < t.length && (!Dn(t[o]) || s >= arguments.length)
                ? (c = t[o])
                : ((c = arguments[s]), (s += 1)),
                (n[o] = c),
                Dn(c) ? (a = !0) : (i -= 1),
                (o += 1);
            }
            return !a && i <= 0
              ? r.apply(this, n)
              : ks(Math.max(0, i), Xs(e, n, r));
          };
        }
        const Qs = qn(function (e, t) {
          return 1 === e ? Nn(t) : ks(e, Xs(e, [], t));
        });
        const Zs = Nn(function (e) {
          return Qs(e.length, e);
        });
        function ei(e) {
          var t = Object.prototype.toString.call(e);
          return (
            "[object Function]" === t ||
            "[object AsyncFunction]" === t ||
            "[object GeneratorFunction]" === t ||
            "[object AsyncGeneratorFunction]" === t
          );
        }
        const ti = qn(function (e, t) {
          return Qs(e + 1, function () {
            var r = arguments[e];
            if (null != r && ei(r[t]))
              return r[t].apply(r, Array.prototype.slice.call(arguments, 0, e));
            throw new TypeError(
              As(r) + ' does not have a method named "' + t + '"'
            );
          });
        });
        const ri = ti(1, "split");
        function ni(e, t) {
          for (var r = t.length - 1; r >= 0 && e(t[r]); ) r -= 1;
          return zs(0, r + 1, t);
        }
        var si = (function () {
          function e(e, t) {
            (this.f = e), (this.retained = []), (this.xf = t);
          }
          return (
            (e.prototype["@@transducer/init"] = xs),
            (e.prototype["@@transducer/result"] = function (e) {
              return (this.retained = null), this.xf["@@transducer/result"](e);
            }),
            (e.prototype["@@transducer/step"] = function (e, t) {
              return this.f(t) ? this.retain(e, t) : this.flush(e, t);
            }),
            (e.prototype.flush = function (e, t) {
              return (
                (e = qs(this.xf, e, this.retained)),
                (this.retained = []),
                this.xf["@@transducer/step"](e, t)
              );
            }),
            (e.prototype.retain = function (e, t) {
              return this.retained.push(t), e;
            }),
            e
          );
        })();
        function ii(e) {
          return function (t) {
            return new si(e, t);
          };
        }
        const oi = qn(vs([], ii, ni));
        const ai = ti(1, "join");
        const ci = Nn(function (e) {
          return Qs(e.length, function (t, r) {
            var n = Array.prototype.slice.call(arguments, 0);
            return (n[0] = r), (n[1] = t), e.apply(this, n);
          });
        })(qn(us));
        const li = Zs(function (e, t) {
          return Js(ri(""), oi(ci(e)), ai(""))(t);
        });
        function ui(e, t, r) {
          for (var n = r.next(); !n.done; ) (t = e(t, n.value)), (n = r.next());
          return t;
        }
        function pi(e, t, r, n) {
          return r[n](e, t);
        }
        const hi = Ms(ys, pi, ui);
        var fi = (function () {
          function e(e, t) {
            (this.xf = t), (this.f = e);
          }
          return (
            (e.prototype["@@transducer/init"] = xs),
            (e.prototype["@@transducer/result"] = ws),
            (e.prototype["@@transducer/step"] = function (e, t) {
              return this.xf["@@transducer/step"](e, this.f(t));
            }),
            e
          );
        })();
        const mi = qn(
          vs(
            ["fantasy-land/map", "map"],
            function (e) {
              return function (t) {
                return new fi(e, t);
              };
            },
            function (e, t) {
              switch (Object.prototype.toString.call(t)) {
                case "[object Function]":
                  return Qs(t.length, function () {
                    return e.call(this, t.apply(this, arguments));
                  });
                case "[object Object]":
                  return ys(
                    function (r, n) {
                      return (r[n] = e(t[n])), r;
                    },
                    {},
                    is(t)
                  );
                default:
                  return ps(e, t);
              }
            }
          )
        );
        const di = qn(function (e, t) {
          return "function" == typeof t["fantasy-land/ap"]
            ? t["fantasy-land/ap"](e)
            : "function" == typeof e.ap
            ? e.ap(t)
            : "function" == typeof e
            ? function (r) {
                return e(r)(t(r));
              }
            : hi(
                function (e, r) {
                  return (function (e, t) {
                    var r;
                    t = t || [];
                    var n = (e = e || []).length,
                      s = t.length,
                      i = [];
                    for (r = 0; r < n; ) (i[i.length] = e[r]), (r += 1);
                    for (r = 0; r < s; ) (i[i.length] = t[r]), (r += 1);
                    return i;
                  })(e, mi(r, t));
                },
                [],
                e
              );
        });
        const yi = qn(function (e, t) {
          var r = Qs(e, t);
          return Qs(e, function () {
            return ys(
              di,
              mi(r, arguments[0]),
              Array.prototype.slice.call(arguments, 1)
            );
          });
        });
        const gi = Nn(function (e) {
          return yi(e.length, e);
        });
        const vi = gi(
          Nn(function (e) {
            return !e;
          })
        );
        const bi = Nn(function (e) {
          return function () {
            return e;
          };
        });
        const xi = bi(void 0);
        const wi = ls(xi());
        const Ei = vi(wi);
        const ji = qn(function (e, t) {
          if (e === t) return t;
          function r(e, t) {
            if (e > t != t > e) return t > e ? t : e;
          }
          var n = r(e, t);
          if (void 0 !== n) return n;
          var s = r(typeof e, typeof t);
          if (void 0 !== s) return s === typeof e ? e : t;
          var i = As(e),
            o = r(i, As(t));
          return void 0 !== o && o === i ? e : t;
        });
        const Oi = qn(function (e, t) {
          return mi(Ws(e), t);
        });
        const Si = Nn(function (e) {
          return Qs(Us(ji, 0, Oi("length", e)), function () {
            for (var t = 0, r = e.length; t < r; ) {
              if (e[t].apply(this, arguments)) return !0;
              t += 1;
            }
            return !1;
          });
        });
        var Pi = function (e, t) {
          switch (arguments.length) {
            case 0:
              return Pi;
            case 1:
              return function t(r) {
                return 0 === arguments.length ? t : Xn(e, r);
              };
            default:
              return Xn(e, t);
          }
        };
        const Ai = Pi;
        const $i = Qs(1, Js(os, Ai("GeneratorFunction")));
        const _i = Qs(1, Js(os, Ai("AsyncFunction")));
        const ki = Si([Js(os, Ai("Function")), $i, _i]);
        var Ii = Ln(function (e, t, r) {
          return r.replace(e, t);
        });
        const Ti = Ii;
        const Ci = Qs(1, Js(os, Ai("RegExp")));
        const Mi = Ln(function (e, t, r) {
          return e(r) ? t(r) : r;
        });
        const Ri = Qs(1, Js(os, Ai("String")));
        const Fi = Mi(Ri, Ti(/[.*+?^${}()|[\]\\-]/g, "\\$&"));
        var Di = function (e, t) {
          if ("string" != typeof e && !(e instanceof String))
            throw TypeError("`".concat(t, "` must be a string"));
        };
        const Ni = function (e, t, r) {
          !(function (e, t, r) {
            if (null == r || null == e || null == t)
              throw TypeError("Input values must not be `null` or `undefined`");
          })(e, t, r),
            Di(r, "str"),
            Di(t, "replaceValue"),
            (function (e) {
              if (
                !(
                  "string" == typeof e ||
                  e instanceof String ||
                  e instanceof RegExp
                )
              )
                throw TypeError("`searchValue` must be a string or an regexp");
            })(e);
          var n = new RegExp(Ci(e) ? e : Fi(e), "g");
          return Ti(n, t, r);
        };
        var qi = Qs(3, Ni),
          Li = ti(2, "replaceAll");
        const Bi = ki(String.prototype.replaceAll) ? Li : qi,
          Ui = () => Jn(_s(/^win/), ["platform"], Fn),
          Vi = (e) => {
            try {
              const t = new URL(e);
              return li(":", t.protocol);
            } catch {
              return;
            }
          },
          zi =
            (Js(Vi, Ei),
            (e) => {
              const t = e.lastIndexOf(".");
              return t >= 0 ? e.substring(t).toLowerCase() : "";
            }),
          Hi = (e) => {
            if (Fn.browser) return !1;
            const t = Vi(e);
            return wi(t) || "file" === t || /^[a-zA-Z]$/.test(t);
          },
          Ji = (e) => {
            const t = Vi(e);
            return "http" === t || "https" === t;
          },
          Gi = (e, t) => {
            const r = [
                /%23/g,
                "#",
                /%24/g,
                "$",
                /%26/g,
                "&",
                /%2C/g,
                ",",
                /%40/g,
                "@",
              ],
              n = Ks(!1, "keepFileProtocol", t),
              s = Ks(Ui, "isWindows", t);
            let i = decodeURI(e);
            for (let e = 0; e < r.length; e += 2) i = i.replace(r[e], r[e + 1]);
            let o = "file://" === i.substring(0, 7).toLowerCase();
            return (
              o &&
                ((i = "/" === i[7] ? i.substring(8) : i.substring(7)),
                s() && "/" === i[1] && (i = `${i[0]}:${i.substring(1)}`),
                n ? (i = `file:///${i}`) : ((o = !1), (i = s() ? i : `/${i}`))),
              s() &&
                !o &&
                ((i = Bi("/", "\\", i)),
                ":\\" === i.substring(1, 3) &&
                  (i = i[0].toUpperCase() + i.substring(1))),
              i
            );
          },
          Wi = (e) => {
            const t = e.indexOf("#");
            return -1 !== t ? e.substring(t) : "#";
          },
          Ki = (e) => {
            const t = e.indexOf("#");
            let r = e;
            return t >= 0 && (r = e.substring(0, t)), r;
          },
          Yi = () => {
            if (Fn.browser) return Ki(globalThis.location.href);
            const e = Fn.cwd(),
              t = Ys(e);
            return ["/", "\\"].includes(t) ? e : e + (Ui() ? "\\" : "/");
          },
          Xi = (e, t) => {
            const r = new URL(t, new URL(e, "resolve://"));
            if ("resolve:" === r.protocol) {
              const { pathname: e, search: t, hash: n } = r;
              return e + t + n;
            }
            return r.toString();
          },
          Qi = (e) => {
            if (Hi(e))
              return ((e) => {
                const t = [/\?/g, "%3F", /#/g, "%23"];
                let r = e;
                Ui() && (r = r.replace(/\\/g, "/")), (r = encodeURI(r));
                for (let e = 0; e < t.length; e += 2)
                  r = r.replace(t[e], t[e + 1]);
                return r;
              })(Gi(e));
            try {
              return new URL(e).toString();
            } catch {
              return encodeURI(decodeURI(e))
                .replace(/%5B/g, "[")
                .replace(/%5D/g, "]");
            }
          },
          Zi = (e) => (Hi(e) ? Gi(e) : decodeURI(e));
        function eo(e, t) {
          function r(...e) {
            Error.captureStackTrace
              ? Error.captureStackTrace(this, this.constructor)
              : (this.stack = new Error().stack),
              ([this.message] = e),
              t && t.apply(this, e);
          }
          return (
            (r.prototype = new Error()),
            (r.prototype.name = e),
            (r.prototype.constructor = r),
            r
          );
        }
        var to = r(6623),
          ro = r.n(to);
        const no = ["properties"],
          so = ["properties"],
          io = [
            "definitions",
            "parameters",
            "responses",
            "securityDefinitions",
            "components/schemas",
            "components/responses",
            "components/parameters",
            "components/securitySchemes",
          ],
          oo = ["schema/example", "items/example"];
        function ao(e) {
          const t = e[e.length - 1],
            r = e[e.length - 2],
            n = e.join("/");
          return (
            (no.indexOf(t) > -1 && -1 === so.indexOf(r)) ||
            io.indexOf(n) > -1 ||
            oo.some((e) => n.indexOf(e) > -1)
          );
        }
        function co(e, t) {
          const [r, n] = e.split("#"),
            s = t ?? "",
            i = r ?? "";
          let o;
          if (Ji(s)) o = Xi(s, i);
          else {
            const e = Xi(h, s),
              t = Xi(e, i).replace(h, "");
            o = i.startsWith("/") ? t : t.substring(1);
          }
          return n ? `${o}#${n}` : o;
        }
        const lo = /^([a-z]+:\/\/|\/\/)/i,
          uo = eo("JSONRefError", function (e, t, r) {
            (this.originalError = r), Object.assign(this, t || {});
          }),
          po = {},
          ho = new WeakMap(),
          fo = [
            (e) =>
              "paths" === e[0] && "responses" === e[3] && "examples" === e[5],
            (e) =>
              "paths" === e[0] &&
              "responses" === e[3] &&
              "content" === e[5] &&
              "example" === e[7],
            (e) =>
              "paths" === e[0] &&
              "responses" === e[3] &&
              "content" === e[5] &&
              "examples" === e[7] &&
              "value" === e[9],
            (e) =>
              "paths" === e[0] &&
              "requestBody" === e[3] &&
              "content" === e[4] &&
              "example" === e[6],
            (e) =>
              "paths" === e[0] &&
              "requestBody" === e[3] &&
              "content" === e[4] &&
              "examples" === e[6] &&
              "value" === e[8],
            (e) =>
              "paths" === e[0] && "parameters" === e[2] && "example" === e[4],
            (e) =>
              "paths" === e[0] && "parameters" === e[3] && "example" === e[5],
            (e) =>
              "paths" === e[0] &&
              "parameters" === e[2] &&
              "examples" === e[4] &&
              "value" === e[6],
            (e) =>
              "paths" === e[0] &&
              "parameters" === e[3] &&
              "examples" === e[5] &&
              "value" === e[7],
            (e) =>
              "paths" === e[0] &&
              "parameters" === e[2] &&
              "content" === e[4] &&
              "example" === e[6],
            (e) =>
              "paths" === e[0] &&
              "parameters" === e[2] &&
              "content" === e[4] &&
              "examples" === e[6] &&
              "value" === e[8],
            (e) =>
              "paths" === e[0] &&
              "parameters" === e[3] &&
              "content" === e[4] &&
              "example" === e[7],
            (e) =>
              "paths" === e[0] &&
              "parameters" === e[3] &&
              "content" === e[5] &&
              "examples" === e[7] &&
              "value" === e[9],
          ],
          mo = {
            key: "$ref",
            plugin: (e, t, r, n) => {
              const s = n.getInstance(),
                i = r.slice(0, -1);
              if (ao(i) || ((e) => fo.some((t) => t(e)))(i)) return;
              const { baseDoc: o } = n.getContext(r);
              if ("string" != typeof e)
                return new uo("$ref: must be a string (JSON-Ref)", {
                  $ref: e,
                  baseDoc: o,
                  fullPath: r,
                });
              const a = xo(e),
                c = a[0],
                l = a[1] || "";
              let u, p, h;
              try {
                u = o || c ? vo(c, o) : null;
              } catch (t) {
                return bo(t, { pointer: l, $ref: e, basePath: u, fullPath: r });
              }
              if (
                (function (e, t, r, n) {
                  let s = ho.get(n);
                  s || ((s = {}), ho.set(n, s));
                  const i = (function (e) {
                      if (0 === e.length) return "";
                      return `/${e.map(Po).join("/")}`;
                    })(r),
                    o = `${t || "<specmap-base>"}#${e}`,
                    a = i.replace(/allOf\/\d+\/?/g, ""),
                    c = n.contextTree.get([]).baseDoc;
                  if (t === c && $o(a, e)) return !0;
                  let l = "";
                  const u = r.some(
                    (e) => (
                      (l = `${l}/${Po(e)}`),
                      s[l] && s[l].some((e) => $o(e, o) || $o(o, e))
                    )
                  );
                  if (u) return !0;
                  return void (s[a] = (s[a] || []).concat(o));
                })(l, u, i, n) &&
                !s.useCircularStructures
              ) {
                const t = co(e, u);
                return e === t ? null : xn.replace(r, t);
              }
              if (
                (null == u
                  ? ((h = Oo(l)),
                    (p = n.get(h)),
                    void 0 === p &&
                      (p = new uo(`Could not resolve reference: ${e}`, {
                        pointer: l,
                        $ref: e,
                        baseDoc: o,
                        fullPath: r,
                      })))
                  : ((p = wo(u, l)),
                    (p =
                      null != p.__value
                        ? p.__value
                        : p.catch((t) => {
                            throw bo(t, {
                              pointer: l,
                              $ref: e,
                              baseDoc: o,
                              fullPath: r,
                            });
                          }))),
                p instanceof Error)
              )
                return [xn.remove(r), p];
              const f = co(e, u),
                m = xn.replace(i, p, { $$ref: f });
              if (u && u !== o) return [m, xn.context(i, { baseDoc: u })];
              try {
                if (
                  !(function (e, t) {
                    const r = [e];
                    return (
                      t.path.reduce((e, t) => (r.push(e[t]), e[t]), e),
                      n(t.value)
                    );
                    function n(e) {
                      return (
                        xn.isObject(e) &&
                        (r.indexOf(e) >= 0 ||
                          Object.keys(e).some((t) => n(e[t])))
                      );
                    }
                  })(n.state, m) ||
                  s.useCircularStructures
                )
                  return m;
              } catch (e) {
                return null;
              }
            },
          },
          yo = Object.assign(mo, {
            docCache: po,
            absoluteify: vo,
            clearCache: function (e) {
              void 0 !== e
                ? delete po[e]
                : Object.keys(po).forEach((e) => {
                    delete po[e];
                  });
            },
            JSONRefError: uo,
            wrapError: bo,
            getDoc: Eo,
            split: xo,
            extractFromDoc: wo,
            fetchJSON: function (e) {
              return fetch(e, { headers: { Accept: p }, loadSpec: !0 })
                .then((e) => e.text())
                .then((e) => pr.load(e));
            },
            extract: jo,
            jsonPointerToArray: Oo,
            unescapeJsonPointerToken: So,
          }),
          go = yo;
        function vo(e, t) {
          if (!lo.test(e)) {
            if (!t)
              throw new uo(
                `Tried to resolve a relative URL, without having a basePath. path: '${e}' basePath: '${t}'`
              );
            return Xi(t, e);
          }
          return e;
        }
        function bo(e, t) {
          let r;
          return (
            (r =
              e && e.response && e.response.body
                ? `${e.response.body.code} ${e.response.body.message}`
                : e.message),
            new uo(`Could not resolve reference: ${r}`, t, e)
          );
        }
        function xo(e) {
          return (e + "").split("#");
        }
        function wo(e, t) {
          const r = po[e];
          if (r && !xn.isPromise(r))
            try {
              const e = jo(t, r);
              return Object.assign(Promise.resolve(e), { __value: e });
            } catch (e) {
              return Promise.reject(e);
            }
          return Eo(e).then((e) => jo(t, e));
        }
        function Eo(e) {
          const t = po[e];
          return t
            ? xn.isPromise(t)
              ? t
              : Promise.resolve(t)
            : ((po[e] = yo.fetchJSON(e).then((t) => ((po[e] = t), t))), po[e]);
        }
        function jo(e, t) {
          const r = Oo(e);
          if (r.length < 1) return t;
          const n = xn.getIn(t, r);
          if (void 0 === n)
            throw new uo(
              `Could not resolve pointer: ${e} does not exist in document`,
              { pointer: e }
            );
          return n;
        }
        function Oo(e) {
          if ("string" != typeof e)
            throw new TypeError("Expected a string, got a " + typeof e);
          return (
            "/" === e[0] && (e = e.substr(1)),
            "" === e ? [] : e.split("/").map(So)
          );
        }
        function So(e) {
          if ("string" != typeof e) return e;
          return new URLSearchParams(
            `=${e.replace(/~1/g, "/").replace(/~0/g, "~")}`
          ).get("");
        }
        function Po(e) {
          return new URLSearchParams([
            ["", e.replace(/~/g, "~0").replace(/\//g, "~1")],
          ])
            .toString()
            .slice(1);
        }
        const Ao = (e) => !e || "/" === e || "#" === e;
        function $o(e, t) {
          if (Ao(t)) return !0;
          const r = e.charAt(t.length),
            n = t.slice(-1);
          return (
            0 === e.indexOf(t) && (!r || "/" === r || "#" === r) && "#" !== n
          );
        }
        const _o = {
            key: "allOf",
            plugin: (e, t, r, n, s) => {
              if (s.meta && s.meta.$$ref) return;
              const i = r.slice(0, -1);
              if (ao(i)) return;
              if (!Array.isArray(e)) {
                const e = new TypeError("allOf must be an array");
                return (e.fullPath = r), e;
              }
              let o = !1,
                a = s.value;
              if (
                (i.forEach((e) => {
                  a && (a = a[e]);
                }),
                (a = { ...a }),
                0 === Object.keys(a).length)
              )
                return;
              delete a.allOf;
              const c = [];
              return (
                c.push(n.replace(i, {})),
                e.forEach((e, t) => {
                  if (!n.isObject(e)) {
                    if (o) return null;
                    o = !0;
                    const e = new TypeError(
                      "Elements in allOf must be objects"
                    );
                    return (e.fullPath = r), c.push(e);
                  }
                  c.push(n.mergeDeep(i, e));
                  const s = (function (
                    e,
                    t,
                    {
                      specmap: r,
                      getBaseUrlForNodePath: n = (e) =>
                        r.getContext([...t, ...e]).baseDoc,
                      targetKeys: s = ["$ref", "$$ref"],
                    } = {}
                  ) {
                    const i = [];
                    return (
                      ro()(e).forEach(function () {
                        if (
                          s.includes(this.key) &&
                          "string" == typeof this.node
                        ) {
                          const e = this.path,
                            s = t.concat(this.path),
                            o = co(this.node, n(e));
                          i.push(r.replace(s, o));
                        }
                      }),
                      i
                    );
                  })(e, r.slice(0, -1), {
                    getBaseUrlForNodePath: (e) =>
                      n.getContext([...r, t, ...e]).baseDoc,
                    specmap: n,
                  });
                  c.push(...s);
                }),
                a.example && c.push(n.remove([].concat(i, "example"))),
                c.push(n.mergeDeep(i, a)),
                a.$$ref || c.push(n.remove([].concat(i, "$$ref"))),
                c
              );
            },
          },
          ko = {
            key: "parameters",
            plugin: (e, t, r, n) => {
              if (Array.isArray(e) && e.length) {
                const t = Object.assign([], e),
                  s = r.slice(0, -1),
                  i = { ...xn.getIn(n.spec, s) };
                for (let s = 0; s < e.length; s += 1) {
                  const o = e[s];
                  try {
                    t[s].default = n.parameterMacro(i, o);
                  } catch (e) {
                    const t = new Error(e);
                    return (t.fullPath = r), t;
                  }
                }
                return xn.replace(r, t);
              }
              return xn.replace(r, e);
            },
          },
          Io = {
            key: "properties",
            plugin: (e, t, r, n) => {
              const s = { ...e };
              for (const t in e)
                try {
                  s[t].default = n.modelPropertyMacro(s[t]);
                } catch (e) {
                  const t = new Error(e);
                  return (t.fullPath = r), t;
                }
              return xn.replace(r, s);
            },
          };
        class To {
          constructor(e) {
            this.root = Co(e || {});
          }
          set(e, t) {
            const r = this.getParent(e, !0);
            if (!r) return void Mo(this.root, t, null);
            const n = e[e.length - 1],
              { children: s } = r;
            s[n] ? Mo(s[n], t, r) : (s[n] = Co(t, r));
          }
          get(e) {
            if ((e = e || []).length < 1) return this.root.value;
            let t,
              r,
              n = this.root;
            for (
              let s = 0;
              s < e.length && ((r = e[s]), (t = n.children), t[r]);
              s += 1
            )
              n = t[r];
            return n && n.protoValue;
          }
          getParent(e, t) {
            return !e || e.length < 1
              ? null
              : e.length < 2
              ? this.root
              : e.slice(0, -1).reduce((e, r) => {
                  if (!e) return e;
                  const { children: n } = e;
                  return !n[r] && t && (n[r] = Co(null, e)), n[r];
                }, this.root);
          }
        }
        function Co(e, t) {
          return Mo({ children: {} }, e, t);
        }
        function Mo(e, t, r) {
          return (
            (e.value = t || {}),
            (e.protoValue = r ? { ...r.protoValue, ...e.value } : e.value),
            Object.keys(e.children).forEach((t) => {
              const r = e.children[t];
              e.children[t] = Mo(r, r.value, e);
            }),
            e
          );
        }
        const Ro = 1e3,
          Fo = () => {};
        class Do {
          static getPluginName(e) {
            return e.pluginName;
          }
          static getPatchesOfType(e, t) {
            return e.filter(t);
          }
          constructor(e) {
            Object.assign(
              this,
              {
                spec: "",
                debugLevel: "info",
                plugins: [],
                pluginHistory: {},
                errors: [],
                mutations: [],
                promisedPatches: [],
                state: {},
                patches: [],
                context: {},
                contextTree: new To(),
                showDebug: !1,
                allPatches: [],
                pluginProp: "specMap",
                libMethods: Object.assign(Object.create(this), xn, {
                  getInstance: () => this,
                }),
                allowMetaPatches: !1,
                currentTraverseCount: 0,
              },
              e
            ),
              (this.get = this._get.bind(this)),
              (this.getContext = this._getContext.bind(this)),
              (this.hasRun = this._hasRun.bind(this)),
              (this.wrappedPlugins = this.plugins
                .map(this.wrapPlugin.bind(this))
                .filter(xn.isFunction)),
              this.patches.push(xn.add([], this.spec)),
              this.patches.push(xn.context([], this.context)),
              this.updatePatches(this.patches);
          }
          debug(e, ...t) {
            this.debugLevel === e && console.log(...t);
          }
          verbose(e, ...t) {
            "verbose" === this.debugLevel && console.log(`[${e}]   `, ...t);
          }
          wrapPlugin(e, t) {
            const { pathDiscriminator: r } = this,
              n = this;
            let s,
              i = null;
            return (
              e[this.pluginProp]
                ? ((i = e), (s = e[this.pluginProp]))
                : xn.isFunction(e)
                ? (s = e)
                : xn.isObject(e) &&
                  (s = (function (e) {
                    const t = (e, t) =>
                      !Array.isArray(e) || e.every((e, r) => e === t[r]);
                    return function* (s, i) {
                      const o = {};
                      for (const e of s.filter(xn.isAdditiveMutation)) {
                        if (!(n.currentTraverseCount < Ro)) return;
                        yield* a(e.value, e.path, e);
                      }
                      function* a(s, c, l) {
                        if (((n.currentTraverseCount += 1), xn.isObject(s))) {
                          const u = c.length - 1,
                            p = c[u],
                            h = c.indexOf("properties"),
                            f = "properties" === p && u === h,
                            m = i.allowMetaPatches && o[s.$$ref];
                          for (const u of Object.keys(s)) {
                            const p = s[u],
                              h = c.concat(u),
                              d = xn.isObject(p),
                              y = s.$$ref;
                            if (!m && d) {
                              if (
                                (i.allowMetaPatches && y && (o[y] = !0),
                                !(n.currentTraverseCount < Ro))
                              )
                                return;
                              yield* a(p, h, l);
                            }
                            if (!f && u === e.key) {
                              const n = t(r, c);
                              (r && !n) || (yield e.plugin(p, u, h, i, l));
                            }
                          }
                        } else
                          e.key === c[c.length - 1] &&
                            (yield e.plugin(s, e.key, c, i));
                      }
                    };
                  })(e)),
              Object.assign(s.bind(i), {
                pluginName: e.name || t,
                isGenerator: xn.isGenerator(s),
              })
            );
          }
          nextPlugin() {
            return this.wrappedPlugins.find(
              (e) => this.getMutationsForPlugin(e).length > 0
            );
          }
          nextPromisedPatch() {
            if (this.promisedPatches.length > 0)
              return Promise.race(this.promisedPatches.map((e) => e.value));
          }
          getPluginHistory(e) {
            const t = this.constructor.getPluginName(e);
            return this.pluginHistory[t] || [];
          }
          getPluginRunCount(e) {
            return this.getPluginHistory(e).length;
          }
          getPluginHistoryTip(e) {
            const t = this.getPluginHistory(e);
            return (t && t[t.length - 1]) || {};
          }
          getPluginMutationIndex(e) {
            const t = this.getPluginHistoryTip(e).mutationIndex;
            return "number" != typeof t ? -1 : t;
          }
          updatePluginHistory(e, t) {
            const r = this.constructor.getPluginName(e);
            (this.pluginHistory[r] = this.pluginHistory[r] || []),
              this.pluginHistory[r].push(t);
          }
          updatePatches(e) {
            xn.normalizeArray(e).forEach((e) => {
              if (e instanceof Error) this.errors.push(e);
              else
                try {
                  if (!xn.isObject(e))
                    return void this.debug(
                      "updatePatches",
                      "Got a non-object patch",
                      e
                    );
                  if (
                    (this.showDebug && this.allPatches.push(e),
                    xn.isPromise(e.value))
                  )
                    return (
                      this.promisedPatches.push(e),
                      void this.promisedPatchThen(e)
                    );
                  if (xn.isContextPatch(e))
                    return void this.setContext(e.path, e.value);
                  xn.isMutation(e) && this.updateMutations(e);
                } catch (e) {
                  console.error(e), this.errors.push(e);
                }
            });
          }
          updateMutations(e) {
            "object" == typeof e.value &&
              !Array.isArray(e.value) &&
              this.allowMetaPatches &&
              (e.value = { ...e.value });
            const t = xn.applyPatch(this.state, e, {
              allowMetaPatches: this.allowMetaPatches,
            });
            t && (this.mutations.push(e), (this.state = t));
          }
          removePromisedPatch(e) {
            const t = this.promisedPatches.indexOf(e);
            t < 0
              ? this.debug("Tried to remove a promisedPatch that isn't there!")
              : this.promisedPatches.splice(t, 1);
          }
          promisedPatchThen(e) {
            return (
              (e.value = e.value
                .then((t) => {
                  const r = { ...e, value: t };
                  this.removePromisedPatch(e), this.updatePatches(r);
                })
                .catch((t) => {
                  this.removePromisedPatch(e), this.updatePatches(t);
                })),
              e.value
            );
          }
          getMutations(e, t) {
            return (
              (e = e || 0),
              "number" != typeof t && (t = this.mutations.length),
              this.mutations.slice(e, t)
            );
          }
          getCurrentMutations() {
            return this.getMutationsForPlugin(this.getCurrentPlugin());
          }
          getMutationsForPlugin(e) {
            const t = this.getPluginMutationIndex(e);
            return this.getMutations(t + 1);
          }
          getCurrentPlugin() {
            return this.currentPlugin;
          }
          getLib() {
            return this.libMethods;
          }
          _get(e) {
            return xn.getIn(this.state, e);
          }
          _getContext(e) {
            return this.contextTree.get(e);
          }
          setContext(e, t) {
            return this.contextTree.set(e, t);
          }
          _hasRun(e) {
            return this.getPluginRunCount(this.getCurrentPlugin()) > (e || 0);
          }
          dispatch() {
            const e = this,
              t = this.nextPlugin();
            if (((e.currentTraverseCount = 0), !t)) {
              const e = this.nextPromisedPatch();
              if (e)
                return e
                  .then(() => this.dispatch())
                  .catch(() => this.dispatch());
              const t = { spec: this.state, errors: this.errors };
              return (
                this.showDebug && (t.patches = this.allPatches),
                Promise.resolve(t)
              );
            }
            if (
              ((e.pluginCount = e.pluginCount || new WeakMap()),
              e.pluginCount.set(t, (e.pluginCount.get(t) || 0) + 1),
              e.pluginCount[t] > 100)
            )
              return Promise.resolve({
                spec: e.state,
                errors: e.errors.concat(
                  new Error("We've reached a hard limit of 100 plugin runs")
                ),
              });
            if (t !== this.currentPlugin && this.promisedPatches.length) {
              const e = this.promisedPatches.map((e) => e.value);
              return Promise.all(e.map((e) => e.then(Fo, Fo))).then(() =>
                this.dispatch()
              );
            }
            return (function () {
              e.currentPlugin = t;
              const n = e.getCurrentMutations(),
                s = e.mutations.length - 1;
              try {
                if (t.isGenerator) for (const s of t(n, e.getLib())) r(s);
                else {
                  r(t(n, e.getLib()));
                }
              } catch (e) {
                console.error(e),
                  r([Object.assign(Object.create(e), { plugin: t })]);
              } finally {
                e.updatePluginHistory(t, { mutationIndex: s });
              }
              return e.dispatch();
            })();
            function r(r) {
              r && ((r = xn.fullyNormalizeArray(r)), e.updatePatches(r, t));
            }
          }
        }
        const No = { refs: go, allOf: _o, parameters: ko, properties: Io },
          qo = (e) => e.replace(/\W/gi, "_");
        function Lo(e, t, r = "", { v2OperationIdCompatibilityMode: n } = {}) {
          if (!e || "object" != typeof e) return null;
          return (e.operationId || "").replace(/\s/g, "").length
            ? qo(e.operationId)
            : (function (e, t, { v2OperationIdCompatibilityMode: r } = {}) {
                if (r) {
                  let r = `${t.toLowerCase()}_${e}`.replace(
                    /[\s!@#$%^&*()_+=[{\]};:<>|./?,\\'""-]/g,
                    "_"
                  );
                  return (
                    (r = r || `${e.substring(1)}_${t}`),
                    r
                      .replace(/((_){2,})/g, "_")
                      .replace(/^(_)*/g, "")
                      .replace(/([_])*$/g, "")
                  );
                }
                return `${t.toLowerCase()}${qo(e)}`;
              })(t, r, { v2OperationIdCompatibilityMode: n });
        }
        function Bo(e) {
          const { spec: t } = e,
            { paths: r } = t,
            n = {};
          if (!r || t.$$normalized) return e;
          for (const e in r) {
            const s = r[e];
            if (null == s || !["object", "function"].includes(typeof s))
              continue;
            const i = s.parameters;
            for (const r in s) {
              const o = s[r];
              if (null == o || !["object", "function"].includes(typeof o))
                continue;
              const a = Lo(o, e, r);
              if (a) {
                n[a] ? n[a].push(o) : (n[a] = [o]);
                const e = n[a];
                if (e.length > 1)
                  e.forEach((e, t) => {
                    (e.__originalOperationId =
                      e.__originalOperationId || e.operationId),
                      (e.operationId = `${a}${t + 1}`);
                  });
                else if (void 0 !== o.operationId) {
                  const t = e[0];
                  (t.__originalOperationId =
                    t.__originalOperationId || o.operationId),
                    (t.operationId = a);
                }
              }
              if ("parameters" !== r) {
                const e = [],
                  r = {};
                for (const n in t)
                  ("produces" !== n && "consumes" !== n && "security" !== n) ||
                    ((r[n] = t[n]), e.push(r));
                if ((i && ((r.parameters = i), e.push(r)), e.length))
                  for (const t of e)
                    for (const e in t)
                      if (o[e]) {
                        if ("parameters" === e)
                          for (const r of t[e]) {
                            o[e].some(
                              (e) =>
                                (e.name && e.name === r.name) ||
                                (e.$ref && e.$ref === r.$ref) ||
                                (e.$$ref && e.$$ref === r.$$ref) ||
                                e === r
                            ) || o[e].push(r);
                          }
                      } else o[e] = t[e];
              }
            }
          }
          return (t.$$normalized = !0), e;
        }
        async function Uo(e) {
          const {
              spec: t,
              mode: r,
              allowMetaPatches: n = !0,
              pathDiscriminator: s,
              modelPropertyMacro: i,
              parameterMacro: o,
              requestInterceptor: a,
              responseInterceptor: c,
              skipNormalization: l,
              useCircularStructures: u,
            } = e,
            p = Nr(e),
            h = qr(e);
          return (function (e) {
            p && (No.refs.docCache[p] = e);
            No.refs.fetchJSON = Dr(h, {
              requestInterceptor: a,
              responseInterceptor: c,
            });
            const t = [No.refs];
            "function" == typeof o && t.push(No.parameters);
            "function" == typeof i && t.push(No.properties);
            "strict" !== r && t.push(No.allOf);
            return ((f = {
              spec: e,
              context: { baseDoc: p },
              plugins: t,
              allowMetaPatches: n,
              pathDiscriminator: s,
              parameterMacro: o,
              modelPropertyMacro: i,
              useCircularStructures: u,
            }),
            new Do(f).dispatch()).then(l ? async (e) => e : Bo);
            var f;
          })(t);
        }
        const Vo = {
          name: "generic",
          match: () => !0,
          normalize({ spec: e }) {
            const { spec: t } = Bo({ spec: e });
            return t;
          },
          resolve: async (e) => Uo(e),
        };
        const zo = (e) => {
            try {
              const { swagger: t } = e;
              return "2.0" === t;
            } catch {
              return !1;
            }
          },
          Ho = (e) => {
            try {
              const { openapi: t } = e;
              return (
                "string" == typeof t && /^3\.0\.([0123])(?:-rc[012])?$/.test(t)
              );
            } catch {
              return !1;
            }
          },
          Jo = (e) => {
            try {
              const { openapi: t } = e;
              return "string" == typeof t && /^3\.1\.(?:[1-9]\d*|0)$/.test(t);
            } catch {
              return !1;
            }
          },
          Go = (e) => Ho(e) || Jo(e),
          Wo = {
            name: "openapi-2",
            match: ({ spec: e }) => zo(e),
            normalize({ spec: e }) {
              const { spec: t } = Bo({ spec: e });
              return t;
            },
            resolve: async (e) =>
              (async function (e) {
                return Uo(e);
              })(e),
          };
        const Ko = {
            name: "openapi-3-0",
            match: ({ spec: e }) => Ho(e),
            normalize({ spec: e }) {
              const { spec: t } = Bo({ spec: e });
              return t;
            },
            resolve: async (e) =>
              (async function (e) {
                return Uo(e);
              })(e),
          },
          Yo = (e) => async (t) =>
            (async (e) => {
              const {
                  spec: t,
                  requestInterceptor: r,
                  responseInterceptor: n,
                } = e,
                s = Nr(e),
                i = qr(e),
                o =
                  t ||
                  (await Dr(i, {
                    requestInterceptor: r,
                    responseInterceptor: n,
                  })(s)),
                a = { ...e, spec: o };
              return e.strategies.find((e) => e.match(a)).resolve(a);
            })({ ...e, ...t }),
          Xo = Yo({ strategies: [Ko, Wo, Vo] }),
          Qo =
            (e) =>
            async (t, r, n = {}) =>
              (async (e, t, r = {}) => {
                const {
                    returnEntireTree: n,
                    baseDoc: s,
                    requestInterceptor: i,
                    responseInterceptor: o,
                    parameterMacro: a,
                    modelPropertyMacro: c,
                    useCircularStructures: l,
                    strategies: u,
                  } = r,
                  p = {
                    spec: e,
                    pathDiscriminator: t,
                    baseDoc: s,
                    requestInterceptor: i,
                    responseInterceptor: o,
                    parameterMacro: a,
                    modelPropertyMacro: c,
                    useCircularStructures: l,
                    strategies: u,
                  },
                  h = u.find((e) => e.match(p)).normalize(p),
                  f = await Xo({
                    ...p,
                    spec: h,
                    allowMetaPatches: !0,
                    skipNormalization: !0,
                  });
                return (
                  !n &&
                    Array.isArray(t) &&
                    t.length &&
                    (f.spec = t.reduce((e, t) => e?.[t], f.spec) || null),
                  f
                );
              })(t, r, { ...e, ...n });
        Qo({ strategies: [Ko, Wo, Vo] });
        var Zo = r(4035);
        class ea extends Zo.Om {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "annotation");
          }
          get code() {
            return this.attributes.get("code");
          }
          set code(e) {
            this.attributes.set("code", e);
          }
        }
        const ta = ea;
        class ra extends Zo.Om {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "comment");
          }
        }
        const na = ra;
        class sa extends Zo.wE {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "parseResult");
          }
          get api() {
            return this.children.filter((e) => e.classes.contains("api")).first;
          }
          get results() {
            return this.children.filter((e) => e.classes.contains("result"));
          }
          get result() {
            return this.results.first;
          }
          get annotations() {
            return this.children.filter((e) => "annotation" === e.element);
          }
          get warnings() {
            return this.children.filter(
              (e) => "annotation" === e.element && e.classes.contains("warning")
            );
          }
          get errors() {
            return this.children.filter(
              (e) => "annotation" === e.element && e.classes.contains("error")
            );
          }
          get isEmpty() {
            return this.children.reject((e) => "annotation" === e.element)
              .isEmpty;
          }
          replaceResult(e) {
            const { result: t } = this;
            if (wi(t)) return !1;
            const r = this.content.findIndex((e) => e === t);
            return -1 !== r && ((this.content[r] = e), !0);
          }
        }
        const ia = sa;
        class oa extends Zo.wE {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "sourceMap");
          }
          get positionStart() {
            return this.children
              .filter((e) => e.classes.contains("position"))
              .get(0);
          }
          get positionEnd() {
            return this.children
              .filter((e) => e.classes.contains("position"))
              .get(1);
          }
          set position(e) {
            if (void 0 === e) return;
            const t = new Zo.wE([e.start.row, e.start.column, e.start.char]),
              r = new Zo.wE([e.end.row, e.end.column, e.end.char]);
            t.classes.push("position"),
              r.classes.push("position"),
              this.push(t).push(r);
          }
        }
        const aa = oa;
        const ca = Ln(function (e, t, r) {
          var n,
            s = {};
          for (n in ((r = r || {}), (t = t || {})))
            Yn(n, t) && (s[n] = Yn(n, r) ? e(n, t[n], r[n]) : t[n]);
          for (n in r) Yn(n, r) && !Yn(n, s) && (s[n] = r[n]);
          return s;
        });
        const la = Ln(function e(t, r, n) {
          return ca(
            function (r, n, s) {
              return bs(n) && bs(s) ? e(t, n, s) : t(r, n, s);
            },
            r,
            n
          );
        });
        const ua = qn(function (e, t) {
          return la(
            function (e, t, r) {
              return r;
            },
            e,
            t
          );
        });
        const pa = zs(0, -1);
        const ha = qn(function (e, t) {
          return e.apply(this, t);
        });
        const fa = vi(ki);
        const ma = qn(function (e, t) {
          return e && t;
        });
        const da = qn(function (e, t) {
          return ei(e)
            ? function () {
                return e.apply(this, arguments) && t.apply(this, arguments);
              }
            : gi(ma)(e, t);
        });
        var ya = Nn(function (e) {
          return null != e && "function" == typeof e["fantasy-land/empty"]
            ? e["fantasy-land/empty"]()
            : null != e &&
              null != e.constructor &&
              "function" == typeof e.constructor["fantasy-land/empty"]
            ? e.constructor["fantasy-land/empty"]()
            : null != e && "function" == typeof e.empty
            ? e.empty()
            : null != e &&
              null != e.constructor &&
              "function" == typeof e.constructor.empty
            ? e.constructor.empty()
            : gs(e)
            ? []
            : Un(e)
            ? ""
            : bs(e)
            ? {}
            : Zn(e)
            ? (function () {
                return arguments;
              })()
            : (function (e) {
                var t = Object.prototype.toString.call(e);
                return (
                  "[object Uint8ClampedArray]" === t ||
                  "[object Int8Array]" === t ||
                  "[object Uint8Array]" === t ||
                  "[object Int16Array]" === t ||
                  "[object Uint16Array]" === t ||
                  "[object Int32Array]" === t ||
                  "[object Uint32Array]" === t ||
                  "[object Float32Array]" === t ||
                  "[object Float64Array]" === t ||
                  "[object BigInt64Array]" === t ||
                  "[object BigUint64Array]" === t
                );
              })(e)
            ? e.constructor.from("")
            : void 0;
        });
        const ga = ya;
        const va = Nn(function (e) {
          return null != e && ls(e, ga(e));
        });
        const ba = Qs(
          1,
          ki(Array.isArray) ? Array.isArray : Js(os, Ai("Array"))
        );
        const xa = da(ba, va);
        var wa = Qs(3, function (e, t, r) {
          var n = Hn(e, r),
            s = Hn(pa(e), r);
          if (!fa(n) && !xa(e)) {
            var i = Fs(n, s);
            return ha(i, t);
          }
        });
        const Ea = wa;
        function ja(e) {
          return e && e["@@transducer/reduced"]
            ? e
            : { "@@transducer/value": e, "@@transducer/reduced": !0 };
        }
        var Oa = (function () {
          function e(e, t) {
            (this.xf = t), (this.f = e), (this.all = !0);
          }
          return (
            (e.prototype["@@transducer/init"] = xs),
            (e.prototype["@@transducer/result"] = function (e) {
              return (
                this.all && (e = this.xf["@@transducer/step"](e, !0)),
                this.xf["@@transducer/result"](e)
              );
            }),
            (e.prototype["@@transducer/step"] = function (e, t) {
              return (
                this.f(t) ||
                  ((this.all = !1),
                  (e = ja(this.xf["@@transducer/step"](e, !1)))),
                e
              );
            }),
            e
          );
        })();
        function Sa(e) {
          return function (t) {
            return new Oa(e, t);
          };
        }
        const Pa = qn(
            vs(["all"], Sa, function (e, t) {
              for (var r = 0; r < t.length; ) {
                if (!e(t[r])) return !1;
                r += 1;
              }
              return !0;
            })
          ),
          Aa = (e, t) =>
            "object" == typeof t &&
            null !== t &&
            e in t &&
            "function" == typeof t[e],
          $a = (e) =>
            "object" == typeof e &&
            null != e &&
            "_storedElement" in e &&
            "string" == typeof e._storedElement &&
            "_content" in e,
          _a = (e, t) =>
            "object" == typeof t &&
            null !== t &&
            "primitive" in t &&
            "function" == typeof t.primitive &&
            t.primitive() === e,
          ka = (e, t) =>
            "object" == typeof t &&
            null !== t &&
            "classes" in t &&
            (Array.isArray(t.classes) || t.classes instanceof Zo.wE) &&
            t.classes.includes(e),
          Ia = (e, t) =>
            "object" == typeof t &&
            null !== t &&
            "element" in t &&
            t.element === e,
          Ta = (e) =>
            e({
              hasMethod: Aa,
              hasBasicElementProps: $a,
              primitiveEq: _a,
              isElementType: Ia,
              hasClass: ka,
            }),
          Ca = Ta(
            ({ hasBasicElementProps: e, primitiveEq: t }) =>
              (r) =>
                r instanceof Zo.Hg || (e(r) && t(void 0, r))
          ),
          Ma = Ta(
            ({ hasBasicElementProps: e, primitiveEq: t }) =>
              (r) =>
                r instanceof Zo.Om || (e(r) && t("string", r))
          ),
          Ra = Ta(
            ({ hasBasicElementProps: e, primitiveEq: t }) =>
              (r) =>
                r instanceof Zo.kT || (e(r) && t("number", r))
          ),
          Fa = Ta(
            ({ hasBasicElementProps: e, primitiveEq: t }) =>
              (r) =>
                r instanceof Zo.Os || (e(r) && t("null", r))
          ),
          Da = Ta(
            ({ hasBasicElementProps: e, primitiveEq: t }) =>
              (r) =>
                r instanceof Zo.bd || (e(r) && t("boolean", r))
          ),
          Na = Ta(
            ({ hasBasicElementProps: e, primitiveEq: t, hasMethod: r }) =>
              (n) =>
                n instanceof Zo.Sh ||
                (e(n) &&
                  t("object", n) &&
                  r("keys", n) &&
                  r("values", n) &&
                  r("items", n))
          ),
          qa = Ta(
            ({ hasBasicElementProps: e, primitiveEq: t, hasMethod: r }) =>
              (n) =>
                (n instanceof Zo.wE && !(n instanceof Zo.Sh)) ||
                (e(n) &&
                  t("array", n) &&
                  r("push", n) &&
                  r("unshift", n) &&
                  r("map", n) &&
                  r("reduce", n))
          ),
          La = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Zo.Pr || (e(n) && t("member", n) && r(void 0, n))
          ),
          Ba = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Zo.Ft || (e(n) && t("link", n) && r(void 0, n))
          ),
          Ua = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Zo.sI || (e(n) && t("ref", n) && r(void 0, n))
          ),
          Va = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof ta || (e(n) && t("annotation", n) && r("array", n))
          ),
          za = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof na || (e(n) && t("comment", n) && r("string", n))
          ),
          Ha = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof ia ||
                (e(n) && t("parseResult", n) && r("array", n))
          ),
          Ja = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof aa || (e(n) && t("sourceMap", n) && r("array", n))
          ),
          Ga = (e) =>
            Ia("object", e) ||
            Ia("array", e) ||
            Ia("boolean", e) ||
            Ia("number", e) ||
            Ia("string", e) ||
            Ia("null", e) ||
            Ia("member", e),
          Wa = (e) => Ja(e.meta.get("sourceMap")),
          Ka = (e, t) => {
            if (0 === e.length) return !0;
            const r = t.attributes.get("symbols");
            return !!qa(r) && Pa(ci(r.toValue()), e);
          },
          Ya = (e, t) => 0 === e.length || Pa(ci(t.classes.toValue()), e);
        const Xa = ls(null);
        const Qa = vi(Xa);
        function Za(e) {
          return (
            (Za =
              "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e;
                  }
                : function (e) {
                    return e &&
                      "function" == typeof Symbol &&
                      e.constructor === Symbol &&
                      e !== Symbol.prototype
                      ? "symbol"
                      : typeof e;
                  }),
            Za(e)
          );
        }
        const ec = function (e) {
          return "object" === Za(e);
        };
        const tc = Qs(1, da(Qa, ec));
        var rc = Js(os, Ai("Object")),
          nc = Js(As, ls(As(Object))),
          sc = Jn(da(ki, nc), ["constructor"]);
        const ic = Qs(1, function (e) {
          if (!tc(e) || !rc(e)) return !1;
          var t = Object.getPrototypeOf(e);
          return !!Xa(t) || sc(t);
        });
        class oc extends Zo.g$ {
          constructor() {
            super(),
              this.register("annotation", ta),
              this.register("comment", na),
              this.register("parseResult", ia),
              this.register("sourceMap", aa);
          }
        }
        const ac = new oc(),
          cc = (e) => {
            const t = new oc();
            return ic(e) && t.use(e), t;
          },
          lc = ac,
          uc = () => ({ predicates: { ...i }, namespace: lc });
        const pc = function () {
          return !1;
        };
        var hc = r(8675);
        const fc = class extends hc {
          constructor(e, t, r) {
            if (
              (super(e, t, r),
              (this.name = this.constructor.name),
              "string" == typeof t && (this.message = t),
              "function" == typeof Error.captureStackTrace
                ? Error.captureStackTrace(this, this.constructor)
                : (this.stack = new Error(t).stack),
              null != r &&
                "object" == typeof r &&
                Object.hasOwn(r, "cause") &&
                !("cause" in this))
            ) {
              const { cause: e } = r;
              (this.cause = e),
                e instanceof Error &&
                  "stack" in e &&
                  (this.stack = `${this.stack}\nCAUSE: ${e.stack}`);
            }
          }
        };
        class mc extends Error {
          static [Symbol.hasInstance](e) {
            return (
              super[Symbol.hasInstance](e) ||
              Function.prototype[Symbol.hasInstance].call(fc, e)
            );
          }
          constructor(e, t) {
            if (
              (super(e, t),
              (this.name = this.constructor.name),
              "string" == typeof e && (this.message = e),
              "function" == typeof Error.captureStackTrace
                ? Error.captureStackTrace(this, this.constructor)
                : (this.stack = new Error(e).stack),
              null != t &&
                "object" == typeof t &&
                Object.hasOwn(t, "cause") &&
                !("cause" in this))
            ) {
              const { cause: e } = t;
              (this.cause = e),
                e instanceof Error &&
                  "stack" in e &&
                  (this.stack = `${this.stack}\nCAUSE: ${e.stack}`);
            }
          }
        }
        const dc = mc;
        const yc = class extends dc {
            constructor(e, t) {
              if ((super(e, t), null != t && "object" == typeof t)) {
                const { cause: e, ...r } = t;
                Object.assign(this, r);
              }
            }
          },
          gc = (e, t, r) => {
            const n = e[t];
            if (null != n) {
              if (!r && "function" == typeof n) return n;
              const e = r ? n.leave : n.enter;
              if ("function" == typeof e) return e;
            } else {
              const n = r ? e.leave : e.enter;
              if (null != n) {
                if ("function" == typeof n) return n;
                const e = n[t];
                if ("function" == typeof e) return e;
              }
            }
            return null;
          },
          vc = {},
          bc = (e) => (null == e ? void 0 : e.type),
          xc = (e) => "string" == typeof bc(e),
          wc = (e) =>
            Object.create(
              Object.getPrototypeOf(e),
              Object.getOwnPropertyDescriptors(e)
            ),
          Ec = (
            e,
            {
              visitFnGetter: t = gc,
              nodeTypeGetter: r = bc,
              breakSymbol: n = vc,
              deleteNodeSymbol: s = null,
              skipVisitingNodeSymbol: i = !1,
              exposeEdits: o = !1,
            } = {}
          ) => {
            const a = Symbol("skip"),
              c = new Array(e.length).fill(a);
            return {
              enter(l, ...u) {
                let p = l,
                  h = !1;
                for (let f = 0; f < e.length; f += 1)
                  if (c[f] === a) {
                    const a = t(e[f], r(p), !1);
                    if ("function" == typeof a) {
                      const t = a.call(e[f], p, ...u);
                      if (t === i) c[f] = l;
                      else if (t === n) c[f] = n;
                      else {
                        if (t === s) return t;
                        if (void 0 !== t) {
                          if (!o) return t;
                          (p = t), (h = !0);
                        }
                      }
                    }
                  }
                return h ? p : void 0;
              },
              leave(s, ...o) {
                for (let l = 0; l < e.length; l += 1)
                  if (c[l] === a) {
                    const a = t(e[l], r(s), !0);
                    if ("function" == typeof a) {
                      const t = a.call(e[l], s, ...o);
                      if (t === n) c[l] = n;
                      else if (void 0 !== t && t !== i) return t;
                    }
                  } else c[l] === s && (c[l] = a);
              },
            };
          },
          jc = (
            e,
            t,
            {
              keyMap: r = null,
              state: n = {},
              breakSymbol: s = vc,
              deleteNodeSymbol: i = null,
              skipVisitingNodeSymbol: o = !1,
              visitFnGetter: a = gc,
              nodeTypeGetter: c = bc,
              nodePredicate: l = xc,
              nodeCloneFn: u = wc,
              detectCycles: p = !0,
            } = {}
          ) => {
            const h = r || {};
            let f,
              m,
              d = Array.isArray(e),
              y = [e],
              g = -1,
              v = [],
              b = e;
            const x = [],
              w = [];
            do {
              g += 1;
              const e = g === y.length;
              let r;
              const j = e && 0 !== v.length;
              if (e) {
                if (
                  ((r = 0 === w.length ? void 0 : x.pop()),
                  (b = m),
                  (m = w.pop()),
                  j)
                )
                  if (d) {
                    b = b.slice();
                    let e = 0;
                    for (const [t, r] of v) {
                      const n = t - e;
                      r === i ? (b.splice(n, 1), (e += 1)) : (b[n] = r);
                    }
                  } else {
                    b = u(b);
                    for (const [e, t] of v) b[e] = t;
                  }
                (g = f.index),
                  (y = f.keys),
                  (v = f.edits),
                  (d = f.inArray),
                  (f = f.prev);
              } else if (m !== i && void 0 !== m) {
                if (((r = d ? g : y[g]), (b = m[r]), b === i || void 0 === b))
                  continue;
                x.push(r);
              }
              let O;
              if (!Array.isArray(b)) {
                if (!l(b))
                  throw new yc(`Invalid AST Node:  ${String(b)}`, { node: b });
                if (p && w.includes(b)) {
                  x.pop();
                  continue;
                }
                const i = a(t, c(b), e);
                if (i) {
                  for (const [e, r] of Object.entries(n)) t[e] = r;
                  O = i.call(t, b, r, m, x, w);
                }
                if (O === s) break;
                if (O === o) {
                  if (!e) {
                    x.pop();
                    continue;
                  }
                } else if (void 0 !== O && (v.push([r, O]), !e)) {
                  if (!l(O)) {
                    x.pop();
                    continue;
                  }
                  b = O;
                }
              }
              var E;
              if ((void 0 === O && j && v.push([r, b]), !e))
                (f = { inArray: d, index: g, keys: y, edits: v, prev: f }),
                  (d = Array.isArray(b)),
                  (y = d ? b : null !== (E = h[c(b)]) && void 0 !== E ? E : []),
                  (g = -1),
                  (v = []),
                  m !== i && void 0 !== m && w.push(m),
                  (m = b);
            } while (void 0 !== f);
            return 0 !== v.length ? v[v.length - 1][1] : e;
          };
        jc[Symbol.for("nodejs.util.promisify.custom")] = async (
          e,
          t,
          {
            keyMap: r = null,
            state: n = {},
            breakSymbol: s = vc,
            deleteNodeSymbol: i = null,
            skipVisitingNodeSymbol: o = !1,
            visitFnGetter: a = gc,
            nodeTypeGetter: c = bc,
            nodePredicate: l = xc,
            nodeCloneFn: u = wc,
            detectCycles: p = !0,
          } = {}
        ) => {
          const h = r || {};
          let f,
            m,
            d = Array.isArray(e),
            y = [e],
            g = -1,
            v = [],
            b = e;
          const x = [],
            w = [];
          do {
            g += 1;
            const e = g === y.length;
            let r;
            const j = e && 0 !== v.length;
            if (e) {
              if (
                ((r = 0 === w.length ? void 0 : x.pop()),
                (b = m),
                (m = w.pop()),
                j)
              )
                if (d) {
                  b = b.slice();
                  let e = 0;
                  for (const [t, r] of v) {
                    const n = t - e;
                    r === i ? (b.splice(n, 1), (e += 1)) : (b[n] = r);
                  }
                } else {
                  b = u(b);
                  for (const [e, t] of v) b[e] = t;
                }
              (g = f.index),
                (y = f.keys),
                (v = f.edits),
                (d = f.inArray),
                (f = f.prev);
            } else if (m !== i && void 0 !== m) {
              if (((r = d ? g : y[g]), (b = m[r]), b === i || void 0 === b))
                continue;
              x.push(r);
            }
            let O;
            if (!Array.isArray(b)) {
              if (!l(b))
                throw new yc(`Invalid AST Node: ${String(b)}`, { node: b });
              if (p && w.includes(b)) {
                x.pop();
                continue;
              }
              const i = a(t, c(b), e);
              if (i) {
                for (const [e, r] of Object.entries(n)) t[e] = r;
                O = await i.call(t, b, r, m, x, w);
              }
              if (O === s) break;
              if (O === o) {
                if (!e) {
                  x.pop();
                  continue;
                }
              } else if (void 0 !== O && (v.push([r, O]), !e)) {
                if (!l(O)) {
                  x.pop();
                  continue;
                }
                b = O;
              }
            }
            var E;
            if ((void 0 === O && j && v.push([r, b]), !e))
              (f = { inArray: d, index: g, keys: y, edits: v, prev: f }),
                (d = Array.isArray(b)),
                (y = d ? b : null !== (E = h[c(b)]) && void 0 !== E ? E : []),
                (g = -1),
                (v = []),
                m !== i && void 0 !== m && w.push(m),
                (m = b);
          } while (void 0 !== f);
          return 0 !== v.length ? v[v.length - 1][1] : e;
        };
        const Oc = class extends yc {
          value;
          constructor(e, t) {
            super(e, t), void 0 !== t && (this.value = t.value);
          }
        };
        const Sc = class extends Oc {};
        const Pc = class extends Oc {},
          Ac = (e, t = {}) => {
            const { visited: r = new WeakMap() } = t,
              n = { ...t, visited: r };
            if (r.has(e)) return r.get(e);
            if (e instanceof Zo.KeyValuePair) {
              const { key: t, value: s } = e,
                i = Ca(t) ? Ac(t, n) : t,
                o = Ca(s) ? Ac(s, n) : s,
                a = new Zo.KeyValuePair(i, o);
              return r.set(e, a), a;
            }
            if (e instanceof Zo.ot) {
              const t = (e) => Ac(e, n),
                s = [...e].map(t),
                i = new Zo.ot(s);
              return r.set(e, i), i;
            }
            if (e instanceof Zo.G6) {
              const t = (e) => Ac(e, n),
                s = [...e].map(t),
                i = new Zo.G6(s);
              return r.set(e, i), i;
            }
            if (Ca(e)) {
              const t = kc(e);
              if ((r.set(e, t), e.content))
                if (Ca(e.content)) t.content = Ac(e.content, n);
                else if (e.content instanceof Zo.KeyValuePair)
                  t.content = Ac(e.content, n);
                else if (Array.isArray(e.content)) {
                  const r = (e) => Ac(e, n);
                  t.content = e.content.map(r);
                } else t.content = e.content;
              else t.content = e.content;
              return t;
            }
            throw new Sc(
              "Value provided to cloneDeep function couldn't be cloned",
              { value: e }
            );
          };
        Ac.safe = (e) => {
          try {
            return Ac(e);
          } catch {
            return e;
          }
        };
        const $c = (e) => {
            const { key: t, value: r } = e;
            return new Zo.KeyValuePair(t, r);
          },
          _c = (e) => {
            const t = new e.constructor();
            if (
              ((t.element = e.element),
              e.meta.length > 0 && (t._meta = Ac(e.meta)),
              e.attributes.length > 0 && (t._attributes = Ac(e.attributes)),
              Ca(e.content))
            ) {
              const r = e.content;
              t.content = _c(r);
            } else
              Array.isArray(e.content)
                ? (t.content = [...e.content])
                : e.content instanceof Zo.KeyValuePair
                ? (t.content = $c(e.content))
                : (t.content = e.content);
            return t;
          },
          kc = (e) => {
            if (e instanceof Zo.KeyValuePair) return $c(e);
            if (e instanceof Zo.ot)
              return ((e) => {
                const t = [...e];
                return new Zo.ot(t);
              })(e);
            if (e instanceof Zo.G6)
              return ((e) => {
                const t = [...e];
                return new Zo.G6(t);
              })(e);
            if (Ca(e)) return _c(e);
            throw new Pc(
              "Value provided to cloneShallow function couldn't be cloned",
              { value: e }
            );
          };
        kc.safe = (e) => {
          try {
            return kc(e);
          } catch {
            return e;
          }
        };
        const Ic = (e) =>
            Na(e)
              ? "ObjectElement"
              : qa(e)
              ? "ArrayElement"
              : La(e)
              ? "MemberElement"
              : Ma(e)
              ? "StringElement"
              : Da(e)
              ? "BooleanElement"
              : Ra(e)
              ? "NumberElement"
              : Fa(e)
              ? "NullElement"
              : Ba(e)
              ? "LinkElement"
              : Ua(e)
              ? "RefElement"
              : void 0,
          Tc = (e) => (Ca(e) ? kc(e) : wc(e)),
          Cc = Js(Ic, Ri),
          Mc = {
            ObjectElement: ["content"],
            ArrayElement: ["content"],
            MemberElement: ["key", "value"],
            StringElement: [],
            BooleanElement: [],
            NumberElement: [],
            NullElement: [],
            RefElement: [],
            LinkElement: [],
            Annotation: [],
            Comment: [],
            ParseResultElement: ["content"],
            SourceMap: ["content"],
          };
        class Rc {
          result;
          predicate;
          returnOnTrue;
          returnOnFalse;
          constructor({
            predicate: e = pc,
            returnOnTrue: t,
            returnOnFalse: r,
          } = {}) {
            (this.result = []),
              (this.predicate = e),
              (this.returnOnTrue = t),
              (this.returnOnFalse = r);
          }
          enter(e) {
            return this.predicate(e)
              ? (this.result.push(e), this.returnOnTrue)
              : this.returnOnFalse;
          }
        }
        const Fc = (e, t, { keyMap: r = Mc, ...n } = {}) =>
          jc(e, t, {
            keyMap: r,
            nodeTypeGetter: Ic,
            nodePredicate: Cc,
            nodeCloneFn: Tc,
            ...n,
          });
        Fc[Symbol.for("nodejs.util.promisify.custom")] = async (
          e,
          t,
          { keyMap: r = Mc, ...n } = {}
        ) =>
          jc[Symbol.for("nodejs.util.promisify.custom")](e, t, {
            keyMap: r,
            nodeTypeGetter: Ic,
            nodePredicate: Cc,
            nodeCloneFn: Tc,
            ...n,
          });
        const Dc = {
            toolboxCreator: uc,
            visitorOptions: { nodeTypeGetter: Ic, exposeEdits: !0 },
          },
          Nc = (e, t, r = {}) => {
            if (0 === t.length) return e;
            const n = ua(Dc, r),
              { toolboxCreator: s, visitorOptions: i } = n,
              o = s(),
              a = t.map((e) => e(o)),
              c = Ec(a.map(Ks({}, "visitor")), { ...i });
            a.forEach(Ea(["pre"], []));
            const l = Fc(e, c, i);
            return a.forEach(Ea(["post"], [])), l;
          },
          qc = (e, { Type: t, plugins: r = [] }) => {
            const n = new t(e);
            return Nc(n, r, {
              toolboxCreator: uc,
              visitorOptions: { nodeTypeGetter: Ic },
            });
          },
          Lc =
            (e) =>
            (t, r = {}) =>
              qc(t, { ...r, Type: e });
        (Zo.Sh.refract = Lc(Zo.Sh)),
          (Zo.wE.refract = Lc(Zo.wE)),
          (Zo.Om.refract = Lc(Zo.Om)),
          (Zo.bd.refract = Lc(Zo.bd)),
          (Zo.Os.refract = Lc(Zo.Os)),
          (Zo.kT.refract = Lc(Zo.kT)),
          (Zo.Ft.refract = Lc(Zo.Ft)),
          (Zo.sI.refract = Lc(Zo.sI)),
          (ta.refract = Lc(ta)),
          (na.refract = Lc(na)),
          (ia.refract = Lc(ia)),
          (aa.refract = Lc(aa));
        const Bc = (e, t = new WeakMap()) => (
          La(e)
            ? (t.set(e.key, e), Bc(e.key, t), t.set(e.value, e), Bc(e.value, t))
            : e.children.forEach((r) => {
                t.set(r, e), Bc(r, t);
              }),
          t
        );
        const Uc = class {
          element;
          edges;
          constructor({ element: e }) {
            this.element = e;
          }
          transclude(e, t) {
            var r;
            if (e === this.element) return t;
            if (e === t) return this.element;
            this.edges =
              null !== (r = this.edges) && void 0 !== r ? r : Bc(this.element);
            const n = this.edges.get(e);
            return wi(n)
              ? void 0
              : (Na(n)
                  ? ((e, t, r) => {
                      const n = r.get(e);
                      Na(n) &&
                        (n.content = n.map((s, i, o) =>
                          o === e ? (r.delete(e), r.set(t, n), t) : o
                        ));
                    })(e, t, this.edges)
                  : qa(n)
                  ? ((e, t, r) => {
                      const n = r.get(e);
                      qa(n) &&
                        (n.content = n.map((s) =>
                          s === e ? (r.delete(e), r.set(t, n), t) : s
                        ));
                    })(e, t, this.edges)
                  : La(n) &&
                    ((e, t, r) => {
                      const n = r.get(e);
                      La(n) &&
                        (n.key === e && ((n.key = t), r.delete(e), r.set(t, n)),
                        n.value === e &&
                          ((n.value = t), r.delete(e), r.set(t, n)));
                    })(e, t, this.edges),
                this.element);
          }
        };
        const Vc = function () {
            return !0;
          },
          zc = (e) =>
            "string" == typeof (null == e ? void 0 : e.type) ? e.type : Ic(e),
          Hc = {
            EphemeralObject: ["content"],
            EphemeralArray: ["content"],
            ...Mc,
          },
          Jc = (e, t, { keyMap: r = Hc, ...n } = {}) =>
            Fc(e, t, {
              keyMap: r,
              nodeTypeGetter: zc,
              nodePredicate: Vc,
              detectCycles: !1,
              deleteNodeSymbol: Symbol.for("delete-node"),
              skipVisitingNodeSymbol: Symbol.for("skip-visiting-node"),
              ...n,
            });
        Jc[Symbol.for("nodejs.util.promisify.custom")] = async (
          e,
          { keyMap: t = Hc, ...r } = {}
        ) =>
          Fc[Symbol.for("nodejs.util.promisify.custom")](e, visitor, {
            keyMap: t,
            nodeTypeGetter: zc,
            nodePredicate: Vc,
            detectCycles: !1,
            deleteNodeSymbol: Symbol.for("delete-node"),
            skipVisitingNodeSymbol: Symbol.for("skip-visiting-node"),
            ...r,
          });
        const Gc = class {
          type = "EphemeralArray";
          content = [];
          reference = void 0;
          constructor(e) {
            (this.content = e), (this.reference = []);
          }
          toReference() {
            return this.reference;
          }
          toArray() {
            return this.reference.push(...this.content), this.reference;
          }
        };
        const Wc = class {
          type = "EphemeralObject";
          content = [];
          reference = void 0;
          constructor(e) {
            (this.content = e), (this.reference = {});
          }
          toReference() {
            return this.reference;
          }
          toObject() {
            return Object.assign(
              this.reference,
              Object.fromEntries(this.content)
            );
          }
        };
        class Kc {
          ObjectElement = {
            enter: (e) => {
              if (this.references.has(e))
                return this.references.get(e).toReference();
              const t = new Wc(e.content);
              return this.references.set(e, t), t;
            },
          };
          EphemeralObject = { leave: (e) => e.toObject() };
          MemberElement = { enter: (e) => [e.key, e.value] };
          ArrayElement = {
            enter: (e) => {
              if (this.references.has(e))
                return this.references.get(e).toReference();
              const t = new Gc(e.content);
              return this.references.set(e, t), t;
            },
          };
          EphemeralArray = { leave: (e) => e.toArray() };
          references = new WeakMap();
          BooleanElement(e) {
            return e.toValue();
          }
          NumberElement(e) {
            return e.toValue();
          }
          StringElement(e) {
            return e.toValue();
          }
          NullElement() {
            return null;
          }
        }
        const Yc = (e) =>
            Ca(e)
              ? Ma(e) || Ra(e) || Da(e) || Fa(e)
                ? e.toValue()
                : Jc(e, new Kc())
              : e,
          Xc = Js(Ti(/~/g, "~0"), Ti(/\//g, "~1"), encodeURIComponent);
        const Qc = class extends yc {};
        const Zc = class extends Qc {
            tokens;
            constructor(e, t) {
              super(e, t), void 0 !== t && (this.tokens = [...t.tokens]);
            }
          },
          el = (e) => {
            try {
              return 0 === e.length ? "" : `/${e.map(Xc).join("/")}`;
            } catch (t) {
              throw new Zc(
                "JSON Pointer compilation of tokens encountered an error.",
                { tokens: e, cause: t }
              );
            }
          };
        var tl = qn(function (e, t) {
          return Qs(Us(ji, 0, Oi("length", t)), function () {
            var r = arguments,
              n = this;
            return e.apply(
              n,
              ps(function (e) {
                return e.apply(n, r);
              }, t)
            );
          });
        });
        const rl = tl;
        function nl(e) {
          return e;
        }
        const sl = Nn(nl);
        var il = da(Qs(1, Js(os, Ai("Number"))), isFinite);
        var ol = Qs(1, il);
        var al = da(
          ki(Number.isFinite) ? Qs(1, Fs(Number.isFinite, Number)) : ol,
          rl(ls, [Math.floor, sl])
        );
        var cl = Qs(1, al);
        const ll = ki(Number.isInteger)
          ? Qs(1, Fs(Number.isInteger, Number))
          : cl;
        var ul = (function () {
          function e(e, t) {
            (this.xf = t), (this.n = e), (this.i = 0);
          }
          return (
            (e.prototype["@@transducer/init"] = xs),
            (e.prototype["@@transducer/result"] = ws),
            (e.prototype["@@transducer/step"] = function (e, t) {
              this.i += 1;
              var r = 0 === this.n ? e : this.xf["@@transducer/step"](e, t);
              return this.n >= 0 && this.i >= this.n ? ja(r) : r;
            }),
            e
          );
        })();
        function pl(e) {
          return function (t) {
            return new ul(e, t);
          };
        }
        const hl = qn(
          vs(["take"], pl, function (e, t) {
            return zs(0, e < 0 ? 1 / 0 : e, t);
          })
        );
        const fl = qn(function (e, t) {
          return ls(hl(e.length, t), e);
        });
        const ml = ls("");
        var dl = (function () {
          function e(e, t) {
            (this.xf = t), (this.f = e);
          }
          return (
            (e.prototype["@@transducer/init"] = xs),
            (e.prototype["@@transducer/result"] = ws),
            (e.prototype["@@transducer/step"] = function (e, t) {
              if (this.f) {
                if (this.f(t)) return e;
                this.f = null;
              }
              return this.xf["@@transducer/step"](e, t);
            }),
            e
          );
        })();
        function yl(e) {
          return function (t) {
            return new dl(e, t);
          };
        }
        const gl = qn(
          vs(["dropWhile"], yl, function (e, t) {
            for (var r = 0, n = t.length; r < n && e(t[r]); ) r += 1;
            return zs(r, 1 / 0, t);
          })
        );
        const vl = Zs(function (e, t) {
            return Js(ri(""), gl(ci(e)), ai(""))(t);
          }),
          bl = Js(Ti(/~1/g, "/"), Ti(/~0/g, "~"), (e) => {
            try {
              return decodeURIComponent(e);
            } catch {
              return e;
            }
          });
        const xl = class extends Qc {
            pointer;
            constructor(e, t) {
              super(e, t), void 0 !== t && (this.pointer = t.pointer);
            }
          },
          wl = (e) => {
            const t = ((e) => {
              const t = e.indexOf("#");
              return -1 !== t ? e.substring(t) : "#";
            })(e);
            return vl("#", t);
          },
          El = (e) => {
            if (ml(e)) return [];
            if (!fl("/", e))
              throw new xl(
                `Invalid JSON Pointer "${e}". JSON Pointers must begin with "/"`,
                { pointer: e }
              );
            try {
              const t = Js(ri("/"), mi(bl))(e);
              return Hs(t);
            } catch (t) {
              throw new xl(
                `JSON Pointer parsing of "${e}" encountered an error.`,
                { pointer: e, cause: t }
              );
            }
          };
        const jl = class extends Qc {
            pointer;
            tokens;
            failedToken;
            failedTokenPosition;
            element;
            constructor(e, t) {
              super(e, t),
                void 0 !== t &&
                  ((this.pointer = t.pointer),
                  Array.isArray(t.tokens) && (this.tokens = [...t.tokens]),
                  (this.failedToken = t.failedToken),
                  (this.failedTokenPosition = t.failedTokenPosition),
                  (this.element = t.element));
            }
          },
          Ol = (e, t) => {
            let r;
            try {
              r = El(e);
            } catch (r) {
              throw new jl(
                `JSON Pointer evaluation failed while parsing the pointer "${e}".`,
                { pointer: e, element: Ac(t), cause: r }
              );
            }
            return r.reduce((t, n, s) => {
              if (Na(t)) {
                if (!t.hasKey(n))
                  throw new jl(
                    `JSON Pointer evaluation failed while evaluating token "${n}" against an ObjectElement`,
                    {
                      pointer: e,
                      tokens: r,
                      failedToken: n,
                      failedTokenPosition: s,
                      element: Ac(t),
                    }
                  );
                return t.get(n);
              }
              if (qa(t)) {
                if (!(n in t.content) || !ll(Number(n)))
                  throw new jl(
                    `JSON Pointer evaluation failed while evaluating token "${n}" against an ArrayElement`,
                    {
                      pointer: e,
                      tokens: r,
                      failedToken: n,
                      failedTokenPosition: s,
                      element: Ac(t),
                    }
                  );
                return t.get(Number(n));
              }
              throw new jl(
                `JSON Pointer evaluation failed while evaluating token "${n}" against an unexpected Element`,
                {
                  pointer: e,
                  tokens: r,
                  failedToken: n,
                  failedTokenPosition: s,
                  element: Ac(t),
                }
              );
            }, t);
          };
        class Sl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "callback");
          }
        }
        const Pl = Sl;
        class Al extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "components");
          }
          get schemas() {
            return this.get("schemas");
          }
          set schemas(e) {
            this.set("schemas", e);
          }
          get responses() {
            return this.get("responses");
          }
          set responses(e) {
            this.set("responses", e);
          }
          get parameters() {
            return this.get("parameters");
          }
          set parameters(e) {
            this.set("parameters", e);
          }
          get examples() {
            return this.get("examples");
          }
          set examples(e) {
            this.set("examples", e);
          }
          get requestBodies() {
            return this.get("requestBodies");
          }
          set requestBodies(e) {
            this.set("requestBodies", e);
          }
          get headers() {
            return this.get("headers");
          }
          set headers(e) {
            this.set("headers", e);
          }
          get securitySchemes() {
            return this.get("securitySchemes");
          }
          set securitySchemes(e) {
            this.set("securitySchemes", e);
          }
          get links() {
            return this.get("links");
          }
          set links(e) {
            this.set("links", e);
          }
          get callbacks() {
            return this.get("callbacks");
          }
          set callbacks(e) {
            this.set("callbacks", e);
          }
        }
        const $l = Al;
        class _l extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "contact");
          }
          get name() {
            return this.get("name");
          }
          set name(e) {
            this.set("name", e);
          }
          get url() {
            return this.get("url");
          }
          set url(e) {
            this.set("url", e);
          }
          get email() {
            return this.get("email");
          }
          set email(e) {
            this.set("email", e);
          }
        }
        const kl = _l;
        class Il extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "discriminator");
          }
          get propertyName() {
            return this.get("propertyName");
          }
          set propertyName(e) {
            this.set("propertyName", e);
          }
          get mapping() {
            return this.get("mapping");
          }
          set mapping(e) {
            this.set("mapping", e);
          }
        }
        const Tl = Il;
        class Cl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "encoding");
          }
          get contentType() {
            return this.get("contentType");
          }
          set contentType(e) {
            this.set("contentType", e);
          }
          get headers() {
            return this.get("headers");
          }
          set headers(e) {
            this.set("headers", e);
          }
          get style() {
            return this.get("style");
          }
          set style(e) {
            this.set("style", e);
          }
          get explode() {
            return this.get("explode");
          }
          set explode(e) {
            this.set("explode", e);
          }
          get allowedReserved() {
            return this.get("allowedReserved");
          }
          set allowedReserved(e) {
            this.set("allowedReserved", e);
          }
        }
        const Ml = Cl;
        class Rl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "example");
          }
          get summary() {
            return this.get("summary");
          }
          set summary(e) {
            this.set("summary", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get value() {
            return this.get("value");
          }
          set value(e) {
            this.set("value", e);
          }
          get externalValue() {
            return this.get("externalValue");
          }
          set externalValue(e) {
            this.set("externalValue", e);
          }
        }
        const Fl = Rl;
        class Dl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "externalDocumentation");
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get url() {
            return this.get("url");
          }
          set url(e) {
            this.set("url", e);
          }
        }
        const Nl = Dl;
        class ql extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "header");
          }
          get required() {
            return this.hasKey("required")
              ? this.get("required")
              : new Zo.bd(!1);
          }
          set required(e) {
            this.set("required", e);
          }
          get deprecated() {
            return this.hasKey("deprecated")
              ? this.get("deprecated")
              : new Zo.bd(!1);
          }
          set deprecated(e) {
            this.set("deprecated", e);
          }
          get allowEmptyValue() {
            return this.get("allowEmptyValue");
          }
          set allowEmptyValue(e) {
            this.set("allowEmptyValue", e);
          }
          get style() {
            return this.get("style");
          }
          set style(e) {
            this.set("style", e);
          }
          get explode() {
            return this.get("explode");
          }
          set explode(e) {
            this.set("explode", e);
          }
          get allowReserved() {
            return this.get("allowReserved");
          }
          set allowReserved(e) {
            this.set("allowReserved", e);
          }
          get schema() {
            return this.get("schema");
          }
          set schema(e) {
            this.set("schema", e);
          }
          get example() {
            return this.get("example");
          }
          set example(e) {
            this.set("example", e);
          }
          get examples() {
            return this.get("examples");
          }
          set examples(e) {
            this.set("examples", e);
          }
          get contentProp() {
            return this.get("content");
          }
          set contentProp(e) {
            this.set("content", e);
          }
        }
        Object.defineProperty(ql.prototype, "description", {
          get() {
            return this.get("description");
          },
          set(e) {
            this.set("description", e);
          },
          enumerable: !0,
        });
        const Ll = ql;
        class Bl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "info"), this.classes.push("info");
          }
          get title() {
            return this.get("title");
          }
          set title(e) {
            this.set("title", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get termsOfService() {
            return this.get("termsOfService");
          }
          set termsOfService(e) {
            this.set("termsOfService", e);
          }
          get contact() {
            return this.get("contact");
          }
          set contact(e) {
            this.set("contact", e);
          }
          get license() {
            return this.get("license");
          }
          set license(e) {
            this.set("license", e);
          }
          get version() {
            return this.get("version");
          }
          set version(e) {
            this.set("version", e);
          }
        }
        const Ul = Bl;
        class Vl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "license");
          }
          get name() {
            return this.get("name");
          }
          set name(e) {
            this.set("name", e);
          }
          get url() {
            return this.get("url");
          }
          set url(e) {
            this.set("url", e);
          }
        }
        const zl = Vl;
        class Hl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "link");
          }
          get operationRef() {
            return this.get("operationRef");
          }
          set operationRef(e) {
            this.set("operationRef", e);
          }
          get operationId() {
            return this.get("operationId");
          }
          set operationId(e) {
            this.set("operationId", e);
          }
          get operation() {
            var e, t;
            return Ma(this.operationRef)
              ? null === (e = this.operationRef) || void 0 === e
                ? void 0
                : e.meta.get("operation")
              : Ma(this.operationId)
              ? null === (t = this.operationId) || void 0 === t
                ? void 0
                : t.meta.get("operation")
              : void 0;
          }
          set operation(e) {
            this.set("operation", e);
          }
          get parameters() {
            return this.get("parameters");
          }
          set parameters(e) {
            this.set("parameters", e);
          }
          get requestBody() {
            return this.get("requestBody");
          }
          set requestBody(e) {
            this.set("requestBody", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get server() {
            return this.get("server");
          }
          set server(e) {
            this.set("server", e);
          }
        }
        const Jl = Hl;
        class Gl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "mediaType");
          }
          get schema() {
            return this.get("schema");
          }
          set schema(e) {
            this.set("schema", e);
          }
          get example() {
            return this.get("example");
          }
          set example(e) {
            this.set("example", e);
          }
          get examples() {
            return this.get("examples");
          }
          set examples(e) {
            this.set("examples", e);
          }
          get encoding() {
            return this.get("encoding");
          }
          set encoding(e) {
            this.set("encoding", e);
          }
        }
        const Wl = Gl;
        class Kl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "oAuthFlow");
          }
          get authorizationUrl() {
            return this.get("authorizationUrl");
          }
          set authorizationUrl(e) {
            this.set("authorizationUrl", e);
          }
          get tokenUrl() {
            return this.get("tokenUrl");
          }
          set tokenUrl(e) {
            this.set("tokenUrl", e);
          }
          get refreshUrl() {
            return this.get("refreshUrl");
          }
          set refreshUrl(e) {
            this.set("refreshUrl", e);
          }
          get scopes() {
            return this.get("scopes");
          }
          set scopes(e) {
            this.set("scopes", e);
          }
        }
        const Yl = Kl;
        class Xl extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "oAuthFlows");
          }
          get implicit() {
            return this.get("implicit");
          }
          set implicit(e) {
            this.set("implicit", e);
          }
          get password() {
            return this.get("password");
          }
          set password(e) {
            this.set("password", e);
          }
          get clientCredentials() {
            return this.get("clientCredentials");
          }
          set clientCredentials(e) {
            this.set("clientCredentials", e);
          }
          get authorizationCode() {
            return this.get("authorizationCode");
          }
          set authorizationCode(e) {
            this.set("authorizationCode", e);
          }
        }
        const Ql = Xl;
        class Zl extends Zo.Om {
          constructor(e, t, r) {
            super(e, t, r),
              (this.element = "openapi"),
              this.classes.push("spec-version"),
              this.classes.push("version");
          }
        }
        const eu = Zl;
        class tu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r),
              (this.element = "openApi3_0"),
              this.classes.push("api");
          }
          get openapi() {
            return this.get("openapi");
          }
          set openapi(e) {
            this.set("openapi", e);
          }
          get info() {
            return this.get("info");
          }
          set info(e) {
            this.set("info", e);
          }
          get servers() {
            return this.get("servers");
          }
          set servers(e) {
            this.set("servers", e);
          }
          get paths() {
            return this.get("paths");
          }
          set paths(e) {
            this.set("paths", e);
          }
          get components() {
            return this.get("components");
          }
          set components(e) {
            this.set("components", e);
          }
          get security() {
            return this.get("security");
          }
          set security(e) {
            this.set("security", e);
          }
          get tags() {
            return this.get("tags");
          }
          set tags(e) {
            this.set("tags", e);
          }
          get externalDocs() {
            return this.get("externalDocs");
          }
          set externalDocs(e) {
            this.set("externalDocs", e);
          }
        }
        const ru = tu;
        class nu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "operation");
          }
          get tags() {
            return this.get("tags");
          }
          set tags(e) {
            this.set("tags", e);
          }
          get summary() {
            return this.get("summary");
          }
          set summary(e) {
            this.set("summary", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          set externalDocs(e) {
            this.set("externalDocs", e);
          }
          get externalDocs() {
            return this.get("externalDocs");
          }
          get operationId() {
            return this.get("operationId");
          }
          set operationId(e) {
            this.set("operationId", e);
          }
          get parameters() {
            return this.get("parameters");
          }
          set parameters(e) {
            this.set("parameters", e);
          }
          get requestBody() {
            return this.get("requestBody");
          }
          set requestBody(e) {
            this.set("requestBody", e);
          }
          get responses() {
            return this.get("responses");
          }
          set responses(e) {
            this.set("responses", e);
          }
          get callbacks() {
            return this.get("callbacks");
          }
          set callbacks(e) {
            this.set("callbacks", e);
          }
          get deprecated() {
            return this.hasKey("deprecated")
              ? this.get("deprecated")
              : new Zo.bd(!1);
          }
          set deprecated(e) {
            this.set("deprecated", e);
          }
          get security() {
            return this.get("security");
          }
          set security(e) {
            this.set("security", e);
          }
          get servers() {
            return this.get("severs");
          }
          set servers(e) {
            this.set("servers", e);
          }
        }
        const su = nu;
        class iu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "parameter");
          }
          get name() {
            return this.get("name");
          }
          set name(e) {
            this.set("name", e);
          }
          get in() {
            return this.get("in");
          }
          set in(e) {
            this.set("in", e);
          }
          get required() {
            return this.hasKey("required")
              ? this.get("required")
              : new Zo.bd(!1);
          }
          set required(e) {
            this.set("required", e);
          }
          get deprecated() {
            return this.hasKey("deprecated")
              ? this.get("deprecated")
              : new Zo.bd(!1);
          }
          set deprecated(e) {
            this.set("deprecated", e);
          }
          get allowEmptyValue() {
            return this.get("allowEmptyValue");
          }
          set allowEmptyValue(e) {
            this.set("allowEmptyValue", e);
          }
          get style() {
            return this.get("style");
          }
          set style(e) {
            this.set("style", e);
          }
          get explode() {
            return this.get("explode");
          }
          set explode(e) {
            this.set("explode", e);
          }
          get allowReserved() {
            return this.get("allowReserved");
          }
          set allowReserved(e) {
            this.set("allowReserved", e);
          }
          get schema() {
            return this.get("schema");
          }
          set schema(e) {
            this.set("schema", e);
          }
          get example() {
            return this.get("example");
          }
          set example(e) {
            this.set("example", e);
          }
          get examples() {
            return this.get("examples");
          }
          set examples(e) {
            this.set("examples", e);
          }
          get contentProp() {
            return this.get("content");
          }
          set contentProp(e) {
            this.set("content", e);
          }
        }
        Object.defineProperty(iu.prototype, "description", {
          get() {
            return this.get("description");
          },
          set(e) {
            this.set("description", e);
          },
          enumerable: !0,
        });
        const ou = iu;
        class au extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "pathItem");
          }
          get $ref() {
            return this.get("$ref");
          }
          set $ref(e) {
            this.set("$ref", e);
          }
          get summary() {
            return this.get("summary");
          }
          set summary(e) {
            this.set("summary", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get GET() {
            return this.get("get");
          }
          set GET(e) {
            this.set("GET", e);
          }
          get PUT() {
            return this.get("put");
          }
          set PUT(e) {
            this.set("PUT", e);
          }
          get POST() {
            return this.get("post");
          }
          set POST(e) {
            this.set("POST", e);
          }
          get DELETE() {
            return this.get("delete");
          }
          set DELETE(e) {
            this.set("DELETE", e);
          }
          get OPTIONS() {
            return this.get("options");
          }
          set OPTIONS(e) {
            this.set("OPTIONS", e);
          }
          get HEAD() {
            return this.get("head");
          }
          set HEAD(e) {
            this.set("HEAD", e);
          }
          get PATCH() {
            return this.get("patch");
          }
          set PATCH(e) {
            this.set("PATCH", e);
          }
          get TRACE() {
            return this.get("trace");
          }
          set TRACE(e) {
            this.set("TRACE", e);
          }
          get servers() {
            return this.get("servers");
          }
          set servers(e) {
            this.set("servers", e);
          }
          get parameters() {
            return this.get("parameters");
          }
          set parameters(e) {
            this.set("parameters", e);
          }
        }
        const cu = au;
        class lu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "paths");
          }
        }
        const uu = lu;
        class pu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r),
              (this.element = "reference"),
              this.classes.push("openapi-reference");
          }
          get $ref() {
            return this.get("$ref");
          }
          set $ref(e) {
            this.set("$ref", e);
          }
        }
        const hu = pu;
        class fu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "requestBody");
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get contentProp() {
            return this.get("content");
          }
          set contentProp(e) {
            this.set("content", e);
          }
          get required() {
            return this.hasKey("required")
              ? this.get("required")
              : new Zo.bd(!1);
          }
          set required(e) {
            this.set("required", e);
          }
        }
        const mu = fu;
        class du extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "response");
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get headers() {
            return this.get("headers");
          }
          set headers(e) {
            this.set("headers", e);
          }
          get contentProp() {
            return this.get("content");
          }
          set contentProp(e) {
            this.set("content", e);
          }
          get links() {
            return this.get("links");
          }
          set links(e) {
            this.set("links", e);
          }
        }
        const yu = du;
        class gu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "responses");
          }
          get default() {
            return this.get("default");
          }
          set default(e) {
            this.set("default", e);
          }
        }
        const vu = gu;
        const bu = class extends dc {};
        class xu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "JSONSchemaDraft4");
          }
          get idProp() {
            return this.get("id");
          }
          set idProp(e) {
            this.set("id", e);
          }
          get $schema() {
            return this.get("$schema");
          }
          set $schema(e) {
            this.set("$schema", e);
          }
          get multipleOf() {
            return this.get("multipleOf");
          }
          set multipleOf(e) {
            this.set("multipleOf", e);
          }
          get maximum() {
            return this.get("maximum");
          }
          set maximum(e) {
            this.set("maximum", e);
          }
          get exclusiveMaximum() {
            return this.get("exclusiveMaximum");
          }
          set exclusiveMaximum(e) {
            this.set("exclusiveMaximum", e);
          }
          get minimum() {
            return this.get("minimum");
          }
          set minimum(e) {
            this.set("minimum", e);
          }
          get exclusiveMinimum() {
            return this.get("exclusiveMinimum");
          }
          set exclusiveMinimum(e) {
            this.set("exclusiveMinimum", e);
          }
          get maxLength() {
            return this.get("maxLength");
          }
          set maxLength(e) {
            this.set("maxLength", e);
          }
          get minLength() {
            return this.get("minLength");
          }
          set minLength(e) {
            this.set("minLength", e);
          }
          get pattern() {
            return this.get("pattern");
          }
          set pattern(e) {
            this.set("pattern", e);
          }
          get additionalItems() {
            return this.get("additionalItems");
          }
          set additionalItems(e) {
            this.set("additionalItems", e);
          }
          get items() {
            return this.get("items");
          }
          set items(e) {
            this.set("items", e);
          }
          get maxItems() {
            return this.get("maxItems");
          }
          set maxItems(e) {
            this.set("maxItems", e);
          }
          get minItems() {
            return this.get("minItems");
          }
          set minItems(e) {
            this.set("minItems", e);
          }
          get uniqueItems() {
            return this.get("uniqueItems");
          }
          set uniqueItems(e) {
            this.set("uniqueItems", e);
          }
          get maxProperties() {
            return this.get("maxProperties");
          }
          set maxProperties(e) {
            this.set("maxProperties", e);
          }
          get minProperties() {
            return this.get("minProperties");
          }
          set minProperties(e) {
            this.set("minProperties", e);
          }
          get required() {
            return this.get("required");
          }
          set required(e) {
            this.set("required", e);
          }
          get properties() {
            return this.get("properties");
          }
          set properties(e) {
            this.set("properties", e);
          }
          get additionalProperties() {
            return this.get("additionalProperties");
          }
          set additionalProperties(e) {
            this.set("additionalProperties", e);
          }
          get patternProperties() {
            return this.get("patternProperties");
          }
          set patternProperties(e) {
            this.set("patternProperties", e);
          }
          get dependencies() {
            return this.get("dependencies");
          }
          set dependencies(e) {
            this.set("dependencies", e);
          }
          get enum() {
            return this.get("enum");
          }
          set enum(e) {
            this.set("enum", e);
          }
          get type() {
            return this.get("type");
          }
          set type(e) {
            this.set("type", e);
          }
          get allOf() {
            return this.get("allOf");
          }
          set allOf(e) {
            this.set("allOf", e);
          }
          get anyOf() {
            return this.get("anyOf");
          }
          set anyOf(e) {
            this.set("anyOf", e);
          }
          get oneOf() {
            return this.get("oneOf");
          }
          set oneOf(e) {
            this.set("oneOf", e);
          }
          get not() {
            return this.get("not");
          }
          set not(e) {
            this.set("not", e);
          }
          get definitions() {
            return this.get("definitions");
          }
          set definitions(e) {
            this.set("definitions", e);
          }
          get title() {
            return this.get("title");
          }
          set title(e) {
            this.set("title", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get default() {
            return this.get("default");
          }
          set default(e) {
            this.set("default", e);
          }
          get format() {
            return this.get("format");
          }
          set format(e) {
            this.set("format", e);
          }
          get base() {
            return this.get("base");
          }
          set base(e) {
            this.set("base", e);
          }
          get links() {
            return this.get("links");
          }
          set links(e) {
            this.set("links", e);
          }
          get media() {
            return this.get("media");
          }
          set media(e) {
            this.set("media", e);
          }
          get readOnly() {
            return this.get("readOnly");
          }
          set readOnly(e) {
            this.set("readOnly", e);
          }
        }
        const wu = xu;
        class Eu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r),
              (this.element = "JSONReference"),
              this.classes.push("json-reference");
          }
          get $ref() {
            return this.get("$ref");
          }
          set $ref(e) {
            this.set("$ref", e);
          }
        }
        const ju = Eu;
        class Ou extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "media");
          }
          get binaryEncoding() {
            return this.get("binaryEncoding");
          }
          set binaryEncoding(e) {
            this.set("binaryEncoding", e);
          }
          get type() {
            return this.get("type");
          }
          set type(e) {
            this.set("type", e);
          }
        }
        const Su = Ou;
        class Pu extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "linkDescription");
          }
          get href() {
            return this.get("href");
          }
          set href(e) {
            this.set("href", e);
          }
          get rel() {
            return this.get("rel");
          }
          set rel(e) {
            this.set("rel", e);
          }
          get title() {
            return this.get("title");
          }
          set title(e) {
            this.set("title", e);
          }
          get targetSchema() {
            return this.get("targetSchema");
          }
          set targetSchema(e) {
            this.set("targetSchema", e);
          }
          get mediaType() {
            return this.get("mediaType");
          }
          set mediaType(e) {
            this.set("mediaType", e);
          }
          get method() {
            return this.get("method");
          }
          set method(e) {
            this.set("method", e);
          }
          get encType() {
            return this.get("encType");
          }
          set encType(e) {
            this.set("encType", e);
          }
          get schema() {
            return this.get("schema");
          }
          set schema(e) {
            this.set("schema", e);
          }
        }
        const Au = Pu;
        const $u = qn(function (e, t) {
          return ys(
            function (r, n) {
              return (r[n] = e(t[n], n, t)), r;
            },
            {},
            is(t)
          );
        });
        const _u = Nn(function (e) {
          return null == e;
        });
        const ku = qn(function (e, t) {
          if (0 === e.length || _u(t)) return !1;
          for (var r = t, n = 0; n < e.length; ) {
            if (_u(r) || !Yn(e[n], r)) return !1;
            (r = r[e[n]]), (n += 1);
          }
          return !0;
        });
        var Iu = qn(function (e, t) {
          return ku([e], t);
        });
        const Tu = Iu;
        const Cu = Ln(function (e, t, r) {
            return e(Ws(t, r));
          }),
          Mu = (e, t) => {
            const r = Gs(e, t);
            return $u((e) => {
              if (ic(e) && Tu("$ref", e) && Cu(Ri, "$ref", e)) {
                const t = Hn(["$ref"], e),
                  n = vl("#/", t);
                return Hn(n.split("/"), r);
              }
              return ic(e) ? Mu(e, r) : e;
            }, e);
          };
        var Ru = r(2646);
        const Fu = Ru({
            props: { element: null },
            methods: {
              copyMetaAndAttributes(e, t) {
                Wa(e) && t.meta.set("sourceMap", e.meta.get("sourceMap"));
              },
            },
          }),
          Du = Fu,
          Nu = Ru(Du, {
            methods: {
              enter(e) {
                return (this.element = Ac(e)), vc;
              },
            },
          });
        const qu = bi(xi());
        const Lu = qn(function (e, t) {
            for (var r = {}, n = 0; n < e.length; )
              e[n] in t && (r[e[n]] = t[e[n]]), (n += 1);
            return r;
          }),
          Bu = Ru(Du, {
            props: { specObj: null, passingOptionsNames: ["specObj"] },
            init({ specObj: e = this.specObj }) {
              this.specObj = e;
            },
            methods: {
              retrievePassingOptions() {
                return Lu(this.passingOptionsNames, this);
              },
              retrieveFixedFields(e) {
                const t = Hn(["visitors", ...e, "fixedFields"], this.specObj);
                return "object" == typeof t && null !== t ? Object.keys(t) : [];
              },
              retrieveVisitor(e) {
                return Jn(ki, ["visitors", ...e], this.specObj)
                  ? Hn(["visitors", ...e], this.specObj)
                  : Hn(["visitors", ...e, "$visitor"], this.specObj);
              },
              retrieveVisitorInstance(e, t = {}) {
                const r = this.retrievePassingOptions();
                return new (this.retrieveVisitor(e))({ ...r, ...t });
              },
              toRefractedElement(e, t, r = {}) {
                const n = this.retrieveVisitorInstance(e, r),
                  s = Object.getPrototypeOf(n);
                return (
                  wi(this.fallbackVisitorPrototype) &&
                    (this.fallbackVisitorPrototype = Object.getPrototypeOf(
                      this.retrieveVisitorInstance(["value"])
                    )),
                  this.fallbackVisitorPrototype === s
                    ? Ac(t)
                    : (Fc(t, n, r), n.element)
                );
              },
            },
          }),
          Uu = Ru(Bu, {
            props: { specPath: qu, ignoredFields: [] },
            init({
              specPath: e = this.specPath,
              ignoredFields: t = this.ignoredFields,
            } = {}) {
              (this.specPath = e), (this.ignoredFields = t);
            },
            methods: {
              ObjectElement(e) {
                const t = this.specPath(e),
                  r = this.retrieveFixedFields(t);
                return (
                  e.forEach((e, n, s) => {
                    if (
                      Ma(n) &&
                      r.includes(Yc(n)) &&
                      !this.ignoredFields.includes(Yc(n))
                    ) {
                      const r = this.toRefractedElement(
                          [...t, "fixedFields", Yc(n)],
                          e
                        ),
                        i = new Zo.Pr(Ac(n), r);
                      this.copyMetaAndAttributes(s, i),
                        i.classes.push("fixed-field"),
                        this.element.content.push(i);
                    } else
                      this.ignoredFields.includes(Yc(n)) ||
                        this.element.content.push(Ac(s));
                  }),
                  this.copyMetaAndAttributes(e, this.element),
                  vc
                );
              },
            },
          }),
          Vu = Ru(Uu, Nu, {
            props: { specPath: bi(["document", "objects", "JSONSchema"]) },
            init() {
              this.element = new wu();
            },
          }),
          zu = Nu,
          Hu = Nu,
          Ju = Nu,
          Gu = Nu,
          Wu = Nu,
          Ku = Nu,
          Yu = Nu,
          Xu = Nu,
          Qu = Nu,
          Zu = Nu,
          ep = Ru({
            props: { parent: null },
            init({ parent: e = this.parent }) {
              (this.parent = e),
                (this.passingOptionsNames = [
                  ...this.passingOptionsNames,
                  "parent",
                ]);
            },
          }),
          tp = (e) => Na(e) && e.hasKey("$ref"),
          rp = Ru(Bu, ep, Nu, {
            methods: {
              ObjectElement(e) {
                const t = tp(e)
                  ? ["document", "objects", "JSONReference"]
                  : ["document", "objects", "JSONSchema"];
                return (this.element = this.toRefractedElement(t, e)), vc;
              },
              ArrayElement(e) {
                return (
                  (this.element = new Zo.wE()),
                  this.element.classes.push("json-schema-items"),
                  e.forEach((e) => {
                    const t = tp(e)
                        ? ["document", "objects", "JSONReference"]
                        : ["document", "objects", "JSONSchema"],
                      r = this.toRefractedElement(t, e);
                    this.element.push(r);
                  }),
                  this.copyMetaAndAttributes(e, this.element),
                  vc
                );
              },
            },
          }),
          np = Nu,
          sp = Nu,
          ip = Nu,
          op = Nu,
          ap = Nu,
          cp = Ru(Nu, {
            methods: {
              ArrayElement(e) {
                return (
                  (this.element = Ac(e)),
                  this.element.classes.push("json-schema-required"),
                  vc
                );
              },
            },
          });
        const lp = Nn(function (e) {
          return Qs(Us(ji, 0, Oi("length", e)), function () {
            for (var t = 0, r = e.length; t < r; ) {
              if (!e[t].apply(this, arguments)) return !1;
              t += 1;
            }
            return !0;
          });
        });
        const up = qn(function (e, t) {
          return e || t;
        });
        const pp = vi(
          Qs(
            1,
            da(
              Qa,
              qn(function (e, t) {
                return ei(e)
                  ? function () {
                      return (
                        e.apply(this, arguments) || t.apply(this, arguments)
                      );
                    }
                  : gi(up)(e, t);
              })(ec, ki)
            )
          )
        );
        const hp = vi(va);
        const fp = lp([Ri, pp, hp]),
          mp = Ru(Bu, {
            props: {
              fieldPatternPredicate: pc,
              specPath: qu,
              ignoredFields: [],
            },
            init({
              specPath: e = this.specPath,
              ignoredFields: t = this.ignoredFields,
            } = {}) {
              (this.specPath = e), (this.ignoredFields = t);
            },
            methods: {
              ObjectElement(e) {
                return (
                  e.forEach((e, t, r) => {
                    if (
                      !this.ignoredFields.includes(Yc(t)) &&
                      this.fieldPatternPredicate(Yc(t))
                    ) {
                      const n = this.specPath(e),
                        s = this.toRefractedElement(n, e),
                        i = new Zo.Pr(Ac(t), s);
                      this.copyMetaAndAttributes(r, i),
                        i.classes.push("patterned-field"),
                        this.element.content.push(i);
                    } else
                      this.ignoredFields.includes(Yc(t)) ||
                        this.element.content.push(Ac(r));
                  }),
                  this.copyMetaAndAttributes(e, this.element),
                  vc
                );
              },
            },
          }),
          dp = Ru(mp, { props: { fieldPatternPredicate: fp } }),
          yp = Ru(dp, ep, Nu, {
            props: {
              specPath: (e) =>
                tp(e)
                  ? ["document", "objects", "JSONReference"]
                  : ["document", "objects", "JSONSchema"],
            },
            init() {
              (this.element = new Zo.Sh()),
                this.element.classes.push("json-schema-properties");
            },
          }),
          gp = Ru(dp, ep, Nu, {
            props: {
              specPath: (e) =>
                tp(e)
                  ? ["document", "objects", "JSONReference"]
                  : ["document", "objects", "JSONSchema"],
            },
            init() {
              (this.element = new Zo.Sh()),
                this.element.classes.push("json-schema-patternProperties");
            },
          }),
          vp = Ru(dp, ep, Nu, {
            props: {
              specPath: (e) =>
                tp(e)
                  ? ["document", "objects", "JSONReference"]
                  : ["document", "objects", "JSONSchema"],
            },
            init() {
              (this.element = new Zo.Sh()),
                this.element.classes.push("json-schema-dependencies");
            },
          }),
          bp = Ru(Nu, {
            methods: {
              ArrayElement(e) {
                return (
                  (this.element = Ac(e)),
                  this.element.classes.push("json-schema-enum"),
                  vc
                );
              },
            },
          }),
          xp = Ru(Nu, {
            methods: {
              StringElement(e) {
                return (
                  (this.element = Ac(e)),
                  this.element.classes.push("json-schema-type"),
                  vc
                );
              },
              ArrayElement(e) {
                return (
                  (this.element = Ac(e)),
                  this.element.classes.push("json-schema-type"),
                  vc
                );
              },
            },
          }),
          wp = Ru(Bu, ep, Nu, {
            init() {
              (this.element = new Zo.wE()),
                this.element.classes.push("json-schema-allOf");
            },
            methods: {
              ArrayElement(e) {
                return (
                  e.forEach((e) => {
                    const t = tp(e)
                        ? ["document", "objects", "JSONReference"]
                        : ["document", "objects", "JSONSchema"],
                      r = this.toRefractedElement(t, e);
                    this.element.push(r);
                  }),
                  this.copyMetaAndAttributes(e, this.element),
                  vc
                );
              },
            },
          }),
          Ep = Ru(Bu, ep, Nu, {
            init() {
              (this.element = new Zo.wE()),
                this.element.classes.push("json-schema-anyOf");
            },
            methods: {
              ArrayElement(e) {
                return (
                  e.forEach((e) => {
                    const t = tp(e)
                        ? ["document", "objects", "JSONReference"]
                        : ["document", "objects", "JSONSchema"],
                      r = this.toRefractedElement(t, e);
                    this.element.push(r);
                  }),
                  this.copyMetaAndAttributes(e, this.element),
                  vc
                );
              },
            },
          }),
          jp = Ru(Bu, ep, Nu, {
            init() {
              (this.element = new Zo.wE()),
                this.element.classes.push("json-schema-oneOf");
            },
            methods: {
              ArrayElement(e) {
                return (
                  e.forEach((e) => {
                    const t = tp(e)
                        ? ["document", "objects", "JSONReference"]
                        : ["document", "objects", "JSONSchema"],
                      r = this.toRefractedElement(t, e);
                    this.element.push(r);
                  }),
                  this.copyMetaAndAttributes(e, this.element),
                  vc
                );
              },
            },
          }),
          Op = Ru(dp, ep, Nu, {
            props: {
              specPath: (e) =>
                tp(e)
                  ? ["document", "objects", "JSONReference"]
                  : ["document", "objects", "JSONSchema"],
            },
            init() {
              (this.element = new Zo.Sh()),
                this.element.classes.push("json-schema-definitions");
            },
          }),
          Sp = Nu,
          Pp = Nu,
          Ap = Nu,
          $p = Nu,
          _p = Nu,
          kp = Ru(Bu, ep, Nu, {
            init() {
              (this.element = new Zo.wE()),
                this.element.classes.push("json-schema-links");
            },
            methods: {
              ArrayElement(e) {
                return (
                  e.forEach((e) => {
                    const t = this.toRefractedElement(
                      ["document", "objects", "LinkDescription"],
                      e
                    );
                    this.element.push(t);
                  }),
                  this.copyMetaAndAttributes(e, this.element),
                  vc
                );
              },
            },
          }),
          Ip = Nu,
          Tp = Ru(Uu, Nu, {
            props: { specPath: bi(["document", "objects", "JSONReference"]) },
            init() {
              this.element = new ju();
            },
            methods: {
              ObjectElement(e) {
                const t = Uu.compose.methods.ObjectElement.call(this, e);
                return (
                  Ma(this.element.$ref) &&
                    this.element.classes.push("reference-element"),
                  t
                );
              },
            },
          }),
          Cp = Ru(Nu, {
            methods: {
              StringElement(e) {
                return (
                  (this.element = Ac(e)),
                  this.element.classes.push("reference-value"),
                  vc
                );
              },
            },
          });
        const Mp = Ln(function (e, t, r) {
          return Qs(Math.max(e.length, t.length, r.length), function () {
            return e.apply(this, arguments)
              ? t.apply(this, arguments)
              : r.apply(this, arguments);
          });
        });
        const Rp = Nn(function (e) {
          return function (t, r) {
            return e(t, r) ? -1 : e(r, t) ? 1 : 0;
          };
        });
        var Fp = qn(function (e, t) {
          return Array.prototype.slice.call(t, 0).sort(e);
        });
        const Dp = Fp;
        const Np = Vn(0);
        const qp = Nn(ja);
        const Lp = vi(_u);
        const Bp = da(ba, hp);
        function Up(e) {
          return (
            (function (e) {
              if (Array.isArray(e)) return Vp(e);
            })(e) ||
            (function (e) {
              if (
                ("undefined" != typeof Symbol && null != e[Symbol.iterator]) ||
                null != e["@@iterator"]
              )
                return Array.from(e);
            })(e) ||
            (function (e, t) {
              if (!e) return;
              if ("string" == typeof e) return Vp(e, t);
              var r = Object.prototype.toString.call(e).slice(8, -1);
              "Object" === r && e.constructor && (r = e.constructor.name);
              if ("Map" === r || "Set" === r) return Array.from(e);
              if (
                "Arguments" === r ||
                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
              )
                return Vp(e, t);
            })(e) ||
            (function () {
              throw new TypeError(
                "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
              );
            })()
          );
        }
        function Vp(e, t) {
          (null == t || t > e.length) && (t = e.length);
          for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
          return n;
        }
        var zp = Js(
            Dp(
              Rp(function (e, t) {
                return e.length > t.length;
              })
            ),
            Np,
            Ws("length")
          ),
          Hp = Zs(function (e, t, r) {
            var n = r.apply(void 0, Up(e));
            return Lp(n) ? qp(n) : t;
          });
        const Jp = Mp(
            Bp,
            function (e) {
              var t = zp(e);
              return Qs(t, function () {
                for (
                  var t = arguments.length, r = new Array(t), n = 0;
                  n < t;
                  n++
                )
                  r[n] = arguments[n];
                return Us(Hp(r), void 0, e);
              });
            },
            xi
          ),
          Gp = Ru(Bu, {
            props: { alternator: [] },
            methods: {
              enter(e) {
                const t = this.alternator.map(({ predicate: e, specPath: t }) =>
                    Mp(e, bi(t), xi)
                  ),
                  r = Jp(t)(e);
                return (this.element = this.toRefractedElement(r, e)), vc;
              },
            },
          }),
          Wp = Ru(Gp, {
            props: {
              alternator: [
                {
                  predicate: tp,
                  specPath: ["document", "objects", "JSONReference"],
                },
                {
                  predicate: Vc,
                  specPath: ["document", "objects", "JSONSchema"],
                },
              ],
            },
          }),
          Kp = {
            visitors: {
              value: Nu,
              JSONSchemaOrJSONReferenceVisitor: Wp,
              document: {
                objects: {
                  JSONSchema: {
                    $visitor: Vu,
                    fixedFields: {
                      id: zu,
                      $schema: Hu,
                      multipleOf: Ju,
                      maximum: Gu,
                      exclusiveMaximum: Wu,
                      minimum: Ku,
                      exclusiveMinimum: Yu,
                      maxLength: Xu,
                      minLength: Qu,
                      pattern: Zu,
                      additionalItems: Wp,
                      items: rp,
                      maxItems: np,
                      minItems: sp,
                      uniqueItems: ip,
                      maxProperties: op,
                      minProperties: ap,
                      required: cp,
                      properties: yp,
                      additionalProperties: Wp,
                      patternProperties: gp,
                      dependencies: vp,
                      enum: bp,
                      type: xp,
                      allOf: wp,
                      anyOf: Ep,
                      oneOf: jp,
                      not: Wp,
                      definitions: Op,
                      title: Sp,
                      description: Pp,
                      default: Ap,
                      format: $p,
                      base: _p,
                      links: kp,
                      media: { $ref: "#/visitors/document/objects/Media" },
                      readOnly: Ip,
                    },
                  },
                  JSONReference: { $visitor: Tp, fixedFields: { $ref: Cp } },
                  Media: {
                    $visitor: Ru(Uu, Nu, {
                      props: { specPath: bi(["document", "objects", "Media"]) },
                      init() {
                        this.element = new Su();
                      },
                    }),
                    fixedFields: { binaryEncoding: Nu, type: Nu },
                  },
                  LinkDescription: {
                    $visitor: Ru(Uu, Nu, {
                      props: {
                        specPath: bi([
                          "document",
                          "objects",
                          "LinkDescription",
                        ]),
                      },
                      init() {
                        this.element = new Au();
                      },
                    }),
                    fixedFields: {
                      href: Nu,
                      rel: Nu,
                      title: Nu,
                      targetSchema: Wp,
                      mediaType: Nu,
                      method: Nu,
                      encType: Nu,
                      schema: Wp,
                    },
                  },
                },
              },
            },
          },
          Yp = (e) => {
            if (Ca(e))
              return `${
                e.element.charAt(0).toUpperCase() + e.element.slice(1)
              }Element`;
          },
          Xp = {
            JSONSchemaDraft4Element: ["content"],
            JSONReferenceElement: ["content"],
            MediaElement: ["content"],
            LinkDescriptionElement: ["content"],
            ...Mc,
          },
          Qp = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof wu ||
                (e(n) && t("JSONSchemaDraft4", n) && r("object", n))
          ),
          Zp = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof ju ||
                (e(n) && t("JSONReference", n) && r("object", n))
          ),
          eh = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Su || (e(n) && t("media", n) && r("object", n))
          ),
          th = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Au ||
                (e(n) && t("linkDescription", n) && r("object", n))
          ),
          rh = {
            namespace: (e) => {
              const { base: t } = e;
              return (
                t.register("jSONSchemaDraft4", wu),
                t.register("jSONReference", ju),
                t.register("media", Su),
                t.register("linkDescription", Au),
                t
              );
            },
          },
          nh = () => {
            const e = cc(rh);
            return { predicates: { ...o, isStringElement: Ma }, namespace: e };
          },
          sh = (
            e,
            {
              specPath: t = [
                "visitors",
                "document",
                "objects",
                "JSONSchema",
                "$visitor",
              ],
              plugins: r = [],
              specificationObj: n = Kp,
            } = {}
          ) => {
            const s = (0, Zo.e)(e),
              i = Mu(n),
              o = Ea(t, [], i);
            return (
              Fc(s, o, { state: { specObj: i } }),
              Nc(o.element, r, {
                toolboxCreator: nh,
                visitorOptions: { keyMap: Xp, nodeTypeGetter: Yp },
              })
            );
          },
          ih =
            (e) =>
            (t, r = {}) =>
              sh(t, { specPath: e, ...r });
        (wu.refract = ih([
          "visitors",
          "document",
          "objects",
          "JSONSchema",
          "$visitor",
        ])),
          (ju.refract = ih([
            "visitors",
            "document",
            "objects",
            "JSONReference",
            "$visitor",
          ])),
          (Su.refract = ih([
            "visitors",
            "document",
            "objects",
            "Media",
            "$visitor",
          ])),
          (Au.refract = ih([
            "visitors",
            "document",
            "objects",
            "LinkDescription",
            "$visitor",
          ]));
        const oh = class extends wu {
          constructor(e, t, r) {
            super(e, t, r),
              (this.element = "schema"),
              this.classes.push("json-schema-draft-4");
          }
          get idProp() {
            throw new bu("idProp getter in Schema class is not not supported.");
          }
          set idProp(e) {
            throw new bu("idProp setter in Schema class is not not supported.");
          }
          get $schema() {
            throw new bu(
              "$schema getter in Schema class is not not supported."
            );
          }
          set $schema(e) {
            throw new bu(
              "$schema setter in Schema class is not not supported."
            );
          }
          get additionalItems() {
            return this.get("additionalItems");
          }
          set additionalItems(e) {
            this.set("additionalItems", e);
          }
          get items() {
            return this.get("items");
          }
          set items(e) {
            this.set("items", e);
          }
          get additionalProperties() {
            return this.get("additionalProperties");
          }
          set additionalProperties(e) {
            this.set("additionalProperties", e);
          }
          get patternProperties() {
            throw new bu(
              "patternProperties getter in Schema class is not not supported."
            );
          }
          set patternProperties(e) {
            throw new bu(
              "patternProperties setter in Schema class is not not supported."
            );
          }
          get dependencies() {
            throw new bu(
              "dependencies getter in Schema class is not not supported."
            );
          }
          set dependencies(e) {
            throw new bu(
              "dependencies setter in Schema class is not not supported."
            );
          }
          get type() {
            return this.get("type");
          }
          set type(e) {
            this.set("type", e);
          }
          get not() {
            return this.get("not");
          }
          set not(e) {
            this.set("not", e);
          }
          get definitions() {
            throw new bu(
              "definitions getter in Schema class is not not supported."
            );
          }
          set definitions(e) {
            throw new bu(
              "definitions setter in Schema class is not not supported."
            );
          }
          get base() {
            throw new bu("base getter in Schema class is not not supported.");
          }
          set base(e) {
            throw new bu("base setter in Schema class is not not supported.");
          }
          get links() {
            throw new bu("links getter in Schema class is not not supported.");
          }
          set links(e) {
            throw new bu("links setter in Schema class is not not supported.");
          }
          get media() {
            throw new bu("media getter in Schema class is not not supported.");
          }
          set media(e) {
            throw new bu("media setter in Schema class is not not supported.");
          }
          get nullable() {
            return this.get("nullable");
          }
          set nullable(e) {
            this.set("nullable", e);
          }
          get discriminator() {
            return this.get("discriminator");
          }
          set discriminator(e) {
            this.set("discriminator", e);
          }
          get writeOnly() {
            return this.get("writeOnly");
          }
          set writeOnly(e) {
            this.set("writeOnly", e);
          }
          get xml() {
            return this.get("xml");
          }
          set xml(e) {
            this.set("xml", e);
          }
          get externalDocs() {
            return this.get("externalDocs");
          }
          set externalDocs(e) {
            this.set("externalDocs", e);
          }
          get example() {
            return this.get("example");
          }
          set example(e) {
            this.set("example", e);
          }
          get deprecated() {
            return this.get("deprecated");
          }
          set deprecated(e) {
            this.set("deprecated", e);
          }
        };
        class ah extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "securityRequirement");
          }
        }
        const ch = ah;
        class lh extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "securityScheme");
          }
          get type() {
            return this.get("type");
          }
          set type(e) {
            this.set("type", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get name() {
            return this.get("name");
          }
          set name(e) {
            this.set("name", e);
          }
          get in() {
            return this.get("in");
          }
          set in(e) {
            this.set("in", e);
          }
          get scheme() {
            return this.get("scheme");
          }
          set scheme(e) {
            this.set("scheme", e);
          }
          get bearerFormat() {
            return this.get("bearerFormat");
          }
          set bearerFormat(e) {
            this.set("bearerFormat", e);
          }
          get flows() {
            return this.get("flows");
          }
          set flows(e) {
            this.set("flows", e);
          }
          get openIdConnectUrl() {
            return this.get("openIdConnectUrl");
          }
          set openIdConnectUrl(e) {
            this.set("openIdConnectUrl", e);
          }
        }
        const uh = lh;
        class ph extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "server");
          }
          get url() {
            return this.get("url");
          }
          set url(e) {
            this.set("url", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get variables() {
            return this.get("variables");
          }
          set variables(e) {
            this.set("variables", e);
          }
        }
        const hh = ph;
        class fh extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "serverVariable");
          }
          get enum() {
            return this.get("enum");
          }
          set enum(e) {
            this.set("enum", e);
          }
          get default() {
            return this.get("default");
          }
          set default(e) {
            this.set("default", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
        }
        const mh = fh;
        class dh extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "tag");
          }
          get name() {
            return this.get("name");
          }
          set name(e) {
            this.set("name", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get externalDocs() {
            return this.get("externalDocs");
          }
          set externalDocs(e) {
            this.set("externalDocs", e);
          }
        }
        const yh = dh;
        class gh extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "xml");
          }
          get name() {
            return this.get("name");
          }
          set name(e) {
            this.set("name", e);
          }
          get namespace() {
            return this.get("namespace");
          }
          set namespace(e) {
            this.set("namespace", e);
          }
          get prefix() {
            return this.get("prefix");
          }
          set prefix(e) {
            this.set("prefix", e);
          }
          get attribute() {
            return this.get("attribute");
          }
          set attribute(e) {
            this.set("attribute", e);
          }
          get wrapped() {
            return this.get("wrapped");
          }
          set wrapped(e) {
            this.set("wrapped", e);
          }
        }
        const vh = gh,
          bh = (e, t, r = []) => {
            const n = Object.getOwnPropertyDescriptors(t);
            for (let e of r) delete n[e];
            Object.defineProperties(e, n);
          },
          xh = (e, t = [e]) => {
            const r = Object.getPrototypeOf(e);
            return null === r ? t : xh(r, [...t, r]);
          },
          wh = (e, t, r = []) => {
            var n;
            const s =
                null !==
                  (n = ((...e) => {
                    if (0 === e.length) return;
                    let t;
                    const r = e.map((e) => xh(e));
                    for (; r.every((e) => e.length > 0); ) {
                      const e = r.map((e) => e.pop()),
                        n = e[0];
                      if (!e.every((e) => e === n)) break;
                      t = n;
                    }
                    return t;
                  })(...e)) && void 0 !== n
                  ? n
                  : Object.prototype,
              i = Object.create(s),
              o = xh(s);
            for (let t of e) {
              let e = xh(t);
              for (let t = e.length - 1; t >= 0; t--) {
                let n = e[t];
                -1 === o.indexOf(n) &&
                  (bh(i, n, ["constructor", ...r]), o.push(n));
              }
            }
            return (i.constructor = t), i;
          },
          Eh = (e) => e.filter((t, r) => e.indexOf(t) == r),
          jh = (e, t) => {
            const r = t.map((e) => xh(e));
            let n = 0,
              s = !0;
            for (; s; ) {
              s = !1;
              for (let i = t.length - 1; i >= 0; i--) {
                const t = r[i][n];
                if (
                  null != t &&
                  ((s = !0), null != Object.getOwnPropertyDescriptor(t, e))
                )
                  return r[i][0];
              }
              n++;
            }
          },
          Oh = (e, t = Object.prototype) =>
            new Proxy(
              {},
              {
                getPrototypeOf: () => t,
                setPrototypeOf() {
                  throw Error(
                    "Cannot set prototype of Proxies created by ts-mixer"
                  );
                },
                getOwnPropertyDescriptor: (t, r) =>
                  Object.getOwnPropertyDescriptor(jh(r, e) || {}, r),
                defineProperty() {
                  throw new Error(
                    "Cannot define new properties on Proxies created by ts-mixer"
                  );
                },
                has: (r, n) => void 0 !== jh(n, e) || void 0 !== t[n],
                get: (r, n) => (jh(n, e) || t)[n],
                set(t, r, n) {
                  const s = jh(r, e);
                  if (void 0 === s)
                    throw new Error(
                      "Cannot set new properties on Proxies created by ts-mixer"
                    );
                  return (s[r] = n), !0;
                },
                deleteProperty() {
                  throw new Error(
                    "Cannot delete properties on Proxies created by ts-mixer"
                  );
                },
                ownKeys: () =>
                  e
                    .map(Object.getOwnPropertyNames)
                    .reduce((e, t) =>
                      t.concat(e.filter((e) => t.indexOf(e) < 0))
                    ),
              }
            ),
          Sh = null,
          Ph = "copy",
          Ah = "copy",
          $h = "deep",
          _h = new Map(),
          kh = (e) => _h.get(e),
          Ih = (e, t) => {
            var r, n;
            const s = Eh([
                ...Object.getOwnPropertyNames(e),
                ...Object.getOwnPropertyNames(t),
              ]),
              i = {};
            for (let o of s)
              i[o] = Eh([
                ...(null !== (r = null == e ? void 0 : e[o]) && void 0 !== r
                  ? r
                  : []),
                ...(null !== (n = null == t ? void 0 : t[o]) && void 0 !== n
                  ? n
                  : []),
              ]);
            return i;
          },
          Th = (e, t) => {
            var r, n, s, i;
            return {
              property: Ih(
                null !== (r = null == e ? void 0 : e.property) && void 0 !== r
                  ? r
                  : {},
                null !== (n = null == t ? void 0 : t.property) && void 0 !== n
                  ? n
                  : {}
              ),
              method: Ih(
                null !== (s = null == e ? void 0 : e.method) && void 0 !== s
                  ? s
                  : {},
                null !== (i = null == t ? void 0 : t.method) && void 0 !== i
                  ? i
                  : {}
              ),
            };
          },
          Ch = (e, t) => {
            var r, n, s, i, o, a;
            return {
              class: Eh([
                ...(null !== (r = null == e ? void 0 : e.class) && void 0 !== r
                  ? r
                  : []),
                ...(null !== (n = null == t ? void 0 : t.class) && void 0 !== n
                  ? n
                  : []),
              ]),
              static: Th(
                null !== (s = null == e ? void 0 : e.static) && void 0 !== s
                  ? s
                  : {},
                null !== (i = null == t ? void 0 : t.static) && void 0 !== i
                  ? i
                  : {}
              ),
              instance: Th(
                null !== (o = null == e ? void 0 : e.instance) && void 0 !== o
                  ? o
                  : {},
                null !== (a = null == t ? void 0 : t.instance) && void 0 !== a
                  ? a
                  : {}
              ),
            };
          },
          Mh = new Map(),
          Rh = (...e) => {
            const t = ((...e) => {
              var t;
              const r = new Set(),
                n = new Set([...e]);
              for (; n.size > 0; )
                for (let e of n) {
                  const s = [
                    ...xh(e.prototype).map((e) => e.constructor),
                    ...(null !== (t = kh(e)) && void 0 !== t ? t : []),
                  ].filter((e) => !r.has(e));
                  for (let e of s) n.add(e);
                  r.add(e), n.delete(e);
                }
              return [...r];
            })(...e)
              .map((e) => Mh.get(e))
              .filter((e) => !!e);
            return 0 == t.length
              ? {}
              : 1 == t.length
              ? t[0]
              : t.reduce((e, t) => Ch(e, t));
          },
          Fh = (e) => {
            let t = Mh.get(e);
            return t || ((t = {}), Mh.set(e, t)), t;
          };
        function Dh(...e) {
          var t, r, n;
          const s = e.map((e) => e.prototype),
            i = Sh;
          if (null !== i) {
            const e = s.map((e) => e[i]).filter((e) => "function" == typeof e),
              t = {
                [i]: function (...t) {
                  for (let r of e) r.apply(this, t);
                },
              };
            s.push(t);
          }
          function o(...t) {
            for (const r of e) bh(this, new r(...t));
            null !== i &&
              "function" == typeof this[i] &&
              this[i].apply(this, t);
          }
          var a, c;
          (o.prototype =
            "copy" === Ah
              ? wh(s, o)
              : ((a = s), (c = o), Oh([...a, { constructor: c }]))),
            Object.setPrototypeOf(
              o,
              "copy" === Ph
                ? wh(e, null, ["prototype"])
                : Oh(e, Function.prototype)
            );
          let l = o;
          if ("none" !== $h) {
            const s =
              "deep" === $h
                ? Rh(...e)
                : ((...e) => {
                    const t = e.map((e) => Fh(e));
                    return 0 === t.length
                      ? {}
                      : 1 === t.length
                      ? t[0]
                      : t.reduce((e, t) => Ch(e, t));
                  })(...e);
            for (let e of null !== (t = null == s ? void 0 : s.class) &&
            void 0 !== t
              ? t
              : []) {
              const t = e(l);
              t && (l = t);
            }
            Nh(
              null !== (r = null == s ? void 0 : s.static) && void 0 !== r
                ? r
                : {},
              l
            ),
              Nh(
                null !== (n = null == s ? void 0 : s.instance) && void 0 !== n
                  ? n
                  : {},
                l.prototype
              );
          }
          var u, p;
          return (u = l), (p = e), _h.set(u, p), l;
        }
        const Nh = (e, t) => {
          const r = e.property,
            n = e.method;
          if (r) for (let e in r) for (let n of r[e]) n(t, e);
          if (n)
            for (let e in n)
              for (let r of n[e])
                r(t, e, Object.getOwnPropertyDescriptor(t, e));
        };
        const qh = class {
          element;
          constructor(e = {}) {
            Object.assign(this, e);
          }
          copyMetaAndAttributes(e, t) {
            Wa(e) && t.meta.set("sourceMap", e.meta.get("sourceMap"));
          }
        };
        const Lh = class extends qh {
          enter(e) {
            return (this.element = Ac(e)), vc;
          }
        };
        const Bh = class extends qh {
            specObj;
            passingOptionsNames = [
              "specObj",
              "openApiGenericElement",
              "openApiSemanticElement",
            ];
            openApiGenericElement;
            openApiSemanticElement;
            constructor({
              specObj: e,
              passingOptionsNames: t,
              openApiGenericElement: r,
              openApiSemanticElement: n,
              ...s
            }) {
              super({ ...s }),
                (this.specObj = e),
                (this.openApiGenericElement = r),
                (this.openApiSemanticElement = n),
                Array.isArray(t) && (this.passingOptionsNames = t);
            }
            retrievePassingOptions() {
              return Lu(this.passingOptionsNames, this);
            }
            retrieveFixedFields(e) {
              const t = Hn(["visitors", ...e, "fixedFields"], this.specObj);
              return "object" == typeof t && null !== t ? Object.keys(t) : [];
            }
            retrieveVisitor(e) {
              return Jn(ki, ["visitors", ...e], this.specObj)
                ? Hn(["visitors", ...e], this.specObj)
                : Hn(["visitors", ...e, "$visitor"], this.specObj);
            }
            retrieveVisitorInstance(e, t = {}) {
              const r = this.retrievePassingOptions();
              return new (this.retrieveVisitor(e))({ ...r, ...t });
            }
            toRefractedElement(e, t, r = {}) {
              const n = this.retrieveVisitorInstance(e, r);
              return n instanceof Lh &&
                (null == n ? void 0 : n.constructor) === Lh
                ? Ac(t)
                : (Fc(t, n, r), n.element);
            }
          },
          Uh = (e) => Na(e) && e.hasKey("$ref"),
          Vh = Na,
          zh = Na,
          Hh = (e) => Ma(e.key) && fl("x-", Yc(e.key));
        const Jh = class extends Bh {
          specPath;
          ignoredFields;
          canSupportSpecificationExtensions = !0;
          specificationExtensionPredicate = Hh;
          constructor({
            specPath: e,
            ignoredFields: t,
            canSupportSpecificationExtensions: r,
            specificationExtensionPredicate: n,
            ...s
          }) {
            super({ ...s }),
              (this.specPath = e),
              (this.ignoredFields = t || []),
              "boolean" == typeof r &&
                (this.canSupportSpecificationExtensions = r),
              "function" == typeof n &&
                (this.specificationExtensionPredicate = n);
          }
          ObjectElement(e) {
            const t = this.specPath(e),
              r = this.retrieveFixedFields(t);
            return (
              e.forEach((e, n, s) => {
                if (
                  Ma(n) &&
                  r.includes(Yc(n)) &&
                  !this.ignoredFields.includes(Yc(n))
                ) {
                  const r = this.toRefractedElement(
                      [...t, "fixedFields", Yc(n)],
                      e
                    ),
                    i = new Zo.Pr(Ac(n), r);
                  this.copyMetaAndAttributes(s, i),
                    i.classes.push("fixed-field"),
                    this.element.content.push(i);
                } else if (
                  this.canSupportSpecificationExtensions &&
                  this.specificationExtensionPredicate(s)
                ) {
                  const e = this.toRefractedElement(
                    ["document", "extension"],
                    s
                  );
                  this.element.content.push(e);
                } else
                  this.ignoredFields.includes(Yc(n)) ||
                    this.element.content.push(Ac(s));
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        };
        class Gh extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new ru()),
              (this.specPath = bi(["document", "objects", "OpenApi"])),
              (this.canSupportSpecificationExtensions = !0);
          }
          ObjectElement(e) {
            return Jh.prototype.ObjectElement.call(this, e);
          }
        }
        const Wh = Gh;
        class Kh extends Dh(Bh, Lh) {
          StringElement(e) {
            const t = new eu(Yc(e));
            return this.copyMetaAndAttributes(e, t), (this.element = t), vc;
          }
        }
        const Yh = Kh;
        const Xh = class extends Bh {
          MemberElement(e) {
            return (
              (this.element = Ac(e)),
              this.element.classes.push("specification-extension"),
              vc
            );
          }
        };
        class Qh extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Ul()),
              (this.specPath = bi(["document", "objects", "Info"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const Zh = Qh;
        const ef = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return (
              this.element.classes.push("api-version"),
              this.element.classes.push("version"),
              t
            );
          }
        };
        class tf extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new kl()),
              (this.specPath = bi(["document", "objects", "Contact"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const rf = tf;
        class nf extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new zl()),
              (this.specPath = bi(["document", "objects", "License"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const sf = nf;
        class of extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Jl()),
              (this.specPath = bi(["document", "objects", "Link"])),
              (this.canSupportSpecificationExtensions = !0);
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              (Ma(this.element.operationId) || Ma(this.element.operationRef)) &&
                this.element.classes.push("reference-element"),
              t
            );
          }
        }
        const af = of;
        const cf = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("reference-value"), t;
          }
        };
        const lf = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("reference-value"), t;
          }
        };
        const uf = class extends Bh {
          specPath;
          ignoredFields;
          fieldPatternPredicate = pc;
          canSupportSpecificationExtensions = !1;
          specificationExtensionPredicate = Hh;
          constructor({
            specPath: e,
            ignoredFields: t,
            fieldPatternPredicate: r,
            canSupportSpecificationExtensions: n,
            specificationExtensionPredicate: s,
            ...i
          }) {
            super({ ...i }),
              (this.specPath = e),
              (this.ignoredFields = t || []),
              "function" == typeof r && (this.fieldPatternPredicate = r),
              "boolean" == typeof n &&
                (this.canSupportSpecificationExtensions = n),
              "function" == typeof s &&
                (this.specificationExtensionPredicate = s);
          }
          ObjectElement(e) {
            return (
              e.forEach((e, t, r) => {
                if (
                  this.canSupportSpecificationExtensions &&
                  this.specificationExtensionPredicate(r)
                ) {
                  const e = this.toRefractedElement(
                    ["document", "extension"],
                    r
                  );
                  this.element.content.push(e);
                } else if (
                  !this.ignoredFields.includes(Yc(t)) &&
                  this.fieldPatternPredicate(Yc(t))
                ) {
                  const n = this.specPath(e),
                    s = this.toRefractedElement(n, e),
                    i = new Zo.Pr(Ac(t), s);
                  this.copyMetaAndAttributes(r, i),
                    i.classes.push("patterned-field"),
                    this.element.content.push(i);
                } else
                  this.ignoredFields.includes(Yc(t)) ||
                    this.element.content.push(Ac(r));
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        };
        const pf = class extends uf {
          constructor(e) {
            super(e), (this.fieldPatternPredicate = fp);
          }
        };
        class hf extends Zo.Sh {
          static primaryClass = "link-parameters";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(hf.primaryClass);
          }
        }
        const ff = hf;
        class mf extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new ff()),
              (this.specPath = bi(["value"]));
          }
        }
        const df = mf;
        class yf extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new hh()),
              (this.specPath = bi(["document", "objects", "Server"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const gf = yf;
        const vf = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("server-url"), t;
          }
        };
        class bf extends Zo.wE {
          static primaryClass = "servers";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(bf.primaryClass);
          }
        }
        const xf = bf;
        class wf extends Dh(Bh, Lh) {
          constructor(e) {
            super(e), (this.element = new xf());
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                const t = Vh(e) ? ["document", "objects", "Server"] : ["value"],
                  r = this.toRefractedElement(t, e);
                this.element.push(r);
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const Ef = wf;
        class jf extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new mh()),
              (this.specPath = bi(["document", "objects", "ServerVariable"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const Of = jf;
        class Sf extends Zo.Sh {
          static primaryClass = "server-variables";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Sf.primaryClass);
          }
        }
        const Pf = Sf;
        class Af extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Pf()),
              (this.specPath = bi(["document", "objects", "ServerVariable"]));
          }
        }
        const $f = Af;
        class _f extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Wl()),
              (this.specPath = bi(["document", "objects", "MediaType"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const kf = _f;
        const If = class extends Bh {
            alternator;
            constructor({ alternator: e, ...t }) {
              super({ ...t }), (this.alternator = e || []);
            }
            enter(e) {
              const t = this.alternator.map(({ predicate: e, specPath: t }) =>
                  Mp(e, bi(t), xi)
                ),
                r = Jp(t)(e);
              return (this.element = this.toRefractedElement(r, e)), vc;
            }
          },
          Tf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Pl || (e(n) && t("callback", n) && r("object", n))
          ),
          Cf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof $l ||
                (e(n) && t("components", n) && r("object", n))
          ),
          Mf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof kl || (e(n) && t("contact", n) && r("object", n))
          ),
          Rf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Fl || (e(n) && t("example", n) && r("object", n))
          ),
          Ff = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Nl ||
                (e(n) && t("externalDocumentation", n) && r("object", n))
          ),
          Df = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Ll || (e(n) && t("header", n) && r("object", n))
          ),
          Nf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Ul || (e(n) && t("info", n) && r("object", n))
          ),
          qf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof zl || (e(n) && t("license", n) && r("object", n))
          ),
          Lf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Jl || (e(n) && t("link", n) && r("object", n))
          ),
          Bf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof eu || (e(n) && t("openapi", n) && r("string", n))
          ),
          Uf = Ta(
            ({
                hasBasicElementProps: e,
                isElementType: t,
                primitiveEq: r,
                hasClass: n,
              }) =>
              (s) =>
                s instanceof ru ||
                (e(s) && t("openApi3_0", s) && r("object", s) && n("api", s))
          ),
          Vf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof su || (e(n) && t("operation", n) && r("object", n))
          ),
          zf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof ou || (e(n) && t("parameter", n) && r("object", n))
          ),
          Hf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof cu || (e(n) && t("pathItem", n) && r("object", n))
          ),
          Jf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof uu || (e(n) && t("paths", n) && r("object", n))
          ),
          Gf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof hu || (e(n) && t("reference", n) && r("object", n))
          ),
          Wf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof mu ||
                (e(n) && t("requestBody", n) && r("object", n))
          ),
          Kf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof yu || (e(n) && t("response", n) && r("object", n))
          ),
          Yf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof vu || (e(n) && t("responses", n) && r("object", n))
          ),
          Xf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof oh || (e(n) && t("schema", n) && r("object", n))
          ),
          Qf = (e) => Da(e) && e.classes.includes("boolean-json-schema"),
          Zf = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof ch ||
                (e(n) && t("securityRequirement", n) && r("object", n))
          ),
          em = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof hh || (e(n) && t("server", n) && r("object", n))
          ),
          tm = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof mh ||
                (e(n) && t("serverVariable", n) && r("object", n))
          ),
          rm = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Wl || (e(n) && t("mediaType", n) && r("object", n))
          ),
          nm = Ta(
            ({
                hasBasicElementProps: e,
                isElementType: t,
                primitiveEq: r,
                hasClass: n,
              }) =>
              (s) =>
                s instanceof xf ||
                (e(s) && t("array", s) && r("array", s) && n("servers", s))
          );
        class sm extends Dh(If, Lh) {
          constructor(e) {
            super(e),
              (this.alternator = [
                {
                  predicate: Uh,
                  specPath: ["document", "objects", "Reference"],
                },
                { predicate: Vc, specPath: ["document", "objects", "Schema"] },
              ]);
          }
          ObjectElement(e) {
            const t = If.prototype.enter.call(this, e);
            return (
              Gf(this.element) &&
                this.element.setMetaProperty("referenced-element", "schema"),
              t
            );
          }
        }
        const im = sm;
        class om extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.Sh()),
              this.element.classes.push("examples"),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Example"]),
              (this.canSupportSpecificationExtensions = !0);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "example");
              }),
              t
            );
          }
        }
        const am = om;
        class cm extends Zo.Sh {
          static primaryClass = "media-type-examples";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(cm.primaryClass),
              this.classes.push("examples");
          }
        }
        const lm = cm;
        const um = class extends am {
          constructor(e) {
            super(e), (this.element = new lm());
          }
        };
        class pm extends Zo.Sh {
          static primaryClass = "media-type-encoding";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(pm.primaryClass);
          }
        }
        const hm = pm;
        class fm extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new hm()),
              (this.specPath = bi(["document", "objects", "Encoding"]));
          }
        }
        const mm = fm;
        class dm extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new ch()),
              (this.specPath = bi(["value"]));
          }
        }
        const ym = dm;
        class gm extends Zo.wE {
          static primaryClass = "security";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(gm.primaryClass);
          }
        }
        const vm = gm;
        class bm extends Dh(Bh, Lh) {
          constructor(e) {
            super(e), (this.element = new vm());
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                if (Na(e)) {
                  const t = this.toRefractedElement(
                    ["document", "objects", "SecurityRequirement"],
                    e
                  );
                  this.element.push(t);
                } else this.element.push(Ac(e));
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const xm = bm;
        class wm extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new $l()),
              (this.specPath = bi(["document", "objects", "Components"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const Em = wm;
        class jm extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new yh()),
              (this.specPath = bi(["document", "objects", "Tag"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const Om = jm;
        class Sm extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new hu()),
              (this.specPath = bi(["document", "objects", "Reference"])),
              (this.canSupportSpecificationExtensions = !1);
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              Ma(this.element.$ref) &&
                this.element.classes.push("reference-element"),
              t
            );
          }
        }
        const Pm = Sm;
        const Am = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("reference-value"), t;
          }
        };
        class $m extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new ou()),
              (this.specPath = bi(["document", "objects", "Parameter"])),
              (this.canSupportSpecificationExtensions = !0);
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              Na(this.element.contentProp) &&
                this.element.contentProp.filter(rm).forEach((e, t) => {
                  e.setMetaProperty("media-type", Yc(t));
                }),
              t
            );
          }
        }
        const _m = $m;
        class km extends Dh(If, Lh) {
          constructor(e) {
            super(e),
              (this.alternator = [
                {
                  predicate: Uh,
                  specPath: ["document", "objects", "Reference"],
                },
                { predicate: Vc, specPath: ["document", "objects", "Schema"] },
              ]);
          }
          ObjectElement(e) {
            const t = If.prototype.enter.call(this, e);
            return (
              Gf(this.element) &&
                this.element.setMetaProperty("referenced-element", "schema"),
              t
            );
          }
        }
        const Im = km;
        class Tm extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Ll()),
              (this.specPath = bi(["document", "objects", "Header"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const Cm = Tm;
        class Mm extends Dh(If, Lh) {
          constructor(e) {
            super(e),
              (this.alternator = [
                {
                  predicate: Uh,
                  specPath: ["document", "objects", "Reference"],
                },
                { predicate: Vc, specPath: ["document", "objects", "Schema"] },
              ]);
          }
          ObjectElement(e) {
            const t = If.prototype.enter.call(this, e);
            return (
              Gf(this.element) &&
                this.element.setMetaProperty("referenced-element", "schema"),
              t
            );
          }
        }
        const Rm = Mm;
        class Fm extends Zo.Sh {
          static primaryClass = "header-examples";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(Fm.primaryClass),
              this.classes.push("examples");
          }
        }
        const Dm = Fm;
        const Nm = class extends am {
          constructor(e) {
            super(e), (this.element = new Dm());
          }
        };
        class qm extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.Sh()),
              this.element.classes.push("content"),
              (this.specPath = bi(["document", "objects", "MediaType"]));
          }
        }
        const Lm = qm;
        class Bm extends Zo.Sh {
          static primaryClass = "header-content";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(Bm.primaryClass),
              this.classes.push("content");
          }
        }
        const Um = Bm;
        const Vm = class extends Lm {
          constructor(e) {
            super(e), (this.element = new Um());
          }
        };
        class zm extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new oh()),
              (this.specPath = bi(["document", "objects", "Schema"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const Hm = zm,
          { allOf: Jm } = Kp.visitors.document.objects.JSONSchema.fixedFields,
          Gm = Jm.compose({
            methods: {
              ArrayElement(e) {
                const t = Jm.compose.methods.ArrayElement.call(this, e);
                return (
                  this.element.filter(Gf).forEach((e) => {
                    e.setMetaProperty("referenced-element", "schema");
                  }),
                  t
                );
              },
            },
          }),
          { anyOf: Wm } = Kp.visitors.document.objects.JSONSchema.fixedFields,
          Km = Wm.compose({
            methods: {
              ArrayElement(e) {
                const t = Wm.compose.methods.ArrayElement.call(this, e);
                return (
                  this.element.filter(Gf).forEach((e) => {
                    e.setMetaProperty("referenced-element", "schema");
                  }),
                  t
                );
              },
            },
          }),
          { oneOf: Ym } = Kp.visitors.document.objects.JSONSchema.fixedFields,
          Xm = Ym.compose({
            methods: {
              ArrayElement(e) {
                const t = Ym.compose.methods.ArrayElement.call(this, e);
                return (
                  this.element.filter(Gf).forEach((e) => {
                    e.setMetaProperty("referenced-element", "schema");
                  }),
                  t
                );
              },
            },
          }),
          { items: Qm } = Kp.visitors.document.objects.JSONSchema.fixedFields,
          Zm = Qm.compose({
            methods: {
              ObjectElement(e) {
                const t = Qm.compose.methods.ObjectElement.call(this, e);
                return (
                  Gf(this.element) &&
                    this.element.setMetaProperty(
                      "referenced-element",
                      "schema"
                    ),
                  t
                );
              },
              ArrayElement(e) {
                return (this.element = Ac(e)), vc;
              },
            },
          }),
          { properties: ed } =
            Kp.visitors.document.objects.JSONSchema.fixedFields,
          td = ed.compose({
            methods: {
              ObjectElement(e) {
                const t = ed.compose.methods.ObjectElement.call(this, e);
                return (
                  this.element.filter(Gf).forEach((e) => {
                    e.setMetaProperty("referenced-element", "schema");
                  }),
                  t
                );
              },
            },
          }),
          { type: rd } = Kp.visitors.document.objects.JSONSchema.fixedFields,
          nd = rd.compose({
            methods: {
              ArrayElement(e) {
                return (this.element = Ac(e)), vc;
              },
            },
          }),
          { JSONSchemaOrJSONReferenceVisitor: sd } = Kp.visitors,
          id = sd.compose({
            methods: {
              ObjectElement(e) {
                const t = sd.compose.methods.enter.call(this, e);
                return (
                  Gf(this.element) &&
                    this.element.setMetaProperty(
                      "referenced-element",
                      "schema"
                    ),
                  t
                );
              },
            },
          });
        class od extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Tl()),
              (this.specPath = bi(["document", "objects", "Discriminator"])),
              (this.canSupportSpecificationExtensions = !1);
          }
        }
        const ad = od;
        class cd extends Zo.Sh {
          static primaryClass = "discriminator-mapping";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(cd.primaryClass);
          }
        }
        const ld = cd;
        class ud extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new ld()),
              (this.specPath = bi(["value"]));
          }
        }
        const pd = ud;
        class hd extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new vh()),
              (this.specPath = bi(["document", "objects", "XML"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const fd = hd;
        class md extends Zo.Sh {
          static primaryClass = "parameter-examples";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(md.primaryClass),
              this.classes.push("examples");
          }
        }
        const dd = md;
        const yd = class extends am {
          constructor(e) {
            super(e), (this.element = new dd());
          }
        };
        class gd extends Zo.Sh {
          static primaryClass = "parameter-content";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(gd.primaryClass),
              this.classes.push("content");
          }
        }
        const vd = gd;
        const bd = class extends Lm {
          constructor(e) {
            super(e), (this.element = new vd());
          }
        };
        class xd extends Zo.Sh {
          static primaryClass = "components-schemas";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(xd.primaryClass);
          }
        }
        const wd = xd;
        class Ed extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new wd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Schema"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "schema");
              }),
              t
            );
          }
        }
        const jd = Ed;
        class Od extends Zo.Sh {
          static primaryClass = "components-responses";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Od.primaryClass);
          }
        }
        const Sd = Od;
        class Pd extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Sd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Response"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "response");
              }),
              this.element.filter(Kf).forEach((e, t) => {
                e.setMetaProperty("http-status-code", Yc(t));
              }),
              t
            );
          }
        }
        const Ad = Pd;
        class $d extends Zo.Sh {
          static primaryClass = "components-parameters";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push($d.primaryClass),
              this.classes.push("parameters");
          }
        }
        const _d = $d;
        class kd extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new _d()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Parameter"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "parameter");
              }),
              t
            );
          }
        }
        const Id = kd;
        class Td extends Zo.Sh {
          static primaryClass = "components-examples";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(Td.primaryClass),
              this.classes.push("examples");
          }
        }
        const Cd = Td;
        class Md extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Cd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Example"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "example");
              }),
              t
            );
          }
        }
        const Rd = Md;
        class Fd extends Zo.Sh {
          static primaryClass = "components-request-bodies";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Fd.primaryClass);
          }
        }
        const Dd = Fd;
        class Nd extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Dd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "RequestBody"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "requestBody");
              }),
              t
            );
          }
        }
        const qd = Nd;
        class Ld extends Zo.Sh {
          static primaryClass = "components-headers";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Ld.primaryClass);
          }
        }
        const Bd = Ld;
        class Ud extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Bd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Header"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "header");
              }),
              this.element.filter(Df).forEach((e, t) => {
                e.setMetaProperty("header-name", Yc(t));
              }),
              t
            );
          }
        }
        const Vd = Ud;
        class zd extends Zo.Sh {
          static primaryClass = "components-security-schemes";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(zd.primaryClass);
          }
        }
        const Hd = zd;
        class Jd extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Hd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "SecurityScheme"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "securityScheme");
              }),
              t
            );
          }
        }
        const Gd = Jd;
        class Wd extends Zo.Sh {
          static primaryClass = "components-links";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Wd.primaryClass);
          }
        }
        const Kd = Wd;
        class Yd extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Kd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Link"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "link");
              }),
              t
            );
          }
        }
        const Xd = Yd;
        class Qd extends Zo.Sh {
          static primaryClass = "components-callbacks";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Qd.primaryClass);
          }
        }
        const Zd = Qd;
        class ey extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zd()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Callback"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "callback");
              }),
              t
            );
          }
        }
        const ty = ey;
        class ry extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Fl()),
              (this.specPath = bi(["document", "objects", "Example"])),
              (this.canSupportSpecificationExtensions = !0);
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              Ma(this.element.externalValue) &&
                this.element.classes.push("reference-element"),
              t
            );
          }
        }
        const ny = ry;
        const sy = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("reference-value"), t;
          }
        };
        class iy extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Nl()),
              (this.specPath = bi([
                "document",
                "objects",
                "ExternalDocumentation",
              ])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const oy = iy;
        class ay extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Ml()),
              (this.specPath = bi(["document", "objects", "Encoding"])),
              (this.canSupportSpecificationExtensions = !0);
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              Na(this.element.headers) &&
                this.element.headers.filter(Df).forEach((e, t) => {
                  e.setMetaProperty("header-name", Yc(t));
                }),
              t
            );
          }
        }
        const cy = ay;
        class ly extends Zo.Sh {
          static primaryClass = "encoding-headers";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(ly.primaryClass);
          }
        }
        const uy = ly;
        class py extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new uy()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Header"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "header");
              }),
              this.element.forEach((e, t) => {
                if (!Df(e)) return;
                const r = Yc(t);
                e.setMetaProperty("headerName", r);
              }),
              t
            );
          }
        }
        const hy = py;
        class fy extends Dh(uf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new uu()),
              (this.specPath = bi(["document", "objects", "PathItem"])),
              (this.canSupportSpecificationExtensions = !0),
              (this.fieldPatternPredicate = Vc);
          }
          ObjectElement(e) {
            const t = uf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Hf).forEach((e, t) => {
                t.classes.push("openapi-path-template"),
                  t.classes.push("path-template"),
                  e.setMetaProperty("path", Ac(t));
              }),
              t
            );
          }
        }
        const my = fy;
        class dy extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new mu()),
              (this.specPath = bi(["document", "objects", "RequestBody"]));
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              Na(this.element.contentProp) &&
                this.element.contentProp.filter(rm).forEach((e, t) => {
                  e.setMetaProperty("media-type", Yc(t));
                }),
              t
            );
          }
        }
        const yy = dy;
        class gy extends Zo.Sh {
          static primaryClass = "request-body-content";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(gy.primaryClass),
              this.classes.push("content");
          }
        }
        const vy = gy;
        const by = class extends Lm {
          constructor(e) {
            super(e), (this.element = new vy());
          }
        };
        class xy extends Dh(uf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Pl()),
              (this.specPath = bi(["document", "objects", "PathItem"])),
              (this.canSupportSpecificationExtensions = !0),
              (this.fieldPatternPredicate = (e) =>
                /{(?<expression>[^}]{1,2083})}/.test(String(e)));
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Hf).forEach((e, t) => {
                e.setMetaProperty("runtime-expression", Yc(t));
              }),
              t
            );
          }
        }
        const wy = xy;
        class Ey extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new yu()),
              (this.specPath = bi(["document", "objects", "Response"]));
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              Na(this.element.contentProp) &&
                this.element.contentProp.filter(rm).forEach((e, t) => {
                  e.setMetaProperty("media-type", Yc(t));
                }),
              Na(this.element.headers) &&
                this.element.headers.filter(Df).forEach((e, t) => {
                  e.setMetaProperty("header-name", Yc(t));
                }),
              t
            );
          }
        }
        const jy = Ey;
        class Oy extends Zo.Sh {
          static primaryClass = "response-headers";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Oy.primaryClass);
          }
        }
        const Sy = Oy;
        class Py extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Sy()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Header"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "header");
              }),
              this.element.forEach((e, t) => {
                if (!Df(e)) return;
                const r = Yc(t);
                e.setMetaProperty("header-name", r);
              }),
              t
            );
          }
        }
        const Ay = Py;
        class $y extends Zo.Sh {
          static primaryClass = "response-content";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push($y.primaryClass),
              this.classes.push("content");
          }
        }
        const _y = $y;
        const ky = class extends Lm {
          constructor(e) {
            super(e), (this.element = new _y());
          }
        };
        class Iy extends Zo.Sh {
          static primaryClass = "response-links";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Iy.primaryClass);
          }
        }
        const Ty = Iy;
        class Cy extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Ty()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Link"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "link");
              }),
              t
            );
          }
        }
        const My = Cy;
        function Ry(e) {
          return "[object Number]" === Object.prototype.toString.call(e);
        }
        var Fy = qn(function (e, t) {
          if (!Ry(e) || !Ry(t))
            throw new TypeError("Both arguments to range must be numbers");
          for (var r = [], n = e; n < t; ) r.push(n), (n += 1);
          return r;
        });
        const Dy = Fy;
        function Ny(e, t, r) {
          var n,
            s = typeof e;
          switch (s) {
            case "string":
            case "number":
              return 0 === e && 1 / e == -1 / 0
                ? !!r._items["-0"] || (t && (r._items["-0"] = !0), !1)
                : null !== r._nativeSet
                ? t
                  ? ((n = r._nativeSet.size),
                    r._nativeSet.add(e),
                    r._nativeSet.size === n)
                  : r._nativeSet.has(e)
                : s in r._items
                ? e in r._items[s] || (t && (r._items[s][e] = !0), !1)
                : (t && ((r._items[s] = {}), (r._items[s][e] = !0)), !1);
            case "boolean":
              if (s in r._items) {
                var i = e ? 1 : 0;
                return !!r._items[s][i] || (t && (r._items[s][i] = !0), !1);
              }
              return t && (r._items[s] = e ? [!1, !0] : [!0, !1]), !1;
            case "function":
              return null !== r._nativeSet
                ? t
                  ? ((n = r._nativeSet.size),
                    r._nativeSet.add(e),
                    r._nativeSet.size === n)
                  : r._nativeSet.has(e)
                : s in r._items
                ? !!us(e, r._items[s]) || (t && r._items[s].push(e), !1)
                : (t && (r._items[s] = [e]), !1);
            case "undefined":
              return !!r._items[s] || (t && (r._items[s] = !0), !1);
            case "object":
              if (null === e)
                return !!r._items.null || (t && (r._items.null = !0), !1);
            default:
              return (s = Object.prototype.toString.call(e)) in r._items
                ? !!us(e, r._items[s]) || (t && r._items[s].push(e), !1)
                : (t && (r._items[s] = [e]), !1);
          }
        }
        const qy = (function () {
          function e() {
            (this._nativeSet = "function" == typeof Set ? new Set() : null),
              (this._items = {});
          }
          return (
            (e.prototype.add = function (e) {
              return !Ny(e, !0, this);
            }),
            (e.prototype.has = function (e) {
              return Ny(e, !1, this);
            }),
            e
          );
        })();
        var Ly = qn(function (e, t) {
          for (
            var r = [], n = 0, s = e.length, i = t.length, o = new qy(), a = 0;
            a < i;
            a += 1
          )
            o.add(t[a]);
          for (; n < s; ) o.add(e[n]) && (r[r.length] = e[n]), (n += 1);
          return r;
        });
        const By = Ly;
        class Uy extends Dh(Jh, uf) {
          specPathFixedFields;
          specPathPatternedFields;
          constructor({
            specPathFixedFields: e,
            specPathPatternedFields: t,
            ...r
          }) {
            super({ ...r }),
              (this.specPathFixedFields = e),
              (this.specPathPatternedFields = t);
          }
          ObjectElement(e) {
            const { specPath: t, ignoredFields: r } = this;
            try {
              this.specPath = this.specPathFixedFields;
              const t = this.retrieveFixedFields(this.specPath(e));
              (this.ignoredFields = [...r, ...By(e.keys(), t)]),
                Jh.prototype.ObjectElement.call(this, e),
                (this.specPath = this.specPathPatternedFields),
                (this.ignoredFields = t),
                uf.prototype.ObjectElement.call(this, e);
            } catch (e) {
              throw ((this.specPath = t), e);
            }
            return vc;
          }
        }
        const Vy = Uy;
        class zy extends Dh(Vy, Lh) {
          constructor(e) {
            super(e),
              (this.element = new vu()),
              (this.specPathFixedFields = bi([
                "document",
                "objects",
                "Responses",
              ])),
              (this.canSupportSpecificationExtensions = !0),
              (this.specPathPatternedFields = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Response"]),
              (this.fieldPatternPredicate = (e) =>
                new RegExp(
                  `^(1XX|2XX|3XX|4XX|5XX|${Dy(100, 600).join("|")})$`
                ).test(String(e)));
          }
          ObjectElement(e) {
            const t = Vy.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "response");
              }),
              this.element.filter(Kf).forEach((e, t) => {
                const r = Ac(t);
                this.fieldPatternPredicate(Yc(r)) &&
                  e.setMetaProperty("http-status-code", r);
              }),
              t
            );
          }
        }
        const Hy = zy;
        class Jy extends Dh(If, Lh) {
          constructor(e) {
            super(e),
              (this.alternator = [
                {
                  predicate: Uh,
                  specPath: ["document", "objects", "Reference"],
                },
                {
                  predicate: Vc,
                  specPath: ["document", "objects", "Response"],
                },
              ]);
          }
          ObjectElement(e) {
            const t = If.prototype.enter.call(this, e);
            return (
              Gf(this.element)
                ? this.element.setMetaProperty("referenced-element", "response")
                : Kf(this.element) &&
                  this.element.setMetaProperty("http-status-code", "default"),
              t
            );
          }
        }
        const Gy = Jy;
        class Wy extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new su()),
              (this.specPath = bi(["document", "objects", "Operation"]));
          }
        }
        const Ky = Wy;
        class Yy extends Zo.wE {
          static primaryClass = "operation-tags";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Yy.primaryClass);
          }
        }
        const Xy = Yy;
        const Qy = class extends Lh {
          constructor(e) {
            super(e), (this.element = new Xy());
          }
          ArrayElement(e) {
            return (this.element = this.element.concat(Ac(e))), vc;
          }
        };
        class Zy extends Zo.wE {
          static primaryClass = "operation-parameters";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(Zy.primaryClass),
              this.classes.push("parameters");
          }
        }
        const eg = Zy;
        class tg extends Dh(Bh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.wE()),
              this.element.classes.push("parameters");
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                const t = Uh(e)
                    ? ["document", "objects", "Reference"]
                    : ["document", "objects", "Parameter"],
                  r = this.toRefractedElement(t, e);
                Gf(r) && r.setMetaProperty("referenced-element", "parameter"),
                  this.element.push(r);
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const rg = tg;
        const ng = class extends rg {
          constructor(e) {
            super(e), (this.element = new eg());
          }
        };
        const sg = class extends If {
          constructor(e) {
            super(e),
              (this.alternator = [
                {
                  predicate: Uh,
                  specPath: ["document", "objects", "Reference"],
                },
                {
                  predicate: Vc,
                  specPath: ["document", "objects", "RequestBody"],
                },
              ]);
          }
          ObjectElement(e) {
            const t = If.prototype.enter.call(this, e);
            return (
              Gf(this.element) &&
                this.element.setMetaProperty(
                  "referenced-element",
                  "requestBody"
                ),
              t
            );
          }
        };
        class ig extends Zo.Sh {
          static primaryClass = "operation-callbacks";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(ig.primaryClass);
          }
        }
        const og = ig;
        class ag extends Dh(pf, Lh) {
          specPath;
          constructor(e) {
            super(e),
              (this.element = new og()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "Callback"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Gf).forEach((e) => {
                e.setMetaProperty("referenced-element", "callback");
              }),
              t
            );
          }
        }
        const cg = ag;
        class lg extends Zo.wE {
          static primaryClass = "operation-security";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(lg.primaryClass),
              this.classes.push("security");
          }
        }
        const ug = lg;
        class pg extends Dh(Bh, Lh) {
          constructor(e) {
            super(e), (this.element = new ug());
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                const t = Na(e)
                    ? ["document", "objects", "SecurityRequirement"]
                    : ["value"],
                  r = this.toRefractedElement(t, e);
                this.element.push(r);
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const hg = pg;
        class fg extends Zo.wE {
          static primaryClass = "operation-servers";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(fg.primaryClass),
              this.classes.push("servers");
          }
        }
        const mg = fg;
        const dg = class extends Ef {
          constructor(e) {
            super(e), (this.element = new mg());
          }
        };
        class yg extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new cu()),
              (this.specPath = bi(["document", "objects", "PathItem"]));
          }
          ObjectElement(e) {
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Vf).forEach((e, t) => {
                const r = Ac(t);
                (r.content = Yc(r).toUpperCase()),
                  e.setMetaProperty("http-method", r);
              }),
              Ma(this.element.$ref) &&
                this.element.classes.push("reference-element"),
              t
            );
          }
        }
        const gg = yg;
        const vg = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("reference-value"), t;
          }
        };
        class bg extends Zo.wE {
          static primaryClass = "path-item-servers";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(bg.primaryClass),
              this.classes.push("servers");
          }
        }
        const xg = bg;
        const wg = class extends Ef {
          constructor(e) {
            super(e), (this.element = new xg());
          }
        };
        class Eg extends Zo.wE {
          static primaryClass = "path-item-parameters";
          constructor(e, t, r) {
            super(e, t, r),
              this.classes.push(Eg.primaryClass),
              this.classes.push("parameters");
          }
        }
        const jg = Eg;
        const Og = class extends rg {
          constructor(e) {
            super(e), (this.element = new jg());
          }
        };
        class Sg extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new uh()),
              (this.specPath = bi(["document", "objects", "SecurityScheme"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const Pg = Sg;
        class Ag extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Ql()),
              (this.specPath = bi(["document", "objects", "OAuthFlows"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const $g = Ag;
        class _g extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Yl()),
              (this.specPath = bi(["document", "objects", "OAuthFlow"])),
              (this.canSupportSpecificationExtensions = !0);
          }
        }
        const kg = _g;
        class Ig extends Zo.Sh {
          static primaryClass = "oauth-flow-scopes";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Ig.primaryClass);
          }
        }
        const Tg = Ig;
        class Cg extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Tg()),
              (this.specPath = bi(["value"]));
          }
        }
        const Mg = Cg;
        class Rg extends Zo.wE {
          static primaryClass = "tags";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Rg.primaryClass);
          }
        }
        const Fg = Rg;
        class Dg extends Dh(Bh, Lh) {
          constructor(e) {
            super(e), (this.element = new Fg());
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                const t = zh(e) ? ["document", "objects", "Tag"] : ["value"],
                  r = this.toRefractedElement(t, e);
                this.element.push(r);
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const Ng = Dg,
          { fixedFields: qg } = Kp.visitors.document.objects.JSONSchema,
          Lg = {
            visitors: {
              value: Lh,
              document: {
                objects: {
                  OpenApi: {
                    $visitor: Wh,
                    fixedFields: {
                      openapi: Yh,
                      info: { $ref: "#/visitors/document/objects/Info" },
                      servers: Ef,
                      paths: { $ref: "#/visitors/document/objects/Paths" },
                      components: {
                        $ref: "#/visitors/document/objects/Components",
                      },
                      security: xm,
                      tags: Ng,
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                    },
                  },
                  Info: {
                    $visitor: Zh,
                    fixedFields: {
                      title: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      termsOfService: { $ref: "#/visitors/value" },
                      contact: { $ref: "#/visitors/document/objects/Contact" },
                      license: { $ref: "#/visitors/document/objects/License" },
                      version: ef,
                    },
                  },
                  Contact: {
                    $visitor: rf,
                    fixedFields: {
                      name: { $ref: "#/visitors/value" },
                      url: { $ref: "#/visitors/value" },
                      email: { $ref: "#/visitors/value" },
                    },
                  },
                  License: {
                    $visitor: sf,
                    fixedFields: {
                      name: { $ref: "#/visitors/value" },
                      url: { $ref: "#/visitors/value" },
                    },
                  },
                  Server: {
                    $visitor: gf,
                    fixedFields: {
                      url: vf,
                      description: { $ref: "#/visitors/value" },
                      variables: $f,
                    },
                  },
                  ServerVariable: {
                    $visitor: Of,
                    fixedFields: {
                      enum: { $ref: "#/visitors/value" },
                      default: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                    },
                  },
                  Components: {
                    $visitor: Em,
                    fixedFields: {
                      schemas: jd,
                      responses: Ad,
                      parameters: Id,
                      examples: Rd,
                      requestBodies: qd,
                      headers: Vd,
                      securitySchemes: Gd,
                      links: Xd,
                      callbacks: ty,
                    },
                  },
                  Paths: { $visitor: my },
                  PathItem: {
                    $visitor: gg,
                    fixedFields: {
                      $ref: vg,
                      summary: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      get: { $ref: "#/visitors/document/objects/Operation" },
                      put: { $ref: "#/visitors/document/objects/Operation" },
                      post: { $ref: "#/visitors/document/objects/Operation" },
                      delete: { $ref: "#/visitors/document/objects/Operation" },
                      options: {
                        $ref: "#/visitors/document/objects/Operation",
                      },
                      head: { $ref: "#/visitors/document/objects/Operation" },
                      patch: { $ref: "#/visitors/document/objects/Operation" },
                      trace: { $ref: "#/visitors/document/objects/Operation" },
                      servers: wg,
                      parameters: Og,
                    },
                  },
                  Operation: {
                    $visitor: Ky,
                    fixedFields: {
                      tags: Qy,
                      summary: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                      operationId: { $ref: "#/visitors/value" },
                      parameters: ng,
                      requestBody: sg,
                      responses: {
                        $ref: "#/visitors/document/objects/Responses",
                      },
                      callbacks: cg,
                      deprecated: { $ref: "#/visitors/value" },
                      security: hg,
                      servers: dg,
                    },
                  },
                  ExternalDocumentation: {
                    $visitor: oy,
                    fixedFields: {
                      description: { $ref: "#/visitors/value" },
                      url: { $ref: "#/visitors/value" },
                    },
                  },
                  Parameter: {
                    $visitor: _m,
                    fixedFields: {
                      name: { $ref: "#/visitors/value" },
                      in: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      required: { $ref: "#/visitors/value" },
                      deprecated: { $ref: "#/visitors/value" },
                      allowEmptyValue: { $ref: "#/visitors/value" },
                      style: { $ref: "#/visitors/value" },
                      explode: { $ref: "#/visitors/value" },
                      allowReserved: { $ref: "#/visitors/value" },
                      schema: Im,
                      example: { $ref: "#/visitors/value" },
                      examples: yd,
                      content: bd,
                    },
                  },
                  RequestBody: {
                    $visitor: yy,
                    fixedFields: {
                      description: { $ref: "#/visitors/value" },
                      content: by,
                      required: { $ref: "#/visitors/value" },
                    },
                  },
                  MediaType: {
                    $visitor: kf,
                    fixedFields: {
                      schema: im,
                      example: { $ref: "#/visitors/value" },
                      examples: um,
                      encoding: mm,
                    },
                  },
                  Encoding: {
                    $visitor: cy,
                    fixedFields: {
                      contentType: { $ref: "#/visitors/value" },
                      headers: hy,
                      style: { $ref: "#/visitors/value" },
                      explode: { $ref: "#/visitors/value" },
                      allowReserved: { $ref: "#/visitors/value" },
                    },
                  },
                  Responses: { $visitor: Hy, fixedFields: { default: Gy } },
                  Response: {
                    $visitor: jy,
                    fixedFields: {
                      description: { $ref: "#/visitors/value" },
                      headers: Ay,
                      content: ky,
                      links: My,
                    },
                  },
                  Callback: { $visitor: wy },
                  Example: {
                    $visitor: ny,
                    fixedFields: {
                      summary: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      value: { $ref: "#/visitors/value" },
                      externalValue: sy,
                    },
                  },
                  Link: {
                    $visitor: af,
                    fixedFields: {
                      operationRef: cf,
                      operationId: lf,
                      parameters: df,
                      requestBody: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      server: { $ref: "#/visitors/document/objects/Server" },
                    },
                  },
                  Header: {
                    $visitor: Cm,
                    fixedFields: {
                      description: { $ref: "#/visitors/value" },
                      required: { $ref: "#/visitors/value" },
                      deprecated: { $ref: "#/visitors/value" },
                      allowEmptyValue: { $ref: "#/visitors/value" },
                      style: { $ref: "#/visitors/value" },
                      explode: { $ref: "#/visitors/value" },
                      allowReserved: { $ref: "#/visitors/value" },
                      schema: Rm,
                      example: { $ref: "#/visitors/value" },
                      examples: Nm,
                      content: Vm,
                    },
                  },
                  Tag: {
                    $visitor: Om,
                    fixedFields: {
                      name: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                    },
                  },
                  Reference: { $visitor: Pm, fixedFields: { $ref: Am } },
                  JSONSchema: { $ref: "#/visitors/document/objects/Schema" },
                  JSONReference: {
                    $ref: "#/visitors/document/objects/Reference",
                  },
                  Schema: {
                    $visitor: Hm,
                    fixedFields: {
                      title: qg.title,
                      multipleOf: qg.multipleOf,
                      maximum: qg.maximum,
                      exclusiveMaximum: qg.exclusiveMaximum,
                      minimum: qg.minimum,
                      exclusiveMinimum: qg.exclusiveMinimum,
                      maxLength: qg.maxLength,
                      minLength: qg.minLength,
                      pattern: qg.pattern,
                      maxItems: qg.maxItems,
                      minItems: qg.minItems,
                      uniqueItems: qg.uniqueItems,
                      maxProperties: qg.maxProperties,
                      minProperties: qg.minProperties,
                      required: qg.required,
                      enum: qg.enum,
                      type: nd,
                      allOf: Gm,
                      anyOf: Km,
                      oneOf: Xm,
                      not: id,
                      items: Zm,
                      properties: td,
                      additionalProperties: id,
                      description: qg.description,
                      format: qg.format,
                      default: qg.default,
                      nullable: { $ref: "#/visitors/value" },
                      discriminator: {
                        $ref: "#/visitors/document/objects/Discriminator",
                      },
                      writeOnly: { $ref: "#/visitors/value" },
                      xml: { $ref: "#/visitors/document/objects/XML" },
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                      example: { $ref: "#/visitors/value" },
                      deprecated: { $ref: "#/visitors/value" },
                    },
                  },
                  Discriminator: {
                    $visitor: ad,
                    fixedFields: {
                      propertyName: { $ref: "#/visitors/value" },
                      mapping: pd,
                    },
                  },
                  XML: {
                    $visitor: fd,
                    fixedFields: {
                      name: { $ref: "#/visitors/value" },
                      namespace: { $ref: "#/visitors/value" },
                      prefix: { $ref: "#/visitors/value" },
                      attribute: { $ref: "#/visitors/value" },
                      wrapped: { $ref: "#/visitors/value" },
                    },
                  },
                  SecurityScheme: {
                    $visitor: Pg,
                    fixedFields: {
                      type: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      name: { $ref: "#/visitors/value" },
                      in: { $ref: "#/visitors/value" },
                      scheme: { $ref: "#/visitors/value" },
                      bearerFormat: { $ref: "#/visitors/value" },
                      flows: { $ref: "#/visitors/document/objects/OAuthFlows" },
                      openIdConnectUrl: { $ref: "#/visitors/value" },
                    },
                  },
                  OAuthFlows: {
                    $visitor: $g,
                    fixedFields: {
                      implicit: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                      password: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                      clientCredentials: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                      authorizationCode: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                    },
                  },
                  OAuthFlow: {
                    $visitor: kg,
                    fixedFields: {
                      authorizationUrl: { $ref: "#/visitors/value" },
                      tokenUrl: { $ref: "#/visitors/value" },
                      refreshUrl: { $ref: "#/visitors/value" },
                      scopes: Mg,
                    },
                  },
                  SecurityRequirement: { $visitor: ym },
                },
                extension: { $visitor: Xh },
              },
            },
          },
          Bg = (e) => {
            if (Ca(e))
              return `${
                e.element.charAt(0).toUpperCase() + e.element.slice(1)
              }Element`;
          },
          Ug = {
            CallbackElement: ["content"],
            ComponentsElement: ["content"],
            ContactElement: ["content"],
            DiscriminatorElement: ["content"],
            Encoding: ["content"],
            Example: ["content"],
            ExternalDocumentationElement: ["content"],
            HeaderElement: ["content"],
            InfoElement: ["content"],
            LicenseElement: ["content"],
            MediaTypeElement: ["content"],
            OAuthFlowElement: ["content"],
            OAuthFlowsElement: ["content"],
            OpenApi3_0Element: ["content"],
            OperationElement: ["content"],
            ParameterElement: ["content"],
            PathItemElement: ["content"],
            PathsElement: ["content"],
            ReferenceElement: ["content"],
            RequestBodyElement: ["content"],
            ResponseElement: ["content"],
            ResponsesElement: ["content"],
            SchemaElement: ["content"],
            SecurityRequirementElement: ["content"],
            SecuritySchemeElement: ["content"],
            ServerElement: ["content"],
            ServerVariableElement: ["content"],
            TagElement: ["content"],
            ...Mc,
          },
          Vg = {
            namespace: (e) => {
              const { base: t } = e;
              return (
                t.register("callback", Pl),
                t.register("components", $l),
                t.register("contact", kl),
                t.register("discriminator", Tl),
                t.register("encoding", Ml),
                t.register("example", Fl),
                t.register("externalDocumentation", Nl),
                t.register("header", Ll),
                t.register("info", Ul),
                t.register("license", zl),
                t.register("link", Jl),
                t.register("mediaType", Wl),
                t.register("oAuthFlow", Yl),
                t.register("oAuthFlows", Ql),
                t.register("openapi", eu),
                t.register("openApi3_0", ru),
                t.register("operation", su),
                t.register("parameter", ou),
                t.register("pathItem", cu),
                t.register("paths", uu),
                t.register("reference", hu),
                t.register("requestBody", mu),
                t.register("response", yu),
                t.register("responses", vu),
                t.register("schema", oh),
                t.register("securityRequirement", ch),
                t.register("securityScheme", uh),
                t.register("server", hh),
                t.register("serverVariable", mh),
                t.register("tag", yh),
                t.register("xml", vh),
                t
              );
            },
          },
          zg = () => {
            const e = cc(Vg);
            return {
              predicates: { ...a, ...c, isStringElement: Ma },
              namespace: e,
            };
          },
          Hg = (
            e,
            {
              specPath: t = [
                "visitors",
                "document",
                "objects",
                "OpenApi",
                "$visitor",
              ],
              plugins: r = [],
            } = {}
          ) => {
            const n = (0, Zo.e)(e),
              s = Mu(Lg),
              i = new (Hn(t, s))({ specObj: s });
            return (
              Fc(n, i),
              Nc(i.element, r, {
                toolboxCreator: zg,
                visitorOptions: { keyMap: Ug, nodeTypeGetter: Bg },
              })
            );
          },
          Jg =
            (e) =>
            (t, r = {}) =>
              Hg(t, { specPath: e, ...r });
        (Pl.refract = Jg([
          "visitors",
          "document",
          "objects",
          "Callback",
          "$visitor",
        ])),
          ($l.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Components",
            "$visitor",
          ])),
          (kl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Contact",
            "$visitor",
          ])),
          (Fl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Example",
            "$visitor",
          ])),
          (Tl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Discriminator",
            "$visitor",
          ])),
          (Ml.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Encoding",
            "$visitor",
          ])),
          (Nl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "ExternalDocumentation",
            "$visitor",
          ])),
          (Ll.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Header",
            "$visitor",
          ])),
          (Ul.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Info",
            "$visitor",
          ])),
          (zl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "License",
            "$visitor",
          ])),
          (Jl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Link",
            "$visitor",
          ])),
          (Wl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "MediaType",
            "$visitor",
          ])),
          (Yl.refract = Jg([
            "visitors",
            "document",
            "objects",
            "OAuthFlow",
            "$visitor",
          ])),
          (Ql.refract = Jg([
            "visitors",
            "document",
            "objects",
            "OAuthFlows",
            "$visitor",
          ])),
          (eu.refract = Jg([
            "visitors",
            "document",
            "objects",
            "OpenApi",
            "fixedFields",
            "openapi",
          ])),
          (ru.refract = Jg([
            "visitors",
            "document",
            "objects",
            "OpenApi",
            "$visitor",
          ])),
          (su.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Operation",
            "$visitor",
          ])),
          (ou.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Parameter",
            "$visitor",
          ])),
          (cu.refract = Jg([
            "visitors",
            "document",
            "objects",
            "PathItem",
            "$visitor",
          ])),
          (uu.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Paths",
            "$visitor",
          ])),
          (hu.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Reference",
            "$visitor",
          ])),
          (mu.refract = Jg([
            "visitors",
            "document",
            "objects",
            "RequestBody",
            "$visitor",
          ])),
          (yu.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Response",
            "$visitor",
          ])),
          (vu.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Responses",
            "$visitor",
          ])),
          (oh.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Schema",
            "$visitor",
          ])),
          (ch.refract = Jg([
            "visitors",
            "document",
            "objects",
            "SecurityRequirement",
            "$visitor",
          ])),
          (uh.refract = Jg([
            "visitors",
            "document",
            "objects",
            "SecurityScheme",
            "$visitor",
          ])),
          (hh.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Server",
            "$visitor",
          ])),
          (mh.refract = Jg([
            "visitors",
            "document",
            "objects",
            "ServerVariable",
            "$visitor",
          ])),
          (yh.refract = Jg([
            "visitors",
            "document",
            "objects",
            "Tag",
            "$visitor",
          ])),
          (vh.refract = Jg([
            "visitors",
            "document",
            "objects",
            "XML",
            "$visitor",
          ]));
        const Gg = class extends Pl {};
        const Wg = class extends $l {
          get pathItems() {
            return this.get("pathItems");
          }
          set pathItems(e) {
            this.set("pathItems", e);
          }
        };
        const Kg = class extends kl {};
        const Yg = class extends Tl {};
        const Xg = class extends Ml {};
        const Qg = class extends Fl {};
        const Zg = class extends Nl {};
        const ev = class extends Ll {
          get schema() {
            return this.get("schema");
          }
          set schema(e) {
            this.set("schema", e);
          }
        };
        const tv = class extends Ul {
          get license() {
            return this.get("license");
          }
          set license(e) {
            this.set("license", e);
          }
          get summary() {
            return this.get("summary");
          }
          set summary(e) {
            this.set("summary", e);
          }
        };
        class rv extends Zo.Om {
          static default = new rv(
            "https://spec.openapis.org/oas/3.1/dialect/base"
          );
          constructor(e, t, r) {
            super(e, t, r), (this.element = "jsonSchemaDialect");
          }
        }
        const nv = rv;
        const sv = class extends zl {
          get identifier() {
            return this.get("identifier");
          }
          set identifier(e) {
            this.set("identifier", e);
          }
        };
        const iv = class extends Jl {};
        const ov = class extends Wl {
          get schema() {
            return this.get("schema");
          }
          set schema(e) {
            this.set("schema", e);
          }
        };
        const av = class extends Yl {};
        const cv = class extends Ql {};
        const lv = class extends eu {};
        class uv extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r),
              (this.element = "openApi3_1"),
              this.classes.push("api");
          }
          get openapi() {
            return this.get("openapi");
          }
          set openapi(e) {
            this.set("openapi", e);
          }
          get info() {
            return this.get("info");
          }
          set info(e) {
            this.set("info", e);
          }
          get jsonSchemaDialect() {
            return this.get("jsonSchemaDialect");
          }
          set jsonSchemaDialect(e) {
            this.set("jsonSchemaDialect", e);
          }
          get servers() {
            return this.get("servers");
          }
          set servers(e) {
            this.set("servers", e);
          }
          get paths() {
            return this.get("paths");
          }
          set paths(e) {
            this.set("paths", e);
          }
          get components() {
            return this.get("components");
          }
          set components(e) {
            this.set("components", e);
          }
          get security() {
            return this.get("security");
          }
          set security(e) {
            this.set("security", e);
          }
          get tags() {
            return this.get("tags");
          }
          set tags(e) {
            this.set("tags", e);
          }
          get externalDocs() {
            return this.get("externalDocs");
          }
          set externalDocs(e) {
            this.set("externalDocs", e);
          }
          get webhooks() {
            return this.get("webhooks");
          }
          set webhooks(e) {
            this.set("webhooks", e);
          }
        }
        const pv = uv;
        const hv = class extends su {
          get requestBody() {
            return this.get("requestBody");
          }
          set requestBody(e) {
            this.set("requestBody", e);
          }
        };
        const fv = class extends ou {
          get schema() {
            return this.get("schema");
          }
          set schema(e) {
            this.set("schema", e);
          }
        };
        const mv = class extends cu {
          get GET() {
            return this.get("get");
          }
          set GET(e) {
            this.set("GET", e);
          }
          get PUT() {
            return this.get("put");
          }
          set PUT(e) {
            this.set("PUT", e);
          }
          get POST() {
            return this.get("post");
          }
          set POST(e) {
            this.set("POST", e);
          }
          get DELETE() {
            return this.get("delete");
          }
          set DELETE(e) {
            this.set("DELETE", e);
          }
          get OPTIONS() {
            return this.get("options");
          }
          set OPTIONS(e) {
            this.set("OPTIONS", e);
          }
          get HEAD() {
            return this.get("head");
          }
          set HEAD(e) {
            this.set("HEAD", e);
          }
          get PATCH() {
            return this.get("patch");
          }
          set PATCH(e) {
            this.set("PATCH", e);
          }
          get TRACE() {
            return this.get("trace");
          }
          set TRACE(e) {
            this.set("TRACE", e);
          }
        };
        const dv = class extends uu {};
        class yv extends hu {}
        Object.defineProperty(yv.prototype, "description", {
          get() {
            return this.get("description");
          },
          set(e) {
            this.set("description", e);
          },
          enumerable: !0,
        }),
          Object.defineProperty(yv.prototype, "summary", {
            get() {
              return this.get("summary");
            },
            set(e) {
              this.set("summary", e);
            },
            enumerable: !0,
          });
        const gv = yv;
        const vv = class extends mu {};
        const bv = class extends yu {};
        const xv = class extends vu {};
        class wv extends Zo.Sh {
          constructor(e, t, r) {
            super(e, t, r), (this.element = "schema");
          }
          get $schema() {
            return this.get("$schema");
          }
          set $schema(e) {
            this.set("$schema", e);
          }
          get $vocabulary() {
            return this.get("$vocabulary");
          }
          set $vocabulary(e) {
            this.set("$vocabulary", e);
          }
          get $id() {
            return this.get("$id");
          }
          set $id(e) {
            this.set("$id", e);
          }
          get $anchor() {
            return this.get("$anchor");
          }
          set $anchor(e) {
            this.set("$anchor", e);
          }
          get $dynamicAnchor() {
            return this.get("$dynamicAnchor");
          }
          set $dynamicAnchor(e) {
            this.set("$dynamicAnchor", e);
          }
          get $dynamicRef() {
            return this.get("$dynamicRef");
          }
          set $dynamicRef(e) {
            this.set("$dynamicRef", e);
          }
          get $ref() {
            return this.get("$ref");
          }
          set $ref(e) {
            this.set("$ref", e);
          }
          get $defs() {
            return this.get("$defs");
          }
          set $defs(e) {
            this.set("$defs", e);
          }
          get $comment() {
            return this.get("$comment");
          }
          set $comment(e) {
            this.set("$comment", e);
          }
          get allOf() {
            return this.get("allOf");
          }
          set allOf(e) {
            this.set("allOf", e);
          }
          get anyOf() {
            return this.get("anyOf");
          }
          set anyOf(e) {
            this.set("anyOf", e);
          }
          get oneOf() {
            return this.get("oneOf");
          }
          set oneOf(e) {
            this.set("oneOf", e);
          }
          get not() {
            return this.get("not");
          }
          set not(e) {
            this.set("not", e);
          }
          get if() {
            return this.get("if");
          }
          set if(e) {
            this.set("if", e);
          }
          get then() {
            return this.get("then");
          }
          set then(e) {
            this.set("then", e);
          }
          get else() {
            return this.get("else");
          }
          set else(e) {
            this.set("else", e);
          }
          get dependentSchemas() {
            return this.get("dependentSchemas");
          }
          set dependentSchemas(e) {
            this.set("dependentSchemas", e);
          }
          get prefixItems() {
            return this.get("prefixItems");
          }
          set prefixItems(e) {
            this.set("prefixItems", e);
          }
          get items() {
            return this.get("items");
          }
          set items(e) {
            this.set("items", e);
          }
          get containsProp() {
            return this.get("contains");
          }
          set containsProp(e) {
            this.set("contains", e);
          }
          get properties() {
            return this.get("properties");
          }
          set properties(e) {
            this.set("properties", e);
          }
          get patternProperties() {
            return this.get("patternProperties");
          }
          set patternProperties(e) {
            this.set("patternProperties", e);
          }
          get additionalProperties() {
            return this.get("additionalProperties");
          }
          set additionalProperties(e) {
            this.set("additionalProperties", e);
          }
          get propertyNames() {
            return this.get("propertyNames");
          }
          set propertyNames(e) {
            this.set("propertyNames", e);
          }
          get unevaluatedItems() {
            return this.get("unevaluatedItems");
          }
          set unevaluatedItems(e) {
            this.set("unevaluatedItems", e);
          }
          get unevaluatedProperties() {
            return this.get("unevaluatedProperties");
          }
          set unevaluatedProperties(e) {
            this.set("unevaluatedProperties", e);
          }
          get type() {
            return this.get("type");
          }
          set type(e) {
            this.set("type", e);
          }
          get enum() {
            return this.get("enum");
          }
          set enum(e) {
            this.set("enum", e);
          }
          get const() {
            return this.get("const");
          }
          set const(e) {
            this.set("const", e);
          }
          get multipleOf() {
            return this.get("multipleOf");
          }
          set multipleOf(e) {
            this.set("multipleOf", e);
          }
          get maximum() {
            return this.get("maximum");
          }
          set maximum(e) {
            this.set("maximum", e);
          }
          get exclusiveMaximum() {
            return this.get("exclusiveMaximum");
          }
          set exclusiveMaximum(e) {
            this.set("exclusiveMaximum", e);
          }
          get minimum() {
            return this.get("minimum");
          }
          set minimum(e) {
            this.set("minimum", e);
          }
          get exclusiveMinimum() {
            return this.get("exclusiveMinimum");
          }
          set exclusiveMinimum(e) {
            this.set("exclusiveMinimum", e);
          }
          get maxLength() {
            return this.get("maxLength");
          }
          set maxLength(e) {
            this.set("maxLength", e);
          }
          get minLength() {
            return this.get("minLength");
          }
          set minLength(e) {
            this.set("minLength", e);
          }
          get pattern() {
            return this.get("pattern");
          }
          set pattern(e) {
            this.set("pattern", e);
          }
          get maxItems() {
            return this.get("maxItems");
          }
          set maxItems(e) {
            this.set("maxItems", e);
          }
          get minItems() {
            return this.get("minItems");
          }
          set minItems(e) {
            this.set("minItems", e);
          }
          get uniqueItems() {
            return this.get("uniqueItems");
          }
          set uniqueItems(e) {
            this.set("uniqueItems", e);
          }
          get maxContains() {
            return this.get("maxContains");
          }
          set maxContains(e) {
            this.set("maxContains", e);
          }
          get minContains() {
            return this.get("minContains");
          }
          set minContains(e) {
            this.set("minContains", e);
          }
          get maxProperties() {
            return this.get("maxProperties");
          }
          set maxProperties(e) {
            this.set("maxProperties", e);
          }
          get minProperties() {
            return this.get("minProperties");
          }
          set minProperties(e) {
            this.set("minProperties", e);
          }
          get required() {
            return this.get("required");
          }
          set required(e) {
            this.set("required", e);
          }
          get dependentRequired() {
            return this.get("dependentRequired");
          }
          set dependentRequired(e) {
            this.set("dependentRequired", e);
          }
          get title() {
            return this.get("title");
          }
          set title(e) {
            this.set("title", e);
          }
          get description() {
            return this.get("description");
          }
          set description(e) {
            this.set("description", e);
          }
          get default() {
            return this.get("default");
          }
          set default(e) {
            this.set("default", e);
          }
          get deprecated() {
            return this.get("deprecated");
          }
          set deprecated(e) {
            this.set("deprecated", e);
          }
          get readOnly() {
            return this.get("readOnly");
          }
          set readOnly(e) {
            this.set("readOnly", e);
          }
          get writeOnly() {
            return this.get("writeOnly");
          }
          set writeOnly(e) {
            this.set("writeOnly", e);
          }
          get examples() {
            return this.get("examples");
          }
          set examples(e) {
            this.set("examples", e);
          }
          get format() {
            return this.get("format");
          }
          set format(e) {
            this.set("format", e);
          }
          get contentEncoding() {
            return this.get("contentEncoding");
          }
          set contentEncoding(e) {
            this.set("contentEncoding", e);
          }
          get contentMediaType() {
            return this.get("contentMediaType");
          }
          set contentMediaType(e) {
            this.set("contentMediaType", e);
          }
          get contentSchema() {
            return this.get("contentSchema");
          }
          set contentSchema(e) {
            this.set("contentSchema", e);
          }
          get discriminator() {
            return this.get("discriminator");
          }
          set discriminator(e) {
            this.set("discriminator", e);
          }
          get xml() {
            return this.get("xml");
          }
          set xml(e) {
            this.set("xml", e);
          }
          get externalDocs() {
            return this.get("externalDocs");
          }
          set externalDocs(e) {
            this.set("externalDocs", e);
          }
          get example() {
            return this.get("example");
          }
          set example(e) {
            this.set("example", e);
          }
        }
        const Ev = wv;
        const jv = class extends ch {};
        const Ov = class extends uh {};
        const Sv = class extends hh {};
        const Pv = class extends mh {};
        const Av = class extends yh {};
        const $v = class extends vh {};
        class _v extends Dh(Jh, Lh) {
          constructor(e) {
            super(e),
              (this.element = new pv()),
              (this.specPath = bi(["document", "objects", "OpenApi"])),
              (this.canSupportSpecificationExtensions = !0),
              (this.openApiSemanticElement = this.element);
          }
          ObjectElement(e) {
            return (
              (this.openApiGenericElement = e),
              Jh.prototype.ObjectElement.call(this, e)
            );
          }
        }
        const kv = _v,
          {
            visitors: {
              document: {
                objects: {
                  Info: { $visitor: Iv },
                },
              },
            },
          } = Lg;
        const Tv = class extends Iv {
            constructor(e) {
              super(e), (this.element = new tv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Contact: { $visitor: Cv },
                },
              },
            },
          } = Lg;
        const Mv = class extends Cv {
            constructor(e) {
              super(e), (this.element = new Kg());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  License: { $visitor: Rv },
                },
              },
            },
          } = Lg;
        const Fv = class extends Rv {
            constructor(e) {
              super(e), (this.element = new sv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Link: { $visitor: Dv },
                },
              },
            },
          } = Lg;
        const Nv = class extends Dv {
          constructor(e) {
            super(e), (this.element = new iv());
          }
        };
        class qv extends Dh(Bh, Lh) {
          StringElement(e) {
            const t = new nv(Yc(e));
            return this.copyMetaAndAttributes(e, t), (this.element = t), vc;
          }
        }
        const Lv = qv,
          {
            visitors: {
              document: {
                objects: {
                  Server: { $visitor: Bv },
                },
              },
            },
          } = Lg;
        const Uv = class extends Bv {
            constructor(e) {
              super(e), (this.element = new Sv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  ServerVariable: { $visitor: Vv },
                },
              },
            },
          } = Lg;
        const zv = class extends Vv {
            constructor(e) {
              super(e), (this.element = new Pv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  MediaType: { $visitor: Hv },
                },
              },
            },
          } = Lg;
        const Jv = class extends Hv {
            constructor(e) {
              super(e), (this.element = new ov());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  SecurityRequirement: { $visitor: Gv },
                },
              },
            },
          } = Lg;
        const Wv = class extends Gv {
            constructor(e) {
              super(e), (this.element = new jv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Components: { $visitor: Kv },
                },
              },
            },
          } = Lg;
        const Yv = class extends Kv {
            constructor(e) {
              super(e), (this.element = new Wg());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Tag: { $visitor: Xv },
                },
              },
            },
          } = Lg;
        const Qv = class extends Xv {
            constructor(e) {
              super(e), (this.element = new Av());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Reference: { $visitor: Zv },
                },
              },
            },
          } = Lg;
        const eb = class extends Zv {
            constructor(e) {
              super(e), (this.element = new gv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Parameter: { $visitor: tb },
                },
              },
            },
          } = Lg;
        const rb = class extends tb {
            constructor(e) {
              super(e), (this.element = new fv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Header: { $visitor: nb },
                },
              },
            },
          } = Lg;
        const sb = class extends nb {
            constructor(e) {
              super(e), (this.element = new ev());
            }
          },
          ib = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Gg || (e(n) && t("callback", n) && r("object", n))
          ),
          ob = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Wg ||
                (e(n) && t("components", n) && r("object", n))
          ),
          ab = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Kg || (e(n) && t("contact", n) && r("object", n))
          ),
          cb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Qg || (e(n) && t("example", n) && r("object", n))
          ),
          lb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Zg ||
                (e(n) && t("externalDocumentation", n) && r("object", n))
          ),
          ub = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof ev || (e(n) && t("header", n) && r("object", n))
          ),
          pb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof tv || (e(n) && t("info", n) && r("object", n))
          ),
          hb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof nv ||
                (e(n) && t("jsonSchemaDialect", n) && r("string", n))
          ),
          fb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof sv || (e(n) && t("license", n) && r("object", n))
          ),
          mb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof iv || (e(n) && t("link", n) && r("object", n))
          ),
          db = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof lv || (e(n) && t("openapi", n) && r("string", n))
          ),
          yb = Ta(
            ({
                hasBasicElementProps: e,
                isElementType: t,
                primitiveEq: r,
                hasClass: n,
              }) =>
              (s) =>
                s instanceof pv ||
                (e(s) && t("openApi3_1", s) && r("object", s) && n("api", s))
          ),
          gb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof hv || (e(n) && t("operation", n) && r("object", n))
          ),
          vb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof fv || (e(n) && t("parameter", n) && r("object", n))
          ),
          bb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof mv || (e(n) && t("pathItem", n) && r("object", n))
          ),
          xb = (e) => {
            if (!bb(e)) return !1;
            if (!Ma(e.$ref)) return !1;
            const t = Yc(e.$ref);
            return "string" == typeof t && t.length > 0 && !t.startsWith("#");
          },
          wb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof dv || (e(n) && t("paths", n) && r("object", n))
          ),
          Eb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof gv || (e(n) && t("reference", n) && r("object", n))
          ),
          jb = (e) => {
            if (!Eb(e)) return !1;
            if (!Ma(e.$ref)) return !1;
            const t = Yc(e.$ref);
            return "string" == typeof t && t.length > 0 && !t.startsWith("#");
          },
          Ob = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof vv ||
                (e(n) && t("requestBody", n) && r("object", n))
          ),
          Sb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof bv || (e(n) && t("response", n) && r("object", n))
          ),
          Pb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof xv || (e(n) && t("responses", n) && r("object", n))
          ),
          Ab = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Ev || (e(n) && t("schema", n) && r("object", n))
          ),
          $b = (e) => Da(e) && e.classes.includes("boolean-json-schema"),
          _b = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof jv ||
                (e(n) && t("securityRequirement", n) && r("object", n))
          ),
          kb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Sv || (e(n) && t("server", n) && r("object", n))
          ),
          Ib = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof Pv ||
                (e(n) && t("serverVariable", n) && r("object", n))
          ),
          Tb = Ta(
            ({ hasBasicElementProps: e, isElementType: t, primitiveEq: r }) =>
              (n) =>
                n instanceof ov || (e(n) && t("mediaType", n) && r("object", n))
          );
        const Cb = class {
          parent;
          constructor({ parent: e }) {
            this.parent = e;
          }
        };
        class Mb extends Dh(Jh, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Ev()),
              (this.specPath = bi(["document", "objects", "Schema"])),
              (this.canSupportSpecificationExtensions = !0),
              (this.jsonSchemaDefaultDialect = nv.default),
              this.passingOptionsNames.push("parent");
          }
          ObjectElement(e) {
            this.handle$schema(e),
              this.handle$id(e),
              (this.parent = this.element);
            const t = Jh.prototype.ObjectElement.call(this, e);
            return (
              Ma(this.element.$ref) &&
                (this.element.classes.push("reference-element"),
                this.element.setMetaProperty("referenced-element", "schema")),
              t
            );
          }
          BooleanElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("boolean-json-schema"), t;
          }
          getJsonSchemaDialect() {
            let e;
            return (
              (e =
                void 0 !== this.openApiSemanticElement &&
                hb(this.openApiSemanticElement.jsonSchemaDialect)
                  ? Yc(this.openApiSemanticElement.jsonSchemaDialect)
                  : void 0 !== this.openApiGenericElement &&
                    Ma(this.openApiGenericElement.get("jsonSchemaDialect"))
                  ? Yc(this.openApiGenericElement.get("jsonSchemaDialect"))
                  : Yc(this.jsonSchemaDefaultDialect)),
              e
            );
          }
          handle$schema(e) {
            if (wi(this.parent) && !Ma(e.get("$schema")))
              this.element.setMetaProperty(
                "inherited$schema",
                this.getJsonSchemaDialect()
              );
            else if (Ab(this.parent) && !Ma(e.get("$schema"))) {
              const e = Gs(
                Yc(this.parent.meta.get("inherited$schema")),
                Yc(this.parent.$schema)
              );
              this.element.setMetaProperty("inherited$schema", e);
            }
          }
          handle$id(e) {
            const t =
                void 0 !== this.parent
                  ? Ac(this.parent.getMetaProperty("inherited$id", []))
                  : new Zo.wE(),
              r = Yc(e.get("$id"));
            fp(r) && t.push(r), this.element.setMetaProperty("inherited$id", t);
          }
        }
        const Rb = Mb;
        const Fb = class extends Lh {
          ObjectElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("json-schema-$vocabulary"), t;
          }
        };
        const Db = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("reference-value"), t;
          }
        };
        class Nb extends Dh(pf, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.Sh()),
              this.element.classes.push("json-schema-$defs"),
              (this.specPath = bi(["document", "objects", "Schema"])),
              this.passingOptionsNames.push("parent");
          }
        }
        const qb = Nb;
        class Lb extends Dh(Bh, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.wE()),
              this.element.classes.push("json-schema-allOf"),
              this.passingOptionsNames.push("parent");
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                if (Na(e)) {
                  const t = this.toRefractedElement(
                    ["document", "objects", "Schema"],
                    e
                  );
                  this.element.push(t);
                } else {
                  const t = Ac(e);
                  this.element.push(t);
                }
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const Bb = Lb;
        class Ub extends Dh(Bh, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.wE()),
              this.element.classes.push("json-schema-anyOf"),
              this.passingOptionsNames.push("parent");
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                if (Na(e)) {
                  const t = this.toRefractedElement(
                    ["document", "objects", "Schema"],
                    e
                  );
                  this.element.push(t);
                } else {
                  const t = Ac(e);
                  this.element.push(t);
                }
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const Vb = Ub;
        class zb extends Dh(Bh, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.wE()),
              this.element.classes.push("json-schema-oneOf"),
              this.passingOptionsNames.push("parent");
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                if (Na(e)) {
                  const t = this.toRefractedElement(
                    ["document", "objects", "Schema"],
                    e
                  );
                  this.element.push(t);
                } else {
                  const t = Ac(e);
                  this.element.push(t);
                }
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const Hb = zb;
        class Jb extends Dh(pf, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.Sh()),
              this.element.classes.push("json-schema-dependentSchemas"),
              (this.specPath = bi(["document", "objects", "Schema"])),
              this.passingOptionsNames.push("parent");
          }
        }
        const Gb = Jb;
        class Wb extends Dh(Bh, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.wE()),
              this.element.classes.push("json-schema-prefixItems"),
              this.passingOptionsNames.push("parent");
          }
          ArrayElement(e) {
            return (
              e.forEach((e) => {
                if (Na(e)) {
                  const t = this.toRefractedElement(
                    ["document", "objects", "Schema"],
                    e
                  );
                  this.element.push(t);
                } else {
                  const t = Ac(e);
                  this.element.push(t);
                }
              }),
              this.copyMetaAndAttributes(e, this.element),
              vc
            );
          }
        }
        const Kb = Wb;
        class Yb extends Dh(pf, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.Sh()),
              this.element.classes.push("json-schema-properties"),
              (this.specPath = bi(["document", "objects", "Schema"])),
              this.passingOptionsNames.push("parent");
          }
        }
        const Xb = Yb;
        class Qb extends Dh(pf, Cb, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Zo.Sh()),
              this.element.classes.push("json-schema-patternProperties"),
              (this.specPath = bi(["document", "objects", "Schema"])),
              this.passingOptionsNames.push("parent");
          }
        }
        const Zb = Qb;
        const ex = class extends Lh {
          StringElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("json-schema-type"), t;
          }
          ArrayElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("json-schema-type"), t;
          }
        };
        const tx = class extends Lh {
          ArrayElement(e) {
            const t = super.enter(e);
            return this.element.classes.push("json-schema-enum"), t;
          }
        };
        const rx = class extends Lh {
          ObjectElement(e) {
            const t = super.enter(e);
            return (
              this.element.classes.push("json-schema-dependentRequired"), t
            );
          }
        };
        const nx = class extends Lh {
            ArrayElement(e) {
              const t = super.enter(e);
              return this.element.classes.push("json-schema-examples"), t;
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Discriminator: { $visitor: sx },
                },
              },
            },
          } = Lg;
        const ix = class extends sx {
            constructor(e) {
              super(e),
                (this.element = new Yg()),
                (this.canSupportSpecificationExtensions = !0);
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  XML: { $visitor: ox },
                },
              },
            },
          } = Lg;
        const ax = class extends ox {
          constructor(e) {
            super(e), (this.element = new $v());
          }
        };
        class cx extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new wd()),
              (this.specPath = bi(["document", "objects", "Schema"]));
          }
        }
        const lx = cx;
        class ux extends Zo.Sh {
          static primaryClass = "components-path-items";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(ux.primaryClass);
          }
        }
        const px = ux;
        class hx extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new px()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "PathItem"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Eb).forEach((e) => {
                e.setMetaProperty("referenced-element", "pathItem");
              }),
              t
            );
          }
        }
        const fx = hx,
          {
            visitors: {
              document: {
                objects: {
                  Example: { $visitor: mx },
                },
              },
            },
          } = Lg;
        const dx = class extends mx {
            constructor(e) {
              super(e), (this.element = new Qg());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  ExternalDocumentation: { $visitor: yx },
                },
              },
            },
          } = Lg;
        const gx = class extends yx {
            constructor(e) {
              super(e), (this.element = new Zg());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Encoding: { $visitor: vx },
                },
              },
            },
          } = Lg;
        const bx = class extends vx {
            constructor(e) {
              super(e), (this.element = new Xg());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Paths: { $visitor: xx },
                },
              },
            },
          } = Lg;
        const wx = class extends xx {
            constructor(e) {
              super(e), (this.element = new dv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  RequestBody: { $visitor: Ex },
                },
              },
            },
          } = Lg;
        const jx = class extends Ex {
            constructor(e) {
              super(e), (this.element = new vv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Callback: { $visitor: Ox },
                },
              },
            },
          } = Lg;
        const Sx = class extends Ox {
            constructor(e) {
              super(e),
                (this.element = new Gg()),
                (this.specPath = (e) =>
                  Uh(e)
                    ? ["document", "objects", "Reference"]
                    : ["document", "objects", "PathItem"]);
            }
            ObjectElement(e) {
              const t = Ox.prototype.ObjectElement.call(this, e);
              return (
                this.element.filter(Eb).forEach((e) => {
                  e.setMetaProperty("referenced-element", "pathItem");
                }),
                t
              );
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Response: { $visitor: Px },
                },
              },
            },
          } = Lg;
        const Ax = class extends Px {
            constructor(e) {
              super(e), (this.element = new bv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Responses: { $visitor: $x },
                },
              },
            },
          } = Lg;
        const _x = class extends $x {
            constructor(e) {
              super(e), (this.element = new xv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  Operation: { $visitor: kx },
                },
              },
            },
          } = Lg;
        const Ix = class extends kx {
            constructor(e) {
              super(e), (this.element = new hv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  PathItem: { $visitor: Tx },
                },
              },
            },
          } = Lg;
        const Cx = class extends Tx {
            constructor(e) {
              super(e), (this.element = new mv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  SecurityScheme: { $visitor: Mx },
                },
              },
            },
          } = Lg;
        const Rx = class extends Mx {
            constructor(e) {
              super(e), (this.element = new Ov());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  OAuthFlows: { $visitor: Fx },
                },
              },
            },
          } = Lg;
        const Dx = class extends Fx {
            constructor(e) {
              super(e), (this.element = new cv());
            }
          },
          {
            visitors: {
              document: {
                objects: {
                  OAuthFlow: { $visitor: Nx },
                },
              },
            },
          } = Lg;
        const qx = class extends Nx {
          constructor(e) {
            super(e), (this.element = new av());
          }
        };
        class Lx extends Zo.Sh {
          static primaryClass = "webhooks";
          constructor(e, t, r) {
            super(e, t, r), this.classes.push(Lx.primaryClass);
          }
        }
        const Bx = Lx;
        class Ux extends Dh(pf, Lh) {
          constructor(e) {
            super(e),
              (this.element = new Bx()),
              (this.specPath = (e) =>
                Uh(e)
                  ? ["document", "objects", "Reference"]
                  : ["document", "objects", "PathItem"]);
          }
          ObjectElement(e) {
            const t = pf.prototype.ObjectElement.call(this, e);
            return (
              this.element.filter(Eb).forEach((e) => {
                e.setMetaProperty("referenced-element", "pathItem");
              }),
              this.element.filter(bb).forEach((e, t) => {
                e.setMetaProperty("webhook-name", Yc(t));
              }),
              t
            );
          }
        }
        const Vx = Ux,
          zx = {
            visitors: {
              value: Lg.visitors.value,
              document: {
                objects: {
                  OpenApi: {
                    $visitor: kv,
                    fixedFields: {
                      openapi:
                        Lg.visitors.document.objects.OpenApi.fixedFields
                          .openapi,
                      info: { $ref: "#/visitors/document/objects/Info" },
                      jsonSchemaDialect: Lv,
                      servers:
                        Lg.visitors.document.objects.OpenApi.fixedFields
                          .servers,
                      paths: { $ref: "#/visitors/document/objects/Paths" },
                      webhooks: Vx,
                      components: {
                        $ref: "#/visitors/document/objects/Components",
                      },
                      security:
                        Lg.visitors.document.objects.OpenApi.fixedFields
                          .security,
                      tags: Lg.visitors.document.objects.OpenApi.fixedFields
                        .tags,
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                    },
                  },
                  Info: {
                    $visitor: Tv,
                    fixedFields: {
                      title:
                        Lg.visitors.document.objects.Info.fixedFields.title,
                      description:
                        Lg.visitors.document.objects.Info.fixedFields
                          .description,
                      summary: { $ref: "#/visitors/value" },
                      termsOfService:
                        Lg.visitors.document.objects.Info.fixedFields
                          .termsOfService,
                      contact: { $ref: "#/visitors/document/objects/Contact" },
                      license: { $ref: "#/visitors/document/objects/License" },
                      version:
                        Lg.visitors.document.objects.Info.fixedFields.version,
                    },
                  },
                  Contact: {
                    $visitor: Mv,
                    fixedFields: {
                      name: Lg.visitors.document.objects.Contact.fixedFields
                        .name,
                      url: Lg.visitors.document.objects.Contact.fixedFields.url,
                      email:
                        Lg.visitors.document.objects.Contact.fixedFields.email,
                    },
                  },
                  License: {
                    $visitor: Fv,
                    fixedFields: {
                      name: Lg.visitors.document.objects.License.fixedFields
                        .name,
                      identifier: { $ref: "#/visitors/value" },
                      url: Lg.visitors.document.objects.License.fixedFields.url,
                    },
                  },
                  Server: {
                    $visitor: Uv,
                    fixedFields: {
                      url: Lg.visitors.document.objects.Server.fixedFields.url,
                      description:
                        Lg.visitors.document.objects.Server.fixedFields
                          .description,
                      variables:
                        Lg.visitors.document.objects.Server.fixedFields
                          .variables,
                    },
                  },
                  ServerVariable: {
                    $visitor: zv,
                    fixedFields: {
                      enum: Lg.visitors.document.objects.ServerVariable
                        .fixedFields.enum,
                      default:
                        Lg.visitors.document.objects.ServerVariable.fixedFields
                          .default,
                      description:
                        Lg.visitors.document.objects.ServerVariable.fixedFields
                          .description,
                    },
                  },
                  Components: {
                    $visitor: Yv,
                    fixedFields: {
                      schemas: lx,
                      responses:
                        Lg.visitors.document.objects.Components.fixedFields
                          .responses,
                      parameters:
                        Lg.visitors.document.objects.Components.fixedFields
                          .parameters,
                      examples:
                        Lg.visitors.document.objects.Components.fixedFields
                          .examples,
                      requestBodies:
                        Lg.visitors.document.objects.Components.fixedFields
                          .requestBodies,
                      headers:
                        Lg.visitors.document.objects.Components.fixedFields
                          .headers,
                      securitySchemes:
                        Lg.visitors.document.objects.Components.fixedFields
                          .securitySchemes,
                      links:
                        Lg.visitors.document.objects.Components.fixedFields
                          .links,
                      callbacks:
                        Lg.visitors.document.objects.Components.fixedFields
                          .callbacks,
                      pathItems: fx,
                    },
                  },
                  Paths: { $visitor: wx },
                  PathItem: {
                    $visitor: Cx,
                    fixedFields: {
                      $ref: Lg.visitors.document.objects.PathItem.fixedFields
                        .$ref,
                      summary:
                        Lg.visitors.document.objects.PathItem.fixedFields
                          .summary,
                      description:
                        Lg.visitors.document.objects.PathItem.fixedFields
                          .description,
                      get: { $ref: "#/visitors/document/objects/Operation" },
                      put: { $ref: "#/visitors/document/objects/Operation" },
                      post: { $ref: "#/visitors/document/objects/Operation" },
                      delete: { $ref: "#/visitors/document/objects/Operation" },
                      options: {
                        $ref: "#/visitors/document/objects/Operation",
                      },
                      head: { $ref: "#/visitors/document/objects/Operation" },
                      patch: { $ref: "#/visitors/document/objects/Operation" },
                      trace: { $ref: "#/visitors/document/objects/Operation" },
                      servers:
                        Lg.visitors.document.objects.PathItem.fixedFields
                          .servers,
                      parameters:
                        Lg.visitors.document.objects.PathItem.fixedFields
                          .parameters,
                    },
                  },
                  Operation: {
                    $visitor: Ix,
                    fixedFields: {
                      tags: Lg.visitors.document.objects.Operation.fixedFields
                        .tags,
                      summary:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .summary,
                      description:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .description,
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                      operationId:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .operationId,
                      parameters:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .parameters,
                      requestBody:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .requestBody,
                      responses: {
                        $ref: "#/visitors/document/objects/Responses",
                      },
                      callbacks:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .callbacks,
                      deprecated:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .deprecated,
                      security:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .security,
                      servers:
                        Lg.visitors.document.objects.Operation.fixedFields
                          .servers,
                    },
                  },
                  ExternalDocumentation: {
                    $visitor: gx,
                    fixedFields: {
                      description:
                        Lg.visitors.document.objects.ExternalDocumentation
                          .fixedFields.description,
                      url: Lg.visitors.document.objects.ExternalDocumentation
                        .fixedFields.url,
                    },
                  },
                  Parameter: {
                    $visitor: rb,
                    fixedFields: {
                      name: Lg.visitors.document.objects.Parameter.fixedFields
                        .name,
                      in: Lg.visitors.document.objects.Parameter.fixedFields.in,
                      description:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .description,
                      required:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .required,
                      deprecated:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .deprecated,
                      allowEmptyValue:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .allowEmptyValue,
                      style:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .style,
                      explode:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .explode,
                      allowReserved:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .allowReserved,
                      schema: { $ref: "#/visitors/document/objects/Schema" },
                      example:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .example,
                      examples:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .examples,
                      content:
                        Lg.visitors.document.objects.Parameter.fixedFields
                          .content,
                    },
                  },
                  RequestBody: {
                    $visitor: jx,
                    fixedFields: {
                      description:
                        Lg.visitors.document.objects.RequestBody.fixedFields
                          .description,
                      content:
                        Lg.visitors.document.objects.RequestBody.fixedFields
                          .content,
                      required:
                        Lg.visitors.document.objects.RequestBody.fixedFields
                          .required,
                    },
                  },
                  MediaType: {
                    $visitor: Jv,
                    fixedFields: {
                      schema: { $ref: "#/visitors/document/objects/Schema" },
                      example:
                        Lg.visitors.document.objects.MediaType.fixedFields
                          .example,
                      examples:
                        Lg.visitors.document.objects.MediaType.fixedFields
                          .examples,
                      encoding:
                        Lg.visitors.document.objects.MediaType.fixedFields
                          .encoding,
                    },
                  },
                  Encoding: {
                    $visitor: bx,
                    fixedFields: {
                      contentType:
                        Lg.visitors.document.objects.Encoding.fixedFields
                          .contentType,
                      headers:
                        Lg.visitors.document.objects.Encoding.fixedFields
                          .headers,
                      style:
                        Lg.visitors.document.objects.Encoding.fixedFields.style,
                      explode:
                        Lg.visitors.document.objects.Encoding.fixedFields
                          .explode,
                      allowReserved:
                        Lg.visitors.document.objects.Encoding.fixedFields
                          .allowReserved,
                    },
                  },
                  Responses: {
                    $visitor: _x,
                    fixedFields: {
                      default:
                        Lg.visitors.document.objects.Responses.fixedFields
                          .default,
                    },
                  },
                  Response: {
                    $visitor: Ax,
                    fixedFields: {
                      description:
                        Lg.visitors.document.objects.Response.fixedFields
                          .description,
                      headers:
                        Lg.visitors.document.objects.Response.fixedFields
                          .headers,
                      content:
                        Lg.visitors.document.objects.Response.fixedFields
                          .content,
                      links:
                        Lg.visitors.document.objects.Response.fixedFields.links,
                    },
                  },
                  Callback: { $visitor: Sx },
                  Example: {
                    $visitor: dx,
                    fixedFields: {
                      summary:
                        Lg.visitors.document.objects.Example.fixedFields
                          .summary,
                      description:
                        Lg.visitors.document.objects.Example.fixedFields
                          .description,
                      value:
                        Lg.visitors.document.objects.Example.fixedFields.value,
                      externalValue:
                        Lg.visitors.document.objects.Example.fixedFields
                          .externalValue,
                    },
                  },
                  Link: {
                    $visitor: Nv,
                    fixedFields: {
                      operationRef:
                        Lg.visitors.document.objects.Link.fixedFields
                          .operationRef,
                      operationId:
                        Lg.visitors.document.objects.Link.fixedFields
                          .operationId,
                      parameters:
                        Lg.visitors.document.objects.Link.fixedFields
                          .parameters,
                      requestBody:
                        Lg.visitors.document.objects.Link.fixedFields
                          .requestBody,
                      description:
                        Lg.visitors.document.objects.Link.fixedFields
                          .description,
                      server: { $ref: "#/visitors/document/objects/Server" },
                    },
                  },
                  Header: {
                    $visitor: sb,
                    fixedFields: {
                      description:
                        Lg.visitors.document.objects.Header.fixedFields
                          .description,
                      required:
                        Lg.visitors.document.objects.Header.fixedFields
                          .required,
                      deprecated:
                        Lg.visitors.document.objects.Header.fixedFields
                          .deprecated,
                      allowEmptyValue:
                        Lg.visitors.document.objects.Header.fixedFields
                          .allowEmptyValue,
                      style:
                        Lg.visitors.document.objects.Header.fixedFields.style,
                      explode:
                        Lg.visitors.document.objects.Header.fixedFields.explode,
                      allowReserved:
                        Lg.visitors.document.objects.Header.fixedFields
                          .allowReserved,
                      schema: { $ref: "#/visitors/document/objects/Schema" },
                      example:
                        Lg.visitors.document.objects.Header.fixedFields.example,
                      examples:
                        Lg.visitors.document.objects.Header.fixedFields
                          .examples,
                      content:
                        Lg.visitors.document.objects.Header.fixedFields.content,
                    },
                  },
                  Tag: {
                    $visitor: Qv,
                    fixedFields: {
                      name: Lg.visitors.document.objects.Tag.fixedFields.name,
                      description:
                        Lg.visitors.document.objects.Tag.fixedFields
                          .description,
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                    },
                  },
                  Reference: {
                    $visitor: eb,
                    fixedFields: {
                      $ref: Lg.visitors.document.objects.Reference.fixedFields
                        .$ref,
                      summary: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                    },
                  },
                  Schema: {
                    $visitor: Rb,
                    fixedFields: {
                      $schema: { $ref: "#/visitors/value" },
                      $vocabulary: Fb,
                      $id: { $ref: "#/visitors/value" },
                      $anchor: { $ref: "#/visitors/value" },
                      $dynamicAnchor: { $ref: "#/visitors/value" },
                      $dynamicRef: { $ref: "#/visitors/value" },
                      $ref: Db,
                      $defs: qb,
                      $comment: { $ref: "#/visitors/value" },
                      allOf: Bb,
                      anyOf: Vb,
                      oneOf: Hb,
                      not: { $ref: "#/visitors/document/objects/Schema" },
                      if: { $ref: "#/visitors/document/objects/Schema" },
                      then: { $ref: "#/visitors/document/objects/Schema" },
                      else: { $ref: "#/visitors/document/objects/Schema" },
                      dependentSchemas: Gb,
                      prefixItems: Kb,
                      items: { $ref: "#/visitors/document/objects/Schema" },
                      contains: { $ref: "#/visitors/document/objects/Schema" },
                      properties: Xb,
                      patternProperties: Zb,
                      additionalProperties: {
                        $ref: "#/visitors/document/objects/Schema",
                      },
                      propertyNames: {
                        $ref: "#/visitors/document/objects/Schema",
                      },
                      unevaluatedItems: {
                        $ref: "#/visitors/document/objects/Schema",
                      },
                      unevaluatedProperties: {
                        $ref: "#/visitors/document/objects/Schema",
                      },
                      type: ex,
                      enum: tx,
                      const: { $ref: "#/visitors/value" },
                      multipleOf: { $ref: "#/visitors/value" },
                      maximum: { $ref: "#/visitors/value" },
                      exclusiveMaximum: { $ref: "#/visitors/value" },
                      minimum: { $ref: "#/visitors/value" },
                      exclusiveMinimum: { $ref: "#/visitors/value" },
                      maxLength: { $ref: "#/visitors/value" },
                      minLength: { $ref: "#/visitors/value" },
                      pattern: { $ref: "#/visitors/value" },
                      maxItems: { $ref: "#/visitors/value" },
                      minItems: { $ref: "#/visitors/value" },
                      uniqueItems: { $ref: "#/visitors/value" },
                      maxContains: { $ref: "#/visitors/value" },
                      minContains: { $ref: "#/visitors/value" },
                      maxProperties: { $ref: "#/visitors/value" },
                      minProperties: { $ref: "#/visitors/value" },
                      required: { $ref: "#/visitors/value" },
                      dependentRequired: rx,
                      title: { $ref: "#/visitors/value" },
                      description: { $ref: "#/visitors/value" },
                      default: { $ref: "#/visitors/value" },
                      deprecated: { $ref: "#/visitors/value" },
                      readOnly: { $ref: "#/visitors/value" },
                      writeOnly: { $ref: "#/visitors/value" },
                      examples: nx,
                      format: { $ref: "#/visitors/value" },
                      contentEncoding: { $ref: "#/visitors/value" },
                      contentMediaType: { $ref: "#/visitors/value" },
                      contentSchema: {
                        $ref: "#/visitors/document/objects/Schema",
                      },
                      discriminator: {
                        $ref: "#/visitors/document/objects/Discriminator",
                      },
                      xml: { $ref: "#/visitors/document/objects/XML" },
                      externalDocs: {
                        $ref: "#/visitors/document/objects/ExternalDocumentation",
                      },
                      example: { $ref: "#/visitors/value" },
                    },
                  },
                  Discriminator: {
                    $visitor: ix,
                    fixedFields: {
                      propertyName:
                        Lg.visitors.document.objects.Discriminator.fixedFields
                          .propertyName,
                      mapping:
                        Lg.visitors.document.objects.Discriminator.fixedFields
                          .mapping,
                    },
                  },
                  XML: {
                    $visitor: ax,
                    fixedFields: {
                      name: Lg.visitors.document.objects.XML.fixedFields.name,
                      namespace:
                        Lg.visitors.document.objects.XML.fixedFields.namespace,
                      prefix:
                        Lg.visitors.document.objects.XML.fixedFields.prefix,
                      attribute:
                        Lg.visitors.document.objects.XML.fixedFields.attribute,
                      wrapped:
                        Lg.visitors.document.objects.XML.fixedFields.wrapped,
                    },
                  },
                  SecurityScheme: {
                    $visitor: Rx,
                    fixedFields: {
                      type: Lg.visitors.document.objects.SecurityScheme
                        .fixedFields.type,
                      description:
                        Lg.visitors.document.objects.SecurityScheme.fixedFields
                          .description,
                      name: Lg.visitors.document.objects.SecurityScheme
                        .fixedFields.name,
                      in: Lg.visitors.document.objects.SecurityScheme
                        .fixedFields.in,
                      scheme:
                        Lg.visitors.document.objects.SecurityScheme.fixedFields
                          .scheme,
                      bearerFormat:
                        Lg.visitors.document.objects.SecurityScheme.fixedFields
                          .bearerFormat,
                      flows: { $ref: "#/visitors/document/objects/OAuthFlows" },
                      openIdConnectUrl:
                        Lg.visitors.document.objects.SecurityScheme.fixedFields
                          .openIdConnectUrl,
                    },
                  },
                  OAuthFlows: {
                    $visitor: Dx,
                    fixedFields: {
                      implicit: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                      password: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                      clientCredentials: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                      authorizationCode: {
                        $ref: "#/visitors/document/objects/OAuthFlow",
                      },
                    },
                  },
                  OAuthFlow: {
                    $visitor: qx,
                    fixedFields: {
                      authorizationUrl:
                        Lg.visitors.document.objects.OAuthFlow.fixedFields
                          .authorizationUrl,
                      tokenUrl:
                        Lg.visitors.document.objects.OAuthFlow.fixedFields
                          .tokenUrl,
                      refreshUrl:
                        Lg.visitors.document.objects.OAuthFlow.fixedFields
                          .refreshUrl,
                      scopes:
                        Lg.visitors.document.objects.OAuthFlow.fixedFields
                          .scopes,
                    },
                  },
                  SecurityRequirement: { $visitor: Wv },
                },
                extension: {
                  $visitor: Lg.visitors.document.extension.$visitor,
                },
              },
            },
          },
          Hx = (e) => {
            if (Ca(e))
              return `${
                e.element.charAt(0).toUpperCase() + e.element.slice(1)
              }Element`;
          },
          Jx = {
            CallbackElement: ["content"],
            ComponentsElement: ["content"],
            ContactElement: ["content"],
            DiscriminatorElement: ["content"],
            Encoding: ["content"],
            Example: ["content"],
            ExternalDocumentationElement: ["content"],
            HeaderElement: ["content"],
            InfoElement: ["content"],
            LicenseElement: ["content"],
            MediaTypeElement: ["content"],
            OAuthFlowElement: ["content"],
            OAuthFlowsElement: ["content"],
            OpenApi3_1Element: ["content"],
            OperationElement: ["content"],
            ParameterElement: ["content"],
            PathItemElement: ["content"],
            PathsElement: ["content"],
            ReferenceElement: ["content"],
            RequestBodyElement: ["content"],
            ResponseElement: ["content"],
            ResponsesElement: ["content"],
            SchemaElement: ["content"],
            SecurityRequirementElement: ["content"],
            SecuritySchemeElement: ["content"],
            ServerElement: ["content"],
            ServerVariableElement: ["content"],
            TagElement: ["content"],
            ...Mc,
          },
          Gx = {
            namespace: (e) => {
              const { base: t } = e;
              return (
                t.register("callback", Gg),
                t.register("components", Wg),
                t.register("contact", Kg),
                t.register("discriminator", Yg),
                t.register("encoding", Xg),
                t.register("example", Qg),
                t.register("externalDocumentation", Zg),
                t.register("header", ev),
                t.register("info", tv),
                t.register("jsonSchemaDialect", nv),
                t.register("license", sv),
                t.register("link", iv),
                t.register("mediaType", ov),
                t.register("oAuthFlow", av),
                t.register("oAuthFlows", cv),
                t.register("openapi", lv),
                t.register("openApi3_1", pv),
                t.register("operation", hv),
                t.register("parameter", fv),
                t.register("pathItem", mv),
                t.register("paths", dv),
                t.register("reference", gv),
                t.register("requestBody", vv),
                t.register("response", bv),
                t.register("responses", xv),
                t.register("schema", Ev),
                t.register("securityRequirement", jv),
                t.register("securityScheme", Ov),
                t.register("server", Sv),
                t.register("serverVariable", Pv),
                t.register("tag", Av),
                t.register("xml", $v),
                t
              );
            },
          },
          Wx = () => {
            const e = cc(Gx);
            return {
              predicates: {
                ...l,
                isElement: Ca,
                isStringElement: Ma,
                isArrayElement: qa,
                isObjectElement: Na,
                isMemberElement: La,
                isServersElement: nm,
                includesClasses: Ya,
              },
              namespace: e,
            };
          },
          Kx = (
            e,
            {
              specPath: t = [
                "visitors",
                "document",
                "objects",
                "OpenApi",
                "$visitor",
              ],
              plugins: r = [],
            } = {}
          ) => {
            const n = (0, Zo.e)(e),
              s = Mu(zx),
              i = new (Hn(t, s))({ specObj: s });
            return (
              Fc(n, i),
              Nc(i.element, r, {
                toolboxCreator: Wx,
                visitorOptions: { keyMap: Jx, nodeTypeGetter: Hx },
              })
            );
          },
          Yx =
            (e) =>
            (t, r = {}) =>
              Kx(t, { specPath: e, ...r });
        (Gg.refract = Yx([
          "visitors",
          "document",
          "objects",
          "Callback",
          "$visitor",
        ])),
          (Wg.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Components",
            "$visitor",
          ])),
          (Kg.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Contact",
            "$visitor",
          ])),
          (Qg.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Example",
            "$visitor",
          ])),
          (Yg.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Discriminator",
            "$visitor",
          ])),
          (Xg.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Encoding",
            "$visitor",
          ])),
          (Zg.refract = Yx([
            "visitors",
            "document",
            "objects",
            "ExternalDocumentation",
            "$visitor",
          ])),
          (ev.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Header",
            "$visitor",
          ])),
          (tv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Info",
            "$visitor",
          ])),
          (nv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "OpenApi",
            "fixedFields",
            "jsonSchemaDialect",
          ])),
          (sv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "License",
            "$visitor",
          ])),
          (iv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Link",
            "$visitor",
          ])),
          (ov.refract = Yx([
            "visitors",
            "document",
            "objects",
            "MediaType",
            "$visitor",
          ])),
          (av.refract = Yx([
            "visitors",
            "document",
            "objects",
            "OAuthFlow",
            "$visitor",
          ])),
          (cv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "OAuthFlows",
            "$visitor",
          ])),
          (lv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "OpenApi",
            "fixedFields",
            "openapi",
          ])),
          (pv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "OpenApi",
            "$visitor",
          ])),
          (hv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Operation",
            "$visitor",
          ])),
          (fv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Parameter",
            "$visitor",
          ])),
          (mv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "PathItem",
            "$visitor",
          ])),
          (dv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Paths",
            "$visitor",
          ])),
          (gv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Reference",
            "$visitor",
          ])),
          (vv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "RequestBody",
            "$visitor",
          ])),
          (bv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Response",
            "$visitor",
          ])),
          (xv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Responses",
            "$visitor",
          ])),
          (Ev.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Schema",
            "$visitor",
          ])),
          (jv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "SecurityRequirement",
            "$visitor",
          ])),
          (Ov.refract = Yx([
            "visitors",
            "document",
            "objects",
            "SecurityScheme",
            "$visitor",
          ])),
          (Sv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Server",
            "$visitor",
          ])),
          (Pv.refract = Yx([
            "visitors",
            "document",
            "objects",
            "ServerVariable",
            "$visitor",
          ])),
          (Av.refract = Yx([
            "visitors",
            "document",
            "objects",
            "Tag",
            "$visitor",
          ])),
          ($v.refract = Yx([
            "visitors",
            "document",
            "objects",
            "XML",
            "$visitor",
          ]));
        const Xx = class extends bu {};
        const Qx = class extends Array {
          unknownMediaType = "application/octet-stream";
          filterByFormat() {
            throw new Xx(
              "filterByFormat method in MediaTypes class is not yet implemented."
            );
          }
          findBy() {
            throw new Xx(
              "findBy method in MediaTypes class is not yet implemented."
            );
          }
          latest() {
            throw new Xx(
              "latest method in MediaTypes class is not yet implemented."
            );
          }
        };
        class Zx extends Qx {
          filterByFormat(e = "generic") {
            const t = "generic" === e ? "openapi;version" : e;
            return this.filter((e) => e.includes(t));
          }
          findBy(e = "3.1.0", t = "generic") {
            const r =
              "generic" === t
                ? `vnd.oai.openapi;version=${e}`
                : `vnd.oai.openapi+${t};version=${e}`;
            return this.find((e) => e.includes(r)) || this.unknownMediaType;
          }
          latest(e = "generic") {
            return Ys(this.filterByFormat(e));
          }
        }
        const ew = new Zx(
            "application/vnd.oai.openapi;version=3.1.0",
            "application/vnd.oai.openapi+json;version=3.1.0",
            "application/vnd.oai.openapi+yaml;version=3.1.0"
          ),
          tw = Ru({
            props: { uri: "", value: null, depth: 0, refSet: null, errors: [] },
            init({
              depth: e = this.depth,
              refSet: t = this.refSet,
              uri: r = this.uri,
              value: n = this.value,
            } = {}) {
              (this.uri = r),
                (this.value = n),
                (this.depth = e),
                (this.refSet = t),
                (this.errors = []);
            },
          });
        const rw = Ln(function (e, t, r) {
            return ls(e, Ws(t, r));
          }),
          nw = Ru({
            props: { rootRef: null, refs: [], circular: !1 },
            init({ refs: e = [] } = {}) {
              (this.refs = []), e.forEach((e) => this.add(e));
            },
            methods: {
              get size() {
                return this.refs.length;
              },
              add(e) {
                return (
                  this.has(e) ||
                    (this.refs.push(e),
                    (this.rootRef = null === this.rootRef ? e : this.rootRef),
                    (e.refSet = this)),
                  this
                );
              },
              merge(e) {
                for (const t of e.values()) this.add(t);
                return this;
              },
              has(e) {
                const t = Ri(e) ? e : e.uri;
                return Ei(this.find(rw(t, "uri")));
              },
              find(e) {
                return this.refs.find(e);
              },
              *values() {
                yield* this.refs;
              },
              clean() {
                this.refs.forEach((e) => {
                  e.refSet = null;
                }),
                  (this.refs = []);
              },
            },
          }),
          sw = nw,
          iw = {
            parse: { mediaType: "text/plain", parsers: [], parserOpts: {} },
            resolve: {
              baseURI: "",
              resolvers: [],
              resolverOpts: {},
              strategies: [],
              external: !0,
              maxDepth: 1 / 0,
            },
            dereference: { strategies: [], refSet: null, maxDepth: 1 / 0 },
            bundle: { strategies: [], refSet: null, maxDepth: 1 / 0 },
          };
        const ow = qn(function (e, t) {
          return function (r) {
            return function (n) {
              return mi(function (e) {
                return t(e, n);
              }, r(e(n)));
            };
          };
        });
        var aw = Ln(function e(t, r, n) {
          if (0 === t.length) return r;
          var s = t[0];
          if (t.length > 1) {
            var i =
              !_u(n) && Yn(s, n) && "object" == typeof n[s]
                ? n[s]
                : Bn(t[1])
                ? []
                : {};
            r = e(Array.prototype.slice.call(t, 1), r, i);
          }
          return (function (e, t, r) {
            if (Bn(e) && gs(r)) {
              var n = [].concat(r);
              return (n[e] = t), n;
            }
            var s = {};
            for (var i in r) s[i] = r[i];
            return (s[e] = t), s;
          })(s, r, n);
        });
        const cw = aw;
        var lw = function (e) {
            return {
              value: e,
              map: function (t) {
                return lw(t(e));
              },
            };
          },
          uw = Ln(function (e, t, r) {
            return e(function (e) {
              return lw(t(e));
            })(r).value;
          });
        const pw = uw,
          hw = ow(Hn(["resolve", "baseURI"]), cw(["resolve", "baseURI"])),
          fw = (e) => (ml(e) ? Yi() : e),
          mw = Ru({
            props: {
              uri: null,
              mediaType: "text/plain",
              data: null,
              parseResult: null,
            },
            init({
              uri: e = this.uri,
              mediaType: t = this.mediaType,
              data: r = this.data,
              parseResult: n = this.parseResult,
            } = {}) {
              (this.uri = e),
                (this.mediaType = t),
                (this.data = r),
                (this.parseResult = n);
            },
            methods: {
              get extension() {
                return Ri(this.uri) ? zi(this.uri) : "";
              },
              toString() {
                if ("string" == typeof this.data) return this.data;
                if (
                  this.data instanceof ArrayBuffer ||
                  ["ArrayBuffer"].includes(os(this.data)) ||
                  ArrayBuffer.isView(this.data)
                ) {
                  return new TextDecoder("utf-8").decode(this.data);
                }
                return String(this.data);
              },
            },
          });
        const dw = class extends dc {
            plugin;
            constructor(e, t) {
              super(e, { cause: t.cause }), (this.plugin = t.plugin);
            }
          },
          yw = async (e, t, r) => {
            const n = await Promise.all(r.map(Ea([e], [t])));
            return r.filter((e, t) => n[t]);
          },
          gw = async (e, t, r) => {
            let n;
            for (const s of r)
              try {
                const r = await s[e].call(s, ...t);
                return { plugin: s, result: r };
              } catch (e) {
                n = new dw("Error while running plugin", {
                  cause: e,
                  plugin: s,
                });
              }
            return Promise.reject(n);
          };
        const vw = class extends dc {};
        const bw = class extends vw {},
          xw = async (e, t) => {
            let r = e,
              n = !1;
            if (!Ha(e)) {
              const t = kc(e);
              t.classes.push("result"), (r = new ia([t])), (n = !0);
            }
            const s = mw({
                uri: t.resolve.baseURI,
                parseResult: r,
                mediaType: t.parse.mediaType,
              }),
              i = await yw("canDereference", s, t.dereference.strategies);
            if (va(i)) throw new bw(s.uri);
            try {
              const { result: e } = await gw("dereference", [s, t], i);
              return n ? e.get(0) : e;
            } catch (e) {
              throw new vw(`Error while dereferencing file "${s.uri}"`, {
                cause: e,
              });
            }
          },
          ww = async (e, t = {}) => {
            const r = ((e, t) => {
              const r = ua(e, t);
              return pw(hw, fw, r);
            })(iw, t);
            return xw(e, r);
          };
        const Ew = class extends dc {};
        const jw = class extends Ew {},
          Ow = Ru({
            props: {
              name: "",
              allowEmpty: !0,
              sourceMap: !1,
              fileExtensions: [],
              mediaTypes: [],
            },
            init({
              allowEmpty: e = this.allowEmpty,
              sourceMap: t = this.sourceMap,
              fileExtensions: r = this.fileExtensions,
              mediaTypes: n = this.mediaTypes,
            } = {}) {
              (this.allowEmpty = e),
                (this.sourceMap = t),
                (this.fileExtensions = r),
                (this.mediaTypes = n);
            },
            methods: {
              async canParse() {
                throw new Xx(
                  "canParse method in Parser stamp is not yet implemented."
                );
              },
              async parse() {
                throw new Xx(
                  "parse method in Parser stamp is not yet implemented."
                );
              },
            },
          }),
          Sw = Ow,
          Pw = Ru(Sw, {
            props: { name: "binary" },
            methods: {
              async canParse(e) {
                return (
                  0 === this.fileExtensions.length ||
                  this.fileExtensions.includes(e.extension)
                );
              },
              async parse(e) {
                try {
                  const t = unescape(encodeURIComponent(e.toString())),
                    r = btoa(t),
                    n = new ia();
                  if (0 !== r.length) {
                    const e = new Zo.Om(r);
                    e.classes.push("result"), n.push(e);
                  }
                  return n;
                } catch (t) {
                  throw new jw(`Error parsing "${e.uri}"`, { cause: t });
                }
              },
            },
          }),
          Aw = Ru({
            props: { name: null },
            methods: {
              canResolve: () => !1,
              async resolve() {
                throw new Xx(
                  "resolve method in ResolveStrategy stamp is not yet implemented."
                );
              },
            },
          });
        const $w = qn(function (e, t) {
          return Pa(ds(e), t);
        });
        const _w = Nn(function (e) {
          for (var t = is(e), r = t.length, n = [], s = 0; s < r; )
            (n[s] = e[t[s]]), (s += 1);
          return n;
        });
        const kw = Qs(1, Fs(Promise.all, Promise));
        const Iw = class extends vw {};
        const Tw = class extends dc {};
        const Cw = class extends Tw {};
        const Mw = class extends dc {};
        const Rw = class extends Mw {};
        const Fw = class extends Tw {};
        const Dw = class extends Fw {},
          Nw = async (e, t) => {
            const r = mw({ uri: Qi(Ki(e)), mediaType: t.parse.mediaType }),
              n = await (async (e, t) => {
                const r = t.resolve.resolvers.map((e) => {
                    const r = Object.create(e);
                    return Object.assign(r, t.resolve.resolverOpts);
                  }),
                  n = await yw("canRead", e, r);
                if (va(n)) throw new Dw(e.uri);
                try {
                  const { result: t } = await gw("read", [e], n);
                  return t;
                } catch (t) {
                  throw new Tw(`Error while reading file "${e.uri}"`, {
                    cause: t,
                  });
                }
              })(r, t);
            return (async (e, t) => {
              const r = t.parse.parsers.map((e) => {
                  const r = Object.create(e);
                  return Object.assign(r, t.parse.parserOpts);
                }),
                n = await yw("canParse", e, r);
              if (va(n)) throw new Dw(e.uri);
              try {
                const { plugin: t, result: r } = await gw("parse", [e], n);
                return !t.allowEmpty && r.isEmpty
                  ? Promise.reject(
                      new Ew(
                        `Error while parsing file "${e.uri}". File is empty.`
                      )
                    )
                  : r;
              } catch (t) {
                throw new Ew(`Error while parsing file "${e.uri}"`, {
                  cause: t,
                });
              }
            })(mw({ ...r, data: n }), t);
          },
          qw = (e, t) => {
            const r = new Rc({ predicate: e });
            return Fc(t, r), new Zo.G6(r.result);
          };
        const Lw = Ln(function (e, t, r) {
            return Gs(e, Hn(t, r));
          }),
          Bw = (e, t) => {
            const r = new Rc({ predicate: e, returnOnTrue: vc });
            return Fc(t, r), Lw(void 0, [0], r.result);
          };
        const Uw = class extends dc {};
        const Vw = class extends Uw {};
        const zw = class extends Uw {
            constructor(e) {
              super(`Invalid JSON Schema $anchor "${e}".`);
            }
          },
          Hw = (e) => /^[A-Za-z_][A-Za-z_0-9.-]*$/.test(e),
          Jw = (e) => {
            const t = Wi(e);
            return vl("#", t);
          },
          Gw = (e, t) => {
            const r = ((e) => {
                if (!Hw(e)) throw new zw(e);
                return e;
              })(e),
              n = Bw((e) => Ab(e) && Yc(e.$anchor) === r, t);
            if (wi(n)) throw new Vw(`Evaluation failed on token: "${r}"`);
            return n;
          },
          Ww = (e, t) => {
            if (void 0 === t.$ref) return;
            const r = Wi(Yc(t.$ref)),
              n = Yc(t.meta.get("inherited$id"));
            return `${Us((e, t) => Xi(e, Qi(Ki(t))), e, [...n, Yc(t.$ref)])}${
              "#" === r ? "" : r
            }`;
          },
          Kw = (e) => {
            if (Kw.cache.has(e)) return Kw.cache.get(e);
            const t = Ev.refract(e);
            return Kw.cache.set(e, t), t;
          };
        Kw.cache = new WeakMap();
        const Yw = (e) => (Ga(e) ? Kw(e) : e),
          Xw = (e, t) => {
            const { cache: r } = Xw,
              n = Ki(e),
              s = (e) => Ab(e) && void 0 !== e.$id;
            if (!r.has(t)) {
              const e = qw(s, t);
              r.set(t, Array.from(e));
            }
            const i = r.get(t).find(
              (e) =>
                ((e, t) => {
                  if (void 0 === t.$id) return;
                  const r = Yc(t.meta.get("inherited$id"));
                  return Us((e, t) => Xi(e, Qi(Ki(t))), e, [...r, Yc(t.$id)]);
                })(n, e) === n
            );
            if (wi(i)) throw new Rw(`Evaluation failed on URI: "${e}"`);
            let o, a;
            return (
              Hw(Jw(e)) ? ((o = Gw), (a = Jw(e))) : ((o = Ol), (a = wl(e))),
              o(a, i)
            );
          };
        Xw.cache = new WeakMap();
        const Qw = Fc[Symbol.for("nodejs.util.promisify.custom")],
          Zw = Ru({
            props: {
              indirections: [],
              namespace: null,
              reference: null,
              crawledElements: null,
              crawlingMap: null,
              visited: null,
              options: null,
            },
            init({
              reference: e,
              namespace: t,
              indirections: r = [],
              visited: n = new WeakSet(),
              options: s,
            }) {
              (this.indirections = r),
                (this.namespace = t),
                (this.reference = e),
                (this.crawledElements = []),
                (this.crawlingMap = {}),
                (this.visited = n),
                (this.options = s);
            },
            methods: {
              toBaseURI(e) {
                return Xi(this.reference.uri, Qi(Ki(e)));
              },
              async toReference(e) {
                if (this.reference.depth >= this.options.resolve.maxDepth)
                  throw new Cw(
                    `Maximum resolution depth of ${this.options.resolve.maxDepth} has been exceeded by file "${this.reference.uri}"`
                  );
                const t = this.toBaseURI(e),
                  { refSet: r } = this.reference;
                if (r.has(t)) return r.find(rw(t, "uri"));
                const n = await Nw(Zi(t), {
                    ...this.options,
                    parse: { ...this.options.parse, mediaType: "text/plain" },
                  }),
                  s = tw({ uri: t, value: n, depth: this.reference.depth + 1 });
                return r.add(s), s;
              },
              ReferenceElement(e) {
                const t = Yc(e.$ref),
                  r = this.toBaseURI(t);
                if (
                  !this.options.resolve.external &&
                  Ki(this.reference.uri) !== r
                )
                  return !1;
                Tu(r, this.crawlingMap) ||
                  (this.crawlingMap[r] = this.toReference(t)),
                  this.crawledElements.push(e);
              },
              PathItemElement(e) {
                if (!Ma(e.$ref)) return;
                const t = Yc(e.$ref),
                  r = this.toBaseURI(t);
                (this.options.resolve.external ||
                  Ki(this.reference.uri) === r) &&
                  (Tu(r, this.crawlingMap) ||
                    (this.crawlingMap[r] = this.toReference(t)),
                  this.crawledElements.push(e));
              },
              LinkElement(e) {
                if (!Ma(e.operationRef) && !Ma(e.operationId)) return;
                const t = Yc(e.operationRef),
                  r = this.toBaseURI(t),
                  n = Ki(this.reference.uri) !== r;
                if (this.options.resolve.external || !n) {
                  if (Ma(e.operationRef) && Ma(e.operationId))
                    throw new dc(
                      "LinkElement operationRef and operationId are mutually exclusive."
                    );
                  n &&
                    (Tu(r, this.crawlingMap) ||
                      (this.crawlingMap[r] = this.toReference(t)));
                }
              },
              ExampleElement(e) {
                if (!Ma(e.externalValue)) return;
                if (e.hasKey("value") && Ma(e.externalValue))
                  throw new dc(
                    "ExampleElement value and externalValue fields are mutually exclusive."
                  );
                const t = Yc(e.externalValue),
                  r = this.toBaseURI(t);
                (this.options.resolve.external ||
                  Ki(this.reference.uri) === r) &&
                  (Tu(r, this.crawlingMap) ||
                    (this.crawlingMap[r] = this.toReference(t)));
              },
              async SchemaElement(e) {
                if (this.visited.has(e)) return !1;
                if (!Ma(e.$ref)) return void this.visited.add(e);
                const t = await this.toReference(Zi(this.reference.uri));
                let { uri: r } = t;
                const n = Ww(r, e),
                  s = Ki(n),
                  i = mw({ uri: s }),
                  o = $w((e) => e.canRead(i), this.options.resolve.resolvers),
                  a = !o,
                  c = (e) => Ki(this.reference.uri) !== e;
                if (!Tu(s, this.crawlingMap))
                  try {
                    if (o || a) this.crawlingMap[s] = t;
                    else {
                      if (
                        ((r = this.toBaseURI(Yc(n))),
                        !this.options.resolve.external && c(r))
                      )
                        return void this.visited.add(e);
                      this.crawlingMap[s] = this.toReference(Zi(n));
                    }
                  } catch (t) {
                    if (!(a && t instanceof Rw)) throw t;
                    if (
                      ((r = this.toBaseURI(Zi(n))),
                      !this.options.resolve.external && c(r))
                    )
                      return void this.visited.add(e);
                    this.crawlingMap[s] = this.toReference(Zi(n));
                  }
                this.crawledElements.push(e);
              },
              async crawlReferenceElement(e) {
                const t = await this.toReference(Yc(e.$ref));
                this.indirections.push(e);
                const r = wl(Yc(e.$ref));
                let n = Ol(r, t.value.result);
                if (Ga(n)) {
                  const t = Yc(e.meta.get("referenced-element"));
                  if (Uh(n))
                    (n = gv.refract(n)),
                      n.setMetaProperty("referenced-element", t);
                  else {
                    n = this.namespace.getElementClass(t).refract(n);
                  }
                }
                if (this.indirections.includes(n))
                  throw new dc("Recursive Reference Object detected");
                if (
                  this.indirections.length > this.options.dereference.maxDepth
                )
                  throw new Iw(
                    `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                  );
                const s = Zw({
                  reference: t,
                  namespace: this.namespace,
                  indirections: [...this.indirections],
                  options: this.options,
                });
                await Qw(n, s, { keyMap: Jx, nodeTypeGetter: Hx }),
                  await s.crawl(),
                  this.indirections.pop();
              },
              async crawlPathItemElement(e) {
                const t = await this.toReference(Yc(e.$ref));
                this.indirections.push(e);
                const r = wl(Yc(e.$ref));
                let n = Ol(r, t.value.result);
                if (
                  (Ga(n) && (n = mv.refract(n)), this.indirections.includes(n))
                )
                  throw new dc("Recursive Path Item Object reference detected");
                if (
                  this.indirections.length > this.options.dereference.maxDepth
                )
                  throw new Iw(
                    `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                  );
                const s = Zw({
                  reference: t,
                  namespace: this.namespace,
                  indirections: [...this.indirections],
                  options: this.options,
                });
                await Qw(n, s, { keyMap: Jx, nodeTypeGetter: Hx }),
                  await s.crawl(),
                  this.indirections.pop();
              },
              async crawlSchemaElement(e) {
                let t = await this.toReference(Zi(this.reference.uri)),
                  { uri: r } = t;
                const n = Ww(r, e),
                  s = Ki(n),
                  i = mw({ uri: s }),
                  o = $w((e) => e.canRead(i), this.options.resolve.resolvers),
                  a = !o,
                  c = (e) => Ki(this.reference.uri) !== e;
                let l;
                this.indirections.push(e);
                try {
                  if (o || a) {
                    l = Xw(n, Yw(t.value.result));
                  } else {
                    if (
                      ((r = this.toBaseURI(Yc(n))),
                      !this.options.resolve.external && c(r))
                    )
                      return;
                    t = await this.toReference(Zi(n));
                    const e = wl(n);
                    l = Yw(Ol(e, t.value.result));
                  }
                } catch (e) {
                  if (!(a && e instanceof Rw)) throw e;
                  if (Hw(Jw(n))) {
                    if (
                      ((r = this.toBaseURI(Yc(n))),
                      !this.options.resolve.external && c(r))
                    )
                      return;
                    t = await this.toReference(Zi(n));
                    const e = Jw(n);
                    l = Gw(e, Yw(t.value.result));
                  } else {
                    if (
                      ((r = this.toBaseURI(Yc(n))),
                      !this.options.resolve.external && c(r))
                    )
                      return;
                    t = await this.toReference(Zi(n));
                    const e = wl(n);
                    l = Yw(Ol(e, t.value.result));
                  }
                }
                if ((this.visited.add(e), this.indirections.includes(l)))
                  throw new dc("Recursive Schema Object reference detected");
                if (
                  this.indirections.length > this.options.dereference.maxDepth
                )
                  throw new Iw(
                    `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                  );
                const u = Zw({
                  reference: t,
                  namespace: this.namespace,
                  indirections: [...this.indirections],
                  options: this.options,
                  visited: this.visited,
                });
                await Qw(l, u, { keyMap: Jx, nodeTypeGetter: Hx }),
                  await u.crawl(),
                  this.indirections.pop();
              },
              async crawl() {
                await Js(_w, kw)(this.crawlingMap), (this.crawlingMap = null);
                for (const e of this.crawledElements)
                  Eb(e)
                    ? await this.crawlReferenceElement(e)
                    : Ab(e)
                    ? await this.crawlSchemaElement(e)
                    : bb(e) && (await this.crawlPathItemElement(e));
              },
            },
          }),
          eE = Zw,
          tE = Fc[Symbol.for("nodejs.util.promisify.custom")],
          rE = Ru(Aw, {
            init() {
              this.name = "openapi-3-1";
            },
            methods: {
              canResolve(e) {
                var t;
                return "text/plain" !== e.mediaType
                  ? ew.includes(e.mediaType)
                  : yb(
                      null === (t = e.parseResult) || void 0 === t
                        ? void 0
                        : t.result
                    );
              },
              async resolve(e, t) {
                const r = cc(Gx),
                  n = tw({ uri: e.uri, value: e.parseResult }),
                  s = eE({ reference: n, namespace: r, options: t }),
                  i = sw();
                return (
                  i.add(n),
                  await tE(i.rootRef.value, s, {
                    keyMap: Jx,
                    nodeTypeGetter: Hx,
                  }),
                  await s.crawl(),
                  i
                );
              },
            },
          }),
          nE = rE;
        function sE(e, t, r) {
          if (
            (r || (r = new iE()),
            (function (e) {
              var t = typeof e;
              return null == e || ("object" != t && "function" != t);
            })(e))
          )
            return e;
          var n = function (n) {
            var s = r.get(e);
            if (s) return s;
            for (var i in (r.set(e, n), e))
              Object.prototype.hasOwnProperty.call(e, i) &&
                (n[i] = t ? sE(e[i], !0, r) : e[i]);
            return n;
          };
          switch (os(e)) {
            case "Object":
              return n(Object.create(Object.getPrototypeOf(e)));
            case "Array":
              return n([]);
            case "Date":
              return new Date(e.valueOf());
            case "RegExp":
              return Gn(e);
            case "Int8Array":
            case "Uint8Array":
            case "Uint8ClampedArray":
            case "Int16Array":
            case "Uint16Array":
            case "Int32Array":
            case "Uint32Array":
            case "Float32Array":
            case "Float64Array":
            case "BigInt64Array":
            case "BigUint64Array":
              return e.slice();
            default:
              return e;
          }
        }
        var iE = (function () {
            function e() {
              (this.map = {}), (this.length = 0);
            }
            return (
              (e.prototype.set = function (e, t) {
                const r = this.hash(e);
                let n = this.map[r];
                n || (this.map[r] = n = []), n.push([e, t]), (this.length += 1);
              }),
              (e.prototype.hash = function (e) {
                let t = [];
                for (var r in e) t.push(Object.prototype.toString.call(e[r]));
                return t.join();
              }),
              (e.prototype.get = function (e) {
                if (this.length <= 180) {
                  for (const t in this.map) {
                    const r = this.map[t];
                    for (let t = 0; t < r.length; t += 1) {
                      const n = r[t];
                      if (n[0] === e) return n[1];
                    }
                  }
                  return;
                }
                const t = this.hash(e),
                  r = this.map[t];
                if (r)
                  for (let t = 0; t < r.length; t += 1) {
                    const n = r[t];
                    if (n[0] === e) return n[1];
                  }
              }),
              e
            );
          })(),
          oE = (function () {
            function e(e, t, r, n) {
              (this.valueFn = e),
                (this.valueAcc = t),
                (this.keyFn = r),
                (this.xf = n),
                (this.inputs = {});
            }
            return (
              (e.prototype["@@transducer/init"] = xs),
              (e.prototype["@@transducer/result"] = function (e) {
                var t;
                for (t in this.inputs)
                  if (
                    Yn(t, this.inputs) &&
                    (e = this.xf["@@transducer/step"](e, this.inputs[t]))[
                      "@@transducer/reduced"
                    ]
                  ) {
                    e = e["@@transducer/value"];
                    break;
                  }
                return (this.inputs = null), this.xf["@@transducer/result"](e);
              }),
              (e.prototype["@@transducer/step"] = function (e, t) {
                var r = this.keyFn(t);
                return (
                  (this.inputs[r] = this.inputs[r] || [
                    r,
                    sE(this.valueAcc, !1),
                  ]),
                  (this.inputs[r][1] = this.valueFn(this.inputs[r][1], t)),
                  e
                );
              }),
              e
            );
          })();
        function aE(e, t, r) {
          return function (n) {
            return new oE(e, t, r, n);
          };
        }
        const cE = qn(
            Vs(
              "groupBy",
              Xs(
                4,
                [],
                vs([], aE, function (e, t, r, n) {
                  var s = Bs(function (n, s) {
                    var i = r(s),
                      o = e(Yn(i, n) ? n[i] : sE(t, !1), s);
                    return o && o["@@transducer/reduced"]
                      ? ja(n)
                      : ((n[i] = o), n);
                  });
                  return qs(s, {}, n);
                })
              )(function (e, t) {
                return e.push(t), e;
              }, [])
            )
          ),
          lE = (e) => e.replace(/\s/g, ""),
          uE = (e) => e.replace(/\W/gi, "_"),
          pE = (e, t, r) => {
            const n = lE(e);
            return n.length > 0
              ? uE(n)
              : ((e, t) => `${uE(lE(t.toLowerCase()))}${uE(lE(e))}`)(t, r);
          },
          hE =
            ({ operationIdNormalizer: e = pE } = {}) =>
            ({ predicates: t, namespace: r }) => {
              const n = [],
                s = [],
                i = [];
              return {
                visitor: {
                  OpenApi3_1Element: {
                    leave() {
                      const e = cE((e) => Yc(e.operationId), s);
                      Object.entries(e).forEach(([e, t]) => {
                        Array.isArray(t) &&
                          (t.length <= 1 ||
                            t.forEach((t, n) => {
                              const s = `${e}${n + 1}`;
                              t.operationId = new r.elements.String(s);
                            }));
                      }),
                        i.forEach((e) => {
                          if (void 0 === e.operationId) return;
                          const t = String(Yc(e.operationId)),
                            r = s.find(
                              (e) => Yc(e.meta.get("originalOperationId")) === t
                            );
                          void 0 !== r &&
                            ((e.operationId = Ac.safe(r.operationId)),
                            e.meta.set("originalOperationId", t),
                            e.set("__originalOperationId", t));
                        }),
                        (s.length = 0),
                        (i.length = 0);
                    },
                  },
                  PathItemElement: {
                    enter(e) {
                      const t = Gs("path", Yc(e.meta.get("path")));
                      n.push(t);
                    },
                    leave() {
                      n.pop();
                    },
                  },
                  OperationElement: {
                    enter(t) {
                      if (void 0 === t.operationId) return;
                      const i = String(Yc(t.operationId)),
                        o = Ys(n),
                        a = Gs("method", Yc(t.meta.get("http-method"))),
                        c = e(i, o, a);
                      i !== c &&
                        ((t.operationId = new r.elements.String(c)),
                        t.set("__originalOperationId", i),
                        t.meta.set("originalOperationId", i),
                        s.push(t));
                    },
                  },
                  LinkElement: {
                    leave(e) {
                      t.isLinkElement(e) &&
                        void 0 !== e.operationId &&
                        i.push(e);
                    },
                  },
                },
              };
            };
        var fE = (function () {
          function e(e, t) {
            (this.xf = t), (this.pred = e), (this.items = []);
          }
          return (
            (e.prototype["@@transducer/init"] = xs),
            (e.prototype["@@transducer/result"] = ws),
            (e.prototype["@@transducer/step"] = function (e, t) {
              return Kn(this.pred, t, this.items)
                ? e
                : (this.items.push(t), this.xf["@@transducer/step"](e, t));
            }),
            e
          );
        })();
        function mE(e) {
          return function (t) {
            return new fE(e, t);
          };
        }
        const dE = qn(
            vs([], mE, function (e, t) {
              for (var r, n = 0, s = t.length, i = []; n < s; )
                Kn(e, (r = t[n]), i) || (i[i.length] = r), (n += 1);
              return i;
            })
          ),
          yE =
            () =>
            ({ predicates: e }) => {
              const t = (t, r) =>
                  !!e.isParameterElement(t) &&
                  !!e.isParameterElement(r) &&
                  !!e.isStringElement(t.name) &&
                  !!e.isStringElement(t.in) &&
                  !!e.isStringElement(r.name) &&
                  !!e.isStringElement(r.in) &&
                  Yc(t.name) === Yc(r.name) &&
                  Yc(t.in) === Yc(r.in),
                r = [];
              return {
                visitor: {
                  PathItemElement: {
                    enter(t, n, s, i, o) {
                      if (o.some(e.isComponentsElement)) return;
                      const { parameters: a } = t;
                      e.isArrayElement(a) ? r.push([...a.content]) : r.push([]);
                    },
                    leave() {
                      r.pop();
                    },
                  },
                  OperationElement: {
                    leave(e) {
                      const n = Ys(r);
                      if (!Array.isArray(n) || 0 === n.length) return;
                      const s = Lw([], ["parameters", "content"], e),
                        i = dE(t, [...s, ...n]);
                      e.parameters = new eg(i);
                    },
                  },
                },
              };
            },
          gE =
            () =>
            ({ predicates: e }) => {
              let t;
              return {
                visitor: {
                  OpenApi3_1Element: {
                    enter(r) {
                      e.isArrayElement(r.security) && (t = r.security);
                    },
                    leave() {
                      t = void 0;
                    },
                  },
                  OperationElement: {
                    leave(r, n, s, i, o) {
                      if (o.some(e.isComponentsElement)) return;
                      var a;
                      void 0 === r.security &&
                        void 0 !== t &&
                        (r.security = new ug(
                          null === (a = t) || void 0 === a ? void 0 : a.content
                        ));
                    },
                  },
                },
              };
            },
          vE =
            () =>
            ({ predicates: e, namespace: t }) => ({
              visitor: {
                OpenApi3_1Element(r) {
                  const n = void 0 === r.servers,
                    s = e.isArrayElement(r.servers),
                    i = s && 0 === r.servers.length,
                    o = t.elements.Server.refract({ url: "/" });
                  n || !s
                    ? (r.servers = new xf([o]))
                    : s && i && r.servers.push(o);
                },
                PathItemElement(t, r, n, s, i) {
                  if (i.some(e.isComponentsElement)) return;
                  if (!i.some(e.isOpenApi3_1Element)) return;
                  const o = i.find(e.isOpenApi3_1Element),
                    a = void 0 === t.servers,
                    c = e.isArrayElement(t.servers),
                    l = c && 0 === t.servers.length;
                  if (e.isOpenApi3_1Element(o)) {
                    var u;
                    const e =
                        null === (u = o.servers) || void 0 === u
                          ? void 0
                          : u.content,
                      r = null != e ? e : [];
                    a || !c
                      ? (t.servers = new xg(r))
                      : c &&
                        l &&
                        r.forEach((e) => {
                          t.servers.push(e);
                        });
                  }
                },
                OperationElement(t, r, n, s, i) {
                  if (i.some(e.isComponentsElement)) return;
                  if (!i.some(e.isOpenApi3_1Element)) return;
                  const o = [...i].reverse().find(e.isPathItemElement),
                    a = void 0 === t.servers,
                    c = e.isArrayElement(t.servers),
                    l = c && 0 === t.servers.length;
                  if (e.isPathItemElement(o)) {
                    var u;
                    const e =
                        null === (u = o.servers) || void 0 === u
                          ? void 0
                          : u.content,
                      r = null != e ? e : [];
                    a || !c
                      ? (t.servers = new mg(r))
                      : c &&
                        l &&
                        r.forEach((e) => {
                          t.servers.push(e);
                        });
                  }
                },
              },
            }),
          bE =
            () =>
            ({ predicates: e }) => ({
              visitor: {
                ParameterElement: {
                  leave(t, r, n, s, i) {
                    var o, a;
                    if (
                      !i.some(e.isComponentsElement) &&
                      void 0 !== t.schema &&
                      e.isSchemaElement(t.schema) &&
                      (void 0 !==
                        (null === (o = t.schema) || void 0 === o
                          ? void 0
                          : o.example) ||
                        void 0 !==
                          (null === (a = t.schema) || void 0 === a
                            ? void 0
                            : a.examples))
                    ) {
                      if (
                        void 0 !== t.examples &&
                        e.isObjectElement(t.examples)
                      ) {
                        const e = t.examples.map((e) => Ac.safe(e.value));
                        return (
                          void 0 !== t.schema.examples &&
                            t.schema.set("examples", e),
                          void (
                            void 0 !== t.schema.example &&
                            t.schema.set("example", e)
                          )
                        );
                      }
                      void 0 !== t.example &&
                        (void 0 !== t.schema.examples &&
                          t.schema.set("examples", [Ac(t.example)]),
                        void 0 !== t.schema.example &&
                          t.schema.set("example", Ac(t.example)));
                    }
                  },
                },
              },
            }),
          xE =
            () =>
            ({ predicates: e }) => ({
              visitor: {
                HeaderElement: {
                  leave(t, r, n, s, i) {
                    var o, a;
                    if (
                      !i.some(e.isComponentsElement) &&
                      void 0 !== t.schema &&
                      e.isSchemaElement(t.schema) &&
                      (void 0 !==
                        (null === (o = t.schema) || void 0 === o
                          ? void 0
                          : o.example) ||
                        void 0 !==
                          (null === (a = t.schema) || void 0 === a
                            ? void 0
                            : a.examples))
                    ) {
                      if (
                        void 0 !== t.examples &&
                        e.isObjectElement(t.examples)
                      ) {
                        const e = t.examples.map((e) => Ac.safe(e.value));
                        return (
                          void 0 !== t.schema.examples &&
                            t.schema.set("examples", e),
                          void (
                            void 0 !== t.schema.example &&
                            t.schema.set("example", e)
                          )
                        );
                      }
                      void 0 !== t.example &&
                        (void 0 !== t.schema.examples &&
                          t.schema.set("examples", [Ac(t.example)]),
                        void 0 !== t.schema.example &&
                          t.schema.set("example", Ac(t.example)));
                    }
                  },
                },
              },
            }),
          wE = (e) => (t) => {
            if (t?.$$normalized) return t;
            if (wE.cache.has(t)) return wE.cache.get(t);
            const r = pv.refract(t),
              n = e(r),
              s = Yc(n);
            return wE.cache.set(t, s), s;
          };
        wE.cache = new WeakMap();
        const EE = (e) => {
            if (!Na(e)) return e;
            if (e.hasKey("$$normalized")) return e;
            const t = [
                hE({
                  operationIdNormalizer: (e, t, r) =>
                    Lo({ operationId: e }, t, r, {
                      v2OperationIdCompatibilityMode: !1,
                    }),
                }),
                yE(),
                gE(),
                vE(),
                bE(),
                xE(),
              ],
              r = Nc(e, t, {
                toolboxCreator: Wx,
                visitorOptions: { keyMap: Jx, nodeTypeGetter: Hx },
              });
            return r.set("$$normalized", !0), r;
          },
          jE = Ru({
            props: { name: null },
            methods: {
              canRead: () => !1,
              async read() {
                throw new Xx(
                  "read method in Resolver stamp is not yet implemented."
                );
              },
            },
          }),
          OE = Ru(jE, {
            props: { timeout: 5e3, redirects: 5, withCredentials: !1 },
            init({
              timeout: e = this.timeout,
              redirects: t = this.redirects,
              withCredentials: r = this.withCredentials,
            } = {}) {
              (this.timeout = e),
                (this.redirects = t),
                (this.withCredentials = r);
            },
            methods: {
              canRead: (e) => Ji(e.uri),
              async read() {
                throw new Xx(
                  "read method in HttpResolver stamp is not yet implemented."
                );
              },
              getHttpClient() {
                throw new Xx(
                  "getHttpClient method in HttpResolver stamp is not yet implemented."
                );
              },
            },
          }),
          { AbortController: SE, AbortSignal: PE } = globalThis;
        void 0 === globalThis.AbortController &&
          (globalThis.AbortController = SE),
          void 0 === globalThis.AbortSignal && (globalThis.AbortSignal = PE);
        const AE = OE.compose({
            props: {
              name: "http-swagger-client",
              swaggerHTTPClient: Or,
              swaggerHTTPClientConfig: {},
            },
            init({ swaggerHTTPClient: e = this.swaggerHTTPClient } = {}) {
              this.swaggerHTTPClient = e;
            },
            methods: {
              getHttpClient() {
                return this.swaggerHTTPClient;
              },
              async read(e) {
                const t = this.getHttpClient(),
                  r = new AbortController(),
                  { signal: n } = r,
                  s = setTimeout(() => {
                    r.abort();
                  }, this.timeout),
                  i =
                    this.getHttpClient().withCredentials || this.withCredentials
                      ? "include"
                      : "same-origin",
                  o = 0 === this.redirects ? "error" : "follow",
                  a = this.redirects > 0 ? this.redirects : void 0;
                try {
                  return (
                    await t({
                      url: e.uri,
                      signal: n,
                      userFetch: async (e, t) => {
                        let r = await fetch(e, t);
                        try {
                          r.headers.delete("Content-Type");
                        } catch {
                          (r = new Response(r.body, {
                            ...r,
                            headers: new Headers(r.headers),
                          })),
                            r.headers.delete("Content-Type");
                        }
                        return r;
                      },
                      credentials: i,
                      redirect: o,
                      follow: a,
                      ...this.swaggerHTTPClientConfig,
                    })
                  ).text.arrayBuffer();
                } catch (t) {
                  throw new Fw(`Error downloading "${e.uri}"`, { cause: t });
                } finally {
                  clearTimeout(s);
                }
              },
            },
          }),
          $E = (e, t = lc) => {
            if (Ri(e))
              try {
                return t.fromRefract(JSON.parse(e));
              } catch {}
            return ic(e) && Tu("element", e)
              ? t.fromRefract(e)
              : t.toElement(e);
          },
          _E = Sw.compose({
            props: {
              name: "json-swagger-client",
              fileExtensions: [".json"],
              mediaTypes: ["application/json"],
            },
            methods: {
              async canParse(e) {
                const t =
                    0 === this.fileExtensions.length ||
                    this.fileExtensions.includes(e.extension),
                  r = this.mediaTypes.includes(e.mediaType);
                if (!t) return !1;
                if (r) return !0;
                if (!r)
                  try {
                    return JSON.parse(e.toString()), !0;
                  } catch (e) {
                    return !1;
                  }
                return !1;
              },
              async parse(e) {
                if (this.sourceMap)
                  throw new jw(
                    "json-swagger-client parser plugin doesn't support sourceMaps option"
                  );
                const t = new ia(),
                  r = e.toString();
                if (this.allowEmpty && "" === r.trim()) return t;
                try {
                  const e = $E(JSON.parse(r));
                  return e.classes.push("result"), t.push(e), t;
                } catch (t) {
                  throw new jw(`Error parsing "${e.uri}"`, { cause: t });
                }
              },
            },
          }),
          kE = Sw.compose({
            props: {
              name: "yaml-1-2-swagger-client",
              fileExtensions: [".yaml", ".yml"],
              mediaTypes: ["text/yaml", "application/yaml"],
            },
            methods: {
              async canParse(e) {
                const t =
                    0 === this.fileExtensions.length ||
                    this.fileExtensions.includes(e.extension),
                  r = this.mediaTypes.includes(e.mediaType);
                if (!t) return !1;
                if (r) return !0;
                if (!r)
                  try {
                    return pr.load(e.toString(), { schema: er }), !0;
                  } catch (e) {
                    return !1;
                  }
                return !1;
              },
              async parse(e) {
                if (this.sourceMap)
                  throw new jw(
                    "yaml-1-2-swagger-client parser plugin doesn't support sourceMaps option"
                  );
                const t = new ia(),
                  r = e.toString();
                try {
                  const e = pr.load(r, { schema: er });
                  if (this.allowEmpty && void 0 === e) return t;
                  const n = $E(e);
                  return n.classes.push("result"), t.push(n), t;
                } catch (t) {
                  throw new jw(`Error parsing "${e.uri}"`, { cause: t });
                }
              },
            },
          }),
          IE = Sw.compose({
            props: {
              name: "openapi-json-3-1-swagger-client",
              fileExtensions: [".json"],
              mediaTypes: new Zx(
                ...ew.filterByFormat("generic"),
                ...ew.filterByFormat("json")
              ),
              detectionRegExp:
                /"openapi"\s*:\s*"(?<version_json>3\.1\.(?:[1-9]\d*|0))"/,
            },
            methods: {
              async canParse(e) {
                const t =
                    0 === this.fileExtensions.length ||
                    this.fileExtensions.includes(e.extension),
                  r = this.mediaTypes.includes(e.mediaType);
                if (!t) return !1;
                if (r) return !0;
                if (!r)
                  try {
                    const t = e.toString();
                    return JSON.parse(t), this.detectionRegExp.test(t);
                  } catch (e) {
                    return !1;
                  }
                return !1;
              },
              async parse(e) {
                if (this.sourceMap)
                  throw new jw(
                    "openapi-json-3-1-swagger-client parser plugin doesn't support sourceMaps option"
                  );
                const t = new ia(),
                  r = e.toString();
                if (this.allowEmpty && "" === r.trim()) return t;
                try {
                  const e = JSON.parse(r),
                    n = pv.refract(e, this.refractorOpts);
                  return n.classes.push("result"), t.push(n), t;
                } catch (t) {
                  throw new jw(`Error parsing "${e.uri}"`, { cause: t });
                }
              },
            },
          }),
          TE = Sw.compose({
            props: {
              name: "openapi-yaml-3-1-swagger-client",
              fileExtensions: [".yaml", ".yml"],
              mediaTypes: new Zx(
                ...ew.filterByFormat("generic"),
                ...ew.filterByFormat("yaml")
              ),
              detectionRegExp:
                /(?<YAML>^(["']?)openapi\2\s*:\s*(["']?)(?<version_yaml>3\.1\.(?:[1-9]\d*|0))\3(?:\s+|$))|(?<JSON>"openapi"\s*:\s*"(?<version_json>3\.1\.(?:[1-9]\d*|0))")/m,
            },
            methods: {
              async canParse(e) {
                const t =
                    0 === this.fileExtensions.length ||
                    this.fileExtensions.includes(e.extension),
                  r = this.mediaTypes.includes(e.mediaType);
                if (!t) return !1;
                if (r) return !0;
                if (!r)
                  try {
                    const t = e.toString();
                    return pr.load(t), this.detectionRegExp.test(t);
                  } catch (e) {
                    return !1;
                  }
                return !1;
              },
              async parse(e) {
                if (this.sourceMap)
                  throw new jw(
                    "openapi-yaml-3-1-swagger-client parser plugin doesn't support sourceMaps option"
                  );
                const t = new ia(),
                  r = e.toString();
                try {
                  const e = pr.load(r, { schema: er });
                  if (this.allowEmpty && void 0 === e) return t;
                  const n = pv.refract(e, this.refractorOpts);
                  return n.classes.push("result"), t.push(n), t;
                } catch (t) {
                  throw new jw(`Error parsing "${e.uri}"`, { cause: t });
                }
              },
            },
          }),
          CE = Ru({
            props: { name: null },
            methods: {
              canDereference: () => !1,
              async dereference() {
                throw new Xx(
                  "dereference method in DereferenceStrategy stamp is not yet implemented."
                );
              },
            },
          });
        var ME = r(8068);
        const RE = class extends yc {
            value;
            constructor(e, t) {
              super(e, t), void 0 !== t && (this.value = t.value);
            }
          },
          FE = Ru({
            props: { uuid: null, length: null, identityMap: null },
            init({ length: e = 6 } = {}) {
              (this.length = 6),
                (this.uuid = new ME({ length: e })),
                (this.identityMap = new WeakMap());
            },
            methods: {
              identify(e) {
                if (!Ca(e))
                  throw new RE(
                    "Cannot not identify the element. `element` is neither structurally compatible nor a subclass of an Element class.",
                    { value: e }
                  );
                if (
                  e.meta.hasKey("id") &&
                  Ma(e.meta.id) &&
                  !e.meta.id.equals("")
                )
                  return e.id;
                if (this.identityMap.has(e)) return this.identityMap.get(e);
                const t = new Zo.Om(this.generateId());
                return this.identityMap.set(e, t), t;
              },
              forget(e) {
                return (
                  !!this.identityMap.has(e) && (this.identityMap.delete(e), !0)
                );
              },
              generateId() {
                return this.uuid.randomUUID();
              },
            },
          });
        FE({ length: 6 });
        class DE extends Array {
          includesCycle(e) {
            return this.filter((t) => t.has(e)).length > 1;
          }
          includes(e, t) {
            return e instanceof Set
              ? super.includes(e, t)
              : this.some((t) => t.has(e));
          }
          findItem(e) {
            for (const t of this)
              for (const r of t) if (Ca(r) && e(r)) return r;
          }
        }
        const NE = Fc[Symbol.for("nodejs.util.promisify.custom")],
          qE = FE(),
          LE = (e) => (t) =>
            t.meta.hasKey("ref-referencing-element-id") &&
            t.meta.get("ref-referencing-element-id").equals(Yc(qE.identify(e))),
          BE = Ru({
            props: {
              indirections: null,
              namespace: null,
              reference: null,
              options: null,
              ancestors: null,
            },
            init({
              indirections: e = [],
              reference: t,
              namespace: r,
              options: n,
              ancestors: s = new DE(),
            }) {
              (this.indirections = e),
                (this.namespace = r),
                (this.reference = t),
                (this.options = n),
                (this.ancestors = new DE(...s));
            },
            methods: {
              toBaseURI(e) {
                return Xi(this.reference.uri, Qi(Ki(e)));
              },
              async toReference(e) {
                if (this.reference.depth >= this.options.resolve.maxDepth)
                  throw new Cw(
                    `Maximum resolution depth of ${this.options.resolve.maxDepth} has been exceeded by file "${this.reference.uri}"`
                  );
                const t = this.toBaseURI(e),
                  { refSet: r } = this.reference;
                if (r.has(t)) return r.find(rw(t, "uri"));
                const n = await Nw(Zi(t), {
                    ...this.options,
                    parse: { ...this.options.parse, mediaType: "text/plain" },
                  }),
                  s = tw({ uri: t, value: n, depth: this.reference.depth + 1 });
                return r.add(s), s;
              },
              toAncestorLineage(e) {
                const t = new Set(e.filter(Ca));
                return [new DE(...this.ancestors, t), t];
              },
              async ReferenceElement(e, t, r, n, s) {
                const [i, o] = this.toAncestorLineage([...s, r]);
                if (i.includesCycle(e)) return !1;
                const a = this.toBaseURI(Yc(e.$ref));
                if (
                  !this.options.resolve.external &&
                  Ki(this.reference.uri) !== a
                )
                  return !1;
                const c = await this.toReference(Yc(e.$ref)),
                  l = Xi(a, Yc(e.$ref));
                this.indirections.push(e);
                const u = wl(l);
                let p = Ol(u, c.value.result);
                if (Ga(p)) {
                  const t = Yc(e.meta.get("referenced-element"));
                  if (Uh(p))
                    (p = gv.refract(p)),
                      p.setMetaProperty("referenced-element", t);
                  else {
                    p = this.namespace.getElementClass(t).refract(p);
                  }
                }
                if (this.indirections.includes(p))
                  throw new dc("Recursive Reference Object detected");
                if (
                  this.indirections.length > this.options.dereference.maxDepth
                )
                  throw new Iw(
                    `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                  );
                o.add(e);
                const h = BE({
                  reference: c,
                  namespace: this.namespace,
                  indirections: [...this.indirections],
                  options: this.options,
                  ancestors: i,
                });
                (p = await NE(p, h, { keyMap: Jx, nodeTypeGetter: Hx })),
                  o.delete(e),
                  this.indirections.pop();
                const f = (t) => {
                  const r = kc(t);
                  return (
                    r.setMetaProperty("ref-fields", {
                      $ref: Yc(e.$ref),
                      description: Yc(e.description),
                      summary: Yc(e.summary),
                    }),
                    r.setMetaProperty("ref-origin", c.uri),
                    r.setMetaProperty(
                      "ref-referencing-element-id",
                      Ac(qE.identify(e))
                    ),
                    Na(t) &&
                      (e.hasKey("description") &&
                        "description" in t &&
                        (r.remove("description"),
                        r.set("description", e.get("description"))),
                      e.hasKey("summary") &&
                        "summary" in t &&
                        (r.remove("summary"),
                        r.set("summary", e.get("summary")))),
                    r
                  );
                };
                if (i.includes(e) || i.includes(p)) {
                  var m;
                  const n =
                    null !== (m = i.findItem(LE(e))) && void 0 !== m ? m : f(p);
                  return (
                    La(r) ? (r.value = n) : Array.isArray(r) && (r[t] = n), !1
                  );
                }
                return f(p);
              },
              async PathItemElement(e, t, r, n, s) {
                const [i, o] = this.toAncestorLineage([...s, r]);
                if (!Ma(e.$ref)) return;
                if (i.includesCycle(e)) return !1;
                const a = this.toBaseURI(Yc(e.$ref));
                if (
                  !this.options.resolve.external &&
                  Ki(this.reference.uri) !== a
                )
                  return;
                const c = await this.toReference(Yc(e.$ref)),
                  l = Xi(a, Yc(e.$ref));
                this.indirections.push(e);
                const u = wl(l);
                let p = Ol(u, c.value.result);
                if (
                  (Ga(p) && (p = mv.refract(p)), this.indirections.includes(p))
                )
                  throw new dc("Recursive Path Item Object reference detected");
                if (
                  this.indirections.length > this.options.dereference.maxDepth
                )
                  throw new Iw(
                    `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                  );
                o.add(e);
                const h = BE({
                  reference: c,
                  namespace: this.namespace,
                  indirections: [...this.indirections],
                  options: this.options,
                  ancestors: i,
                });
                (p = await NE(p, h, { keyMap: Jx, nodeTypeGetter: Hx })),
                  o.delete(e),
                  this.indirections.pop();
                const f = (t) => {
                  const r = new mv(
                    [...t.content],
                    Ac(t.meta),
                    Ac(t.attributes)
                  );
                  return (
                    e.forEach((e, t, n) => {
                      r.remove(Yc(t)), r.content.push(n);
                    }),
                    r.remove("$ref"),
                    r.setMetaProperty("ref-fields", { $ref: Yc(e.$ref) }),
                    r.setMetaProperty("ref-origin", c.uri),
                    r.setMetaProperty(
                      "ref-referencing-element-id",
                      Ac(qE.identify(e))
                    ),
                    r
                  );
                };
                if (i.includes(e) || i.includes(p)) {
                  var m;
                  const n =
                    null !== (m = i.findItem(LE(e))) && void 0 !== m ? m : f(p);
                  return (
                    La(r) ? (r.value = n) : Array.isArray(r) && (r[t] = n), !1
                  );
                }
                return f(p);
              },
              async LinkElement(e) {
                if (!Ma(e.operationRef) && !Ma(e.operationId)) return;
                if (Ma(e.operationRef) && Ma(e.operationId))
                  throw new dc(
                    "LinkElement operationRef and operationId fields are mutually exclusive."
                  );
                let t;
                if (Ma(e.operationRef)) {
                  var r;
                  const n = wl(Yc(e.operationRef)),
                    s = this.toBaseURI(Yc(e.operationRef));
                  if (
                    !this.options.resolve.external &&
                    Ki(this.reference.uri) !== s
                  )
                    return;
                  const i = await this.toReference(Yc(e.operationRef));
                  (t = Ol(n, i.value.result)),
                    Ga(t) && (t = hv.refract(t)),
                    (t = kc(t)),
                    t.setMetaProperty("ref-origin", i.uri);
                  const o = kc(e);
                  return (
                    null === (r = o.operationRef) ||
                      void 0 === r ||
                      r.meta.set("operation", t),
                    o
                  );
                }
                if (Ma(e.operationId)) {
                  var n;
                  const r = Yc(e.operationId),
                    s = await this.toReference(Zi(this.reference.uri));
                  if (
                    ((t = Bw(
                      (e) =>
                        gb(e) && Ca(e.operationId) && e.operationId.equals(r),
                      s.value.result
                    )),
                    wi(t))
                  )
                    throw new dc(
                      `OperationElement(operationId=${r}) not found.`
                    );
                  const i = kc(e);
                  return (
                    null === (n = i.operationId) ||
                      void 0 === n ||
                      n.meta.set("operation", t),
                    i
                  );
                }
              },
              async ExampleElement(e, t, r, n, s) {
                const [i] = this.toAncestorLineage([...s, r]);
                if (!Ma(e.externalValue)) return;
                if (i.includesCycle(e)) return !1;
                if (e.hasKey("value") && Ma(e.externalValue))
                  throw new dc(
                    "ExampleElement value and externalValue fields are mutually exclusive."
                  );
                const o = this.toBaseURI(Yc(e.externalValue));
                if (
                  !this.options.resolve.external &&
                  Ki(this.reference.uri) !== o
                )
                  return;
                const a = await this.toReference(Yc(e.externalValue)),
                  c = kc(a.value.result);
                c.setMetaProperty("ref-origin", a.uri);
                const l = kc(e);
                return (l.value = c), l;
              },
              async SchemaElement(e, t, r, n, s) {
                const [i, o] = this.toAncestorLineage([...s, r]);
                if (!Ma(e.$ref)) return;
                if (i.includesCycle(e)) return !1;
                let a = await this.toReference(Zi(this.reference.uri)),
                  { uri: c } = a;
                const l = Ww(c, e),
                  u = Ki(l),
                  p = mw({ uri: u }),
                  h = $w((e) => e.canRead(p), this.options.resolve.resolvers),
                  f = !h,
                  m = (e) => Ki(this.reference.uri) !== e;
                let d;
                this.indirections.push(e);
                try {
                  if (h || f) {
                    d = Xw(l, Yw(a.value.result));
                  } else {
                    if (
                      ((c = this.toBaseURI(Yc(l))),
                      !this.options.resolve.external && m(c))
                    )
                      return;
                    a = await this.toReference(Zi(l));
                    const e = wl(l);
                    d = Yw(Ol(e, a.value.result));
                  }
                } catch (e) {
                  if (!(f && e instanceof Rw)) throw e;
                  if (Hw(Jw(l))) {
                    if (
                      ((c = this.toBaseURI(Yc(l))),
                      !this.options.resolve.external && m(c))
                    )
                      return;
                    a = await this.toReference(Zi(l));
                    const e = Jw(l);
                    d = Gw(e, Yw(a.value.result));
                  } else {
                    if (
                      ((c = this.toBaseURI(Yc(l))),
                      !this.options.resolve.external && m(c))
                    )
                      return;
                    a = await this.toReference(Zi(l));
                    const e = wl(l);
                    d = Yw(Ol(e, a.value.result));
                  }
                }
                if (this.indirections.includes(d))
                  throw new dc("Recursive Schema Object reference detected");
                if (
                  this.indirections.length > this.options.dereference.maxDepth
                )
                  throw new Iw(
                    `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                  );
                o.add(e);
                const y = BE({
                  reference: a,
                  namespace: this.namespace,
                  indirections: [...this.indirections],
                  options: this.options,
                  ancestors: i,
                });
                if (
                  ((d = await NE(d, y, { keyMap: Jx, nodeTypeGetter: Hx })),
                  o.delete(e),
                  this.indirections.pop(),
                  $b(d))
                ) {
                  const t = Ac(d);
                  return (
                    t.setMetaProperty("ref-fields", { $ref: Yc(e.$ref) }),
                    t.setMetaProperty("ref-origin", a.uri),
                    t.setMetaProperty(
                      "ref-referencing-element-id",
                      Ac(qE.identify(e))
                    ),
                    t
                  );
                }
                const g = (t) => {
                  const r = new Ev(
                    [...t.content],
                    Ac(t.meta),
                    Ac(t.attributes)
                  );
                  return (
                    e.forEach((e, t, n) => {
                      r.remove(Yc(t)), r.content.push(n);
                    }),
                    r.remove("$ref"),
                    r.setMetaProperty("ref-fields", { $ref: Yc(e.$ref) }),
                    r.setMetaProperty("ref-origin", a.uri),
                    r.setMetaProperty(
                      "ref-referencing-element-id",
                      Ac(qE.identify(e))
                    ),
                    r
                  );
                };
                if (i.includes(e) || i.includes(d)) {
                  var v;
                  const n =
                    null !== (v = i.findItem(LE(e))) && void 0 !== v ? v : g(d);
                  return (
                    La(r) ? (r.value = n) : Array.isArray(r) && (r[t] = n), !1
                  );
                }
                return g(d);
              },
            },
          }),
          UE = BE,
          VE = Fc[Symbol.for("nodejs.util.promisify.custom")],
          zE = Ru(CE, {
            init() {
              this.name = "openapi-3-1";
            },
            methods: {
              canDereference(e) {
                var t;
                return "text/plain" !== e.mediaType
                  ? ew.includes(e.mediaType)
                  : yb(
                      null === (t = e.parseResult) || void 0 === t
                        ? void 0
                        : t.result
                    );
              },
              async dereference(e, t) {
                const r = cc(Gx),
                  n = Gs(sw(), t.dereference.refSet);
                let s;
                n.has(e.uri)
                  ? (s = n.find(rw(e.uri, "uri")))
                  : ((s = tw({ uri: e.uri, value: e.parseResult })), n.add(s));
                const i = UE({ reference: s, namespace: r, options: t }),
                  o = await VE(n.rootRef.value, i, {
                    keyMap: Jx,
                    nodeTypeGetter: Hx,
                  });
                return null === t.dereference.refSet && n.clean(), o;
              },
            },
          }),
          HE = zE,
          JE = (e) => {
            const t = ((e) => e.slice(2))(e);
            return t.reduce((e, r, n) => {
              if (La(r)) {
                const t = String(Yc(r.key));
                e.push(t);
              } else if (qa(t[n - 2])) {
                const s = t[n - 2].content.indexOf(r);
                e.push(s);
              }
              return e;
            }, []);
          },
          GE = (e) => {
            if (null == e.cause) return e;
            let { cause: t } = e;
            for (; null != t.cause; ) t = t.cause;
            return t;
          },
          WE = eo("SchemaRefError", function (e, t, r) {
            (this.originalError = r), Object.assign(this, t || {});
          }),
          { wrapError: KE } = go,
          YE = Fc[Symbol.for("nodejs.util.promisify.custom")],
          XE = FE(),
          QE = (e) => (t) =>
            t.meta.hasKey("ref-referencing-element-id") &&
            t.meta.get("ref-referencing-element-id").equals(Yc(XE.identify(e))),
          ZE = UE.compose({
            props: {
              useCircularStructures: !0,
              allowMetaPatches: !1,
              basePath: null,
            },
            init({
              allowMetaPatches: e = this.allowMetaPatches,
              useCircularStructures: t = this.useCircularStructures,
              basePath: r = this.basePath,
            }) {
              (this.allowMetaPatches = e),
                (this.useCircularStructures = t),
                (this.basePath = r);
            },
            methods: {
              async ReferenceElement(e, t, r, n, s) {
                try {
                  const [n, i] = this.toAncestorLineage([...s, r]);
                  if (Ya(["cycle"], e.$ref)) return !1;
                  if (n.includesCycle(e)) return !1;
                  if (!this.options.resolve.external && jb(e)) return !1;
                  const o = await this.toReference(Yc(e.$ref)),
                    { uri: a } = o,
                    c = Xi(a, Yc(e.$ref));
                  this.indirections.push(e);
                  const l = wl(c);
                  let u = Ol(l, o.value.result);
                  if (Ga(u)) {
                    const t = Yc(e.meta.get("referenced-element"));
                    if (Uh(u))
                      (u = gv.refract(u)),
                        u.setMetaProperty("referenced-element", t);
                    else {
                      u = this.namespace.getElementClass(t).refract(u);
                    }
                  }
                  if (this.indirections.includes(u))
                    throw new dc("Recursive JSON Pointer detected");
                  if (
                    this.indirections.length > this.options.dereference.maxDepth
                  )
                    throw new Iw(
                      `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                    );
                  if (!this.useCircularStructures) {
                    if (n.includes(u)) {
                      if (Ji(a) || Hi(a)) {
                        const t = new gv(
                          { $ref: c },
                          Ac(e.meta),
                          Ac(e.attributes)
                        );
                        return t.get("$ref").classes.push("cycle"), t;
                      }
                      return !1;
                    }
                  }
                  i.add(e);
                  const p = ZE({
                    reference: o,
                    namespace: this.namespace,
                    indirections: [...this.indirections],
                    options: this.options,
                    ancestors: n,
                    allowMetaPatches: this.allowMetaPatches,
                    useCircularStructures: this.useCircularStructures,
                    basePath: this.basePath ?? [...JE([...s, r, e]), "$ref"],
                  });
                  (u = await YE(u, p, { keyMap: Jx, nodeTypeGetter: Hx })),
                    i.delete(e),
                    this.indirections.pop();
                  const h = (t) => {
                    const r = kc(t);
                    if (
                      (r.setMetaProperty("ref-fields", {
                        $ref: Yc(e.$ref),
                        description: Yc(e.description),
                        summary: Yc(e.summary),
                      }),
                      r.setMetaProperty("ref-origin", o.uri),
                      r.setMetaProperty(
                        "ref-referencing-element-id",
                        Ac(XE.identify(e))
                      ),
                      Na(t) &&
                        (e.hasKey("description") &&
                          "description" in t &&
                          (r.remove("description"),
                          r.set("description", e.get("description"))),
                        e.hasKey("summary") &&
                          "summary" in t &&
                          (r.remove("summary"),
                          r.set("summary", e.get("summary")))),
                      this.allowMetaPatches && Na(r) && !r.hasKey("$$ref"))
                    ) {
                      const e = Xi(a, c);
                      r.set("$$ref", e);
                    }
                    return r;
                  };
                  if (n.includes(e) || n.includes(u)) {
                    const s = n.findItem(QE(e)) ?? h(u);
                    return (
                      La(r) ? (r.value = s) : Array.isArray(r) && (r[t] = s), !1
                    );
                  }
                  return h(u);
                } catch (t) {
                  const n = GE(t),
                    i = KE(n, {
                      baseDoc: this.reference.uri,
                      $ref: Yc(e.$ref),
                      pointer: wl(Yc(e.$ref)),
                      fullPath: this.basePath ?? [...JE([...s, r, e]), "$ref"],
                    });
                  return void this.options.dereference.dereferenceOpts?.errors?.push?.(
                    i
                  );
                }
              },
              async PathItemElement(e, t, r, n, s) {
                try {
                  const [n, i] = this.toAncestorLineage([...s, r]);
                  if (!Ma(e.$ref)) return;
                  if (Ya(["cycle"], e.$ref)) return !1;
                  if (n.includesCycle(e)) return !1;
                  if (!this.options.resolve.external && xb(e)) return;
                  const o = await this.toReference(Yc(e.$ref)),
                    { uri: a } = o,
                    c = Xi(a, Yc(e.$ref));
                  this.indirections.push(e);
                  const l = wl(c);
                  let u = Ol(l, o.value.result);
                  if (
                    (Ga(u) && (u = mv.refract(u)),
                    this.indirections.includes(u))
                  )
                    throw new dc("Recursive JSON Pointer detected");
                  if (
                    this.indirections.length > this.options.dereference.maxDepth
                  )
                    throw new Iw(
                      `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                    );
                  if (!this.useCircularStructures) {
                    if (n.includes(u)) {
                      if (Ji(a) || Hi(a)) {
                        const t = new mv(
                          { $ref: c },
                          Ac(e.meta),
                          Ac(e.attributes)
                        );
                        return t.get("$ref").classes.push("cycle"), t;
                      }
                      return !1;
                    }
                  }
                  i.add(e);
                  const p = ZE({
                    reference: o,
                    namespace: this.namespace,
                    indirections: [...this.indirections],
                    options: this.options,
                    ancestors: n,
                    allowMetaPatches: this.allowMetaPatches,
                    useCircularStructures: this.useCircularStructures,
                    basePath: this.basePath ?? [...JE([...s, r, e]), "$ref"],
                  });
                  (u = await YE(u, p, { keyMap: Jx, nodeTypeGetter: Hx })),
                    i.delete(e),
                    this.indirections.pop();
                  const h = (t) => {
                    const r = new mv(
                      [...t.content],
                      Ac(t.meta),
                      Ac(t.attributes)
                    );
                    if (
                      (e.forEach((e, t, n) => {
                        r.remove(Yc(t)), r.content.push(n);
                      }),
                      r.remove("$ref"),
                      r.setMetaProperty("ref-fields", { $ref: Yc(e.$ref) }),
                      r.setMetaProperty("ref-origin", o.uri),
                      r.setMetaProperty(
                        "ref-referencing-element-id",
                        Ac(XE.identify(e))
                      ),
                      this.allowMetaPatches && void 0 === r.get("$$ref"))
                    ) {
                      const e = Xi(a, c);
                      r.set("$$ref", e);
                    }
                    return r;
                  };
                  if (n.includes(e) || n.includes(u)) {
                    const s = n.findItem(QE(e)) ?? h(u);
                    return (
                      La(r) ? (r.value = s) : Array.isArray(r) && (r[t] = s), !1
                    );
                  }
                  return h(u);
                } catch (t) {
                  const n = GE(t),
                    i = KE(n, {
                      baseDoc: this.reference.uri,
                      $ref: Yc(e.$ref),
                      pointer: wl(Yc(e.$ref)),
                      fullPath: this.basePath ?? [...JE([...s, r, e]), "$ref"],
                    });
                  return void this.options.dereference.dereferenceOpts?.errors?.push?.(
                    i
                  );
                }
              },
              async SchemaElement(e, t, r, n, s) {
                try {
                  const [n, i] = this.toAncestorLineage([...s, r]);
                  if (!Ma(e.$ref)) return;
                  if (Ya(["cycle"], e.$ref)) return !1;
                  if (n.includesCycle(e)) return !1;
                  let o = await this.toReference(Zi(this.reference.uri)),
                    { uri: a } = o;
                  const c = Ww(a, e),
                    l = Ki(c),
                    u = mw({ uri: l }),
                    p = !this.options.resolve.resolvers.some((e) =>
                      e.canRead(u)
                    ),
                    h = !p,
                    f = h && a !== l;
                  if (!this.options.resolve.external && f) return;
                  let m;
                  this.indirections.push(e);
                  try {
                    if (p || h) {
                      m = Xw(c, Yw(o.value.result));
                    } else {
                      (o = await this.toReference(Zi(c))), (a = o.uri);
                      const e = wl(c);
                      m = Yw(Ol(e, o.value.result));
                    }
                  } catch (e) {
                    if (!(h && e instanceof Rw)) throw e;
                    if (Hw(Jw(c))) {
                      (o = await this.toReference(Zi(c))), (a = o.uri);
                      const e = Jw(c);
                      m = Gw(e, Yw(o.value.result));
                    } else {
                      (o = await this.toReference(Zi(c))), (a = o.uri);
                      const e = wl(c);
                      m = Yw(Ol(e, o.value.result));
                    }
                  }
                  if (this.indirections.includes(m))
                    throw new dc("Recursive Schema Object reference detected");
                  if (
                    this.indirections.length > this.options.dereference.maxDepth
                  )
                    throw new Iw(
                      `Maximum dereference depth of "${this.options.dereference.maxDepth}" has been exceeded in file "${this.reference.uri}"`
                    );
                  if (!this.useCircularStructures) {
                    if (n.includes(m)) {
                      if (Ji(a) || Hi(a)) {
                        const t = Xi(a, c),
                          r = new Ev({ $ref: t }, Ac(e.meta), Ac(e.attributes));
                        return r.get("$ref").classes.push("cycle"), r;
                      }
                      return !1;
                    }
                  }
                  i.add(e);
                  const d = ZE({
                    reference: o,
                    namespace: this.namespace,
                    indirections: [...this.indirections],
                    options: this.options,
                    useCircularStructures: this.useCircularStructures,
                    allowMetaPatches: this.allowMetaPatches,
                    ancestors: n,
                    basePath: this.basePath ?? [...JE([...s, r, e]), "$ref"],
                  });
                  if (
                    ((m = await YE(m, d, { keyMap: Jx, nodeTypeGetter: Hx })),
                    i.delete(e),
                    this.indirections.pop(),
                    $b(m))
                  ) {
                    const t = Ac(m);
                    return (
                      t.setMetaProperty("ref-fields", { $ref: Yc(e.$ref) }),
                      t.setMetaProperty("ref-origin", o.uri),
                      t.setMetaProperty(
                        "ref-referencing-element-id",
                        Ac(XE.identify(e))
                      ),
                      t
                    );
                  }
                  const y = (t) => {
                    const r = new Ev(
                      [...t.content],
                      Ac(t.meta),
                      Ac(t.attributes)
                    );
                    if (
                      (e.forEach((e, t, n) => {
                        r.remove(Yc(t)), r.content.push(n);
                      }),
                      r.remove("$ref"),
                      r.setMetaProperty("ref-fields", { $ref: Yc(e.$ref) }),
                      r.setMetaProperty("ref-origin", o.uri),
                      r.setMetaProperty(
                        "ref-referencing-element-id",
                        Ac(XE.identify(e))
                      ),
                      this.allowMetaPatches && void 0 === r.get("$$ref"))
                    ) {
                      const e = Xi(a, c);
                      r.set("$$ref", e);
                    }
                    return r;
                  };
                  if (n.includes(e) || n.includes(m)) {
                    const s = n.findItem(QE(e)) ?? y(m);
                    return (
                      La(r) ? (r.value = s) : Array.isArray(r) && (r[t] = s), !1
                    );
                  }
                  return y(m);
                } catch (t) {
                  const n = GE(t),
                    i = new WE(
                      `Could not resolve reference: ${n.message}`,
                      {
                        baseDoc: this.reference.uri,
                        $ref: Yc(e.$ref),
                        fullPath: this.basePath ?? [
                          ...JE([...s, r, e]),
                          "$ref",
                        ],
                      },
                      n
                    );
                  return void this.options.dereference.dereferenceOpts?.errors?.push?.(
                    i
                  );
                }
              },
              async LinkElement() {},
              async ExampleElement(e, t, r, n, s) {
                try {
                  return await UE.compose.methods.ExampleElement.call(
                    this,
                    e,
                    t,
                    r,
                    n,
                    s
                  );
                } catch (t) {
                  const n = GE(t),
                    i = KE(n, {
                      baseDoc: this.reference.uri,
                      externalValue: Yc(e.externalValue),
                      fullPath: this.basePath ?? [
                        ...JE([...s, r, e]),
                        "externalValue",
                      ],
                    });
                  return void this.options.dereference.dereferenceOpts?.errors?.push?.(
                    i
                  );
                }
              },
            },
          }),
          ej = ZE,
          tj = HE.compose.bind(),
          rj = tj({
            init({ parameterMacro: e, options: t }) {
              (this.parameterMacro = e), (this.options = t);
            },
            props: {
              parameterMacro: null,
              options: null,
              macroOperation: null,
              OperationElement: {
                enter(e) {
                  this.macroOperation = e;
                },
                leave() {
                  this.macroOperation = null;
                },
              },
              ParameterElement: {
                leave(e, t, r, n, s) {
                  const i =
                      null === this.macroOperation
                        ? null
                        : Yc(this.macroOperation),
                    o = Yc(e);
                  try {
                    const t = this.parameterMacro(i, o);
                    e.set("default", t);
                  } catch (e) {
                    const t = new Error(e, { cause: e });
                    (t.fullPath = JE([...s, r])),
                      this.options.dereference.dereferenceOpts?.errors?.push?.(
                        t
                      );
                  }
                },
              },
            },
          }),
          nj = tj({
            init({ modelPropertyMacro: e, options: t }) {
              (this.modelPropertyMacro = e), (this.options = t);
            },
            props: {
              modelPropertyMacro: null,
              options: null,
              SchemaElement: {
                leave(e, t, r, n, s) {
                  void 0 !== e.properties &&
                    Na(e.properties) &&
                    e.properties.forEach((t) => {
                      if (Na(t))
                        try {
                          const e = this.modelPropertyMacro(Yc(t));
                          t.set("default", e);
                        } catch (t) {
                          const n = new Error(t, { cause: t });
                          (n.fullPath = [...JE([...s, r, e]), "properties"]),
                            this.options.dereference.dereferenceOpts?.errors?.push?.(
                              n
                            );
                        }
                    });
                },
              },
            },
          }),
          sj = (e) => {
            const t = Ac(e.meta),
              r = Ac(e.attributes);
            return new e.constructor(void 0, t, r);
          },
          ij = (e, t) =>
            t.clone && t.isMergeableElement(e) ? cj(sj(e), e, t) : e,
          oj = (e, t, r) => e.concat(t)["fantasy-land/map"]((e) => ij(e, r)),
          aj = (e, t, r) => {
            const n = Na(e) ? sj(e) : sj(t);
            return (
              Na(e) &&
                e.forEach((e, t, s) => {
                  const i = kc(s);
                  (i.value = ij(e, r)), n.content.push(i);
                }),
              t.forEach((t, s, i) => {
                const o = Yc(s);
                let a;
                if (Na(e) && e.hasKey(o) && r.isMergeableElement(t)) {
                  const n = e.get(o);
                  (a = kc(i)),
                    (a.value = ((e, t) => {
                      if ("function" != typeof t.customMerge) return cj;
                      const r = t.customMerge(e, t);
                      return "function" == typeof r ? r : cj;
                    })(s, r)(n, t));
                } else (a = kc(i)), (a.value = ij(t, r));
                n.remove(o), n.content.push(a);
              }),
              n
            );
          };
        function cj(e, t, r) {
          var n, s, i;
          const o = {
              clone: !0,
              isMergeableElement: (e) => Na(e) || qa(e),
              arrayElementMerge: oj,
              objectElementMerge: aj,
              customMerge: void 0,
            },
            a = { ...o, ...r };
          (a.isMergeableElement =
            null !== (n = a.isMergeableElement) && void 0 !== n
              ? n
              : o.isMergeableElement),
            (a.arrayElementMerge =
              null !== (s = a.arrayElementMerge) && void 0 !== s
                ? s
                : o.arrayElementMerge),
            (a.objectElementMerge =
              null !== (i = a.objectElementMerge) && void 0 !== i
                ? i
                : o.objectElementMerge);
          const c = qa(t);
          return c === qa(e)
            ? c && "function" == typeof a.arrayElementMerge
              ? a.arrayElementMerge(e, t, a)
              : a.objectElementMerge(e, t, a)
            : ij(t, a);
        }
        cj.all = (e, t) => {
          if (!Array.isArray(e))
            throw new TypeError(
              "First argument of deepmerge should be an array."
            );
          return 0 === e.length
            ? new Zo.Sh()
            : e.reduce((e, r) => cj(e, r, t), sj(e[0]));
        };
        const lj = tj({
            init({ options: e }) {
              this.options = e;
            },
            props: {
              options: null,
              SchemaElement: {
                leave(e, t, r, n, s) {
                  if (void 0 === e.allOf) return;
                  if (!qa(e.allOf)) {
                    const t = new TypeError("allOf must be an array");
                    return (
                      (t.fullPath = [...JE([...s, r, e]), "allOf"]),
                      void this.options.dereference.dereferenceOpts?.errors?.push?.(
                        t
                      )
                    );
                  }
                  if (e.allOf.isEmpty)
                    return new Ev(
                      e.content.filter((e) => "allOf" !== Yc(e.key)),
                      Ac(e.meta),
                      Ac(e.attributes)
                    );
                  if (!e.allOf.content.every(Ab)) {
                    const t = new TypeError(
                      "Elements in allOf must be objects"
                    );
                    return (
                      (t.fullPath = [...JE([...s, r, e]), "allOf"]),
                      void this.options.dereference.dereferenceOpts?.errors?.push?.(
                        t
                      )
                    );
                  }
                  const i = cj.all([...e.allOf.content, e]);
                  if (
                    (e.hasKey("$$ref") || i.remove("$$ref"),
                    e.hasKey("example"))
                  ) {
                    i.getMember("example").value = e.get("example");
                  }
                  if (e.hasKey("examples")) {
                    i.getMember("examples").value = e.get("examples");
                  }
                  return i.remove("allOf"), i;
                },
              },
            },
          }),
          uj = Fc[Symbol.for("nodejs.util.promisify.custom")],
          pj = HE.compose({
            props: {
              useCircularStructures: !0,
              allowMetaPatches: !1,
              parameterMacro: null,
              modelPropertyMacro: null,
              mode: "non-strict",
              ancestors: null,
            },
            init({
              useCircularStructures: e = this.useCircularStructures,
              allowMetaPatches: t = this.allowMetaPatches,
              parameterMacro: r = this.parameterMacro,
              modelPropertyMacro: n = this.modelPropertyMacro,
              mode: s = this.mode,
              ancestors: i = [],
            } = {}) {
              (this.name = "openapi-3-1-swagger-client"),
                (this.useCircularStructures = e),
                (this.allowMetaPatches = t),
                (this.parameterMacro = r),
                (this.modelPropertyMacro = n),
                (this.mode = s),
                (this.ancestors = [...i]);
            },
            methods: {
              async dereference(e, t) {
                const r = [],
                  n = cc(Gx),
                  s = t.dereference.refSet ?? sw();
                let i;
                s.has(e.uri)
                  ? (i = s.find((t) => t.uri === e.uri))
                  : ((i = tw({ uri: e.uri, value: e.parseResult })), s.add(i));
                const o = ej({
                  reference: i,
                  namespace: n,
                  options: t,
                  useCircularStructures: this.useCircularStructures,
                  allowMetaPatches: this.allowMetaPatches,
                  ancestors: this.ancestors,
                });
                if ((r.push(o), "function" == typeof this.parameterMacro)) {
                  const e = rj({
                    parameterMacro: this.parameterMacro,
                    options: t,
                  });
                  r.push(e);
                }
                if ("function" == typeof this.modelPropertyMacro) {
                  const e = nj({
                    modelPropertyMacro: this.modelPropertyMacro,
                    options: t,
                  });
                  r.push(e);
                }
                if ("strict" !== this.mode) {
                  const e = lj({ options: t });
                  r.push(e);
                }
                const a = Ec(r, { nodeTypeGetter: Hx }),
                  c = await uj(s.rootRef.value, a, {
                    keyMap: Jx,
                    nodeTypeGetter: Hx,
                  });
                return null === t.dereference.refSet && s.clean(), c;
              },
            },
          }),
          hj = pj,
          fj = async (e) => {
            const {
              spec: t,
              timeout: r,
              redirects: n,
              requestInterceptor: s,
              responseInterceptor: i,
              pathDiscriminator: o = [],
              allowMetaPatches: a = !1,
              useCircularStructures: c = !1,
              skipNormalization: l = !1,
              parameterMacro: u = null,
              modelPropertyMacro: p = null,
              mode: f = "non-strict",
            } = e;
            try {
              const { cache: m } = fj,
                d = Ji(Yi()) ? Yi() : h,
                y = Nr(e),
                g = Xi(d, y);
              let v;
              m.has(t)
                ? (v = m.get(t))
                : ((v = pv.refract(t)), v.classes.push("result"), m.set(t, v));
              const b = new ia([v]),
                x = el(o),
                w = "" === x ? "" : `#${x}`,
                E = Ol(x, v),
                j = tw({ uri: g, value: b }),
                O = sw({ refs: [j] });
              "" !== x && (O.rootRef = null);
              const S = [new Set([E])],
                P = [],
                A = ((e, t, r) => new Uc({ element: r }).transclude(e, t))(
                  E,
                  await ww(E, {
                    resolve: {
                      baseURI: `${g}${w}`,
                      resolvers: [
                        AE({ timeout: r || 1e4, redirects: n || 10 }),
                      ],
                      resolverOpts: {
                        swaggerHTTPClientConfig: {
                          requestInterceptor: s,
                          responseInterceptor: i,
                        },
                      },
                      strategies: [nE()],
                    },
                    parse: {
                      mediaType: ew.latest(),
                      parsers: [
                        IE({ allowEmpty: !1, sourceMap: !1 }),
                        TE({ allowEmpty: !1, sourceMap: !1 }),
                        _E({ allowEmpty: !1, sourceMap: !1 }),
                        kE({ allowEmpty: !1, sourceMap: !1 }),
                        Pw({ allowEmpty: !1, sourceMap: !1 }),
                      ],
                    },
                    dereference: {
                      maxDepth: 100,
                      strategies: [
                        hj({
                          allowMetaPatches: a,
                          useCircularStructures: c,
                          parameterMacro: u,
                          modelPropertyMacro: p,
                          mode: f,
                          ancestors: S,
                        }),
                      ],
                      refSet: O,
                      dereferenceOpts: { errors: P },
                    },
                  }),
                  v
                ),
                $ = l ? A : EE(A);
              return { spec: Yc($), errors: P };
            } catch (e) {
              if (e instanceof xl || e instanceof jl)
                return { spec: null, errors: [] };
              throw e;
            }
          };
        fj.cache = new WeakMap();
        const mj = fj,
          dj = {
            name: "openapi-3-1-apidom",
            match: ({ spec: e }) => Jo(e),
            normalize: ({ spec: e }) => wE(EE)(e),
            resolve: async (e) => mj(e),
          };
        function yj(e, t, r) {
          if (
            !e ||
            "object" != typeof e ||
            !e.paths ||
            "object" != typeof e.paths
          )
            return null;
          const { paths: n } = e;
          for (const s in n)
            for (const i in n[s]) {
              if ("PARAMETERS" === i.toUpperCase()) continue;
              const o = n[s][i];
              if (!o || "object" != typeof o) continue;
              const a = {
                  spec: e,
                  pathName: s,
                  method: i.toUpperCase(),
                  operation: o,
                },
                c = t(a);
              if (r && c) return a;
            }
        }
        const gj = () => null,
          vj = {
            mapTagOperations: function ({
              spec: e,
              cb: t = gj,
              defaultTag: r = "default",
              v2OperationIdCompatibilityMode: n,
            }) {
              const s = {},
                i = {};
              return (
                yj(e, ({ pathName: o, method: a, operation: c }) => {
                  var l;
                  (c.tags
                    ? ((l = c.tags), Array.isArray(l) ? l : [l])
                    : [r]
                  ).forEach((r) => {
                    if ("string" != typeof r) return;
                    i[r] = i[r] || {};
                    const l = i[r],
                      u = Lo(c, o, a, { v2OperationIdCompatibilityMode: n }),
                      p = t({
                        spec: e,
                        pathName: o,
                        method: a,
                        operation: c,
                        operationId: u,
                      });
                    if (s[u]) (s[u] += 1), (l[`${u}${s[u]}`] = p);
                    else if (void 0 !== l[u]) {
                      const e = s[u] || 1;
                      (s[u] = e + 1), (l[`${u}${s[u]}`] = p);
                      const t = l[u];
                      delete l[u], (l[`${u}${e}`] = t);
                    } else l[u] = p;
                  });
                }),
                i
              );
            },
            makeExecute: function (e = {}) {
              return ({ pathName: t, method: r, operationId: n }) =>
                (s, i = {}) => {
                  const {
                    requestInterceptor: o,
                    responseInterceptor: a,
                    userFetch: c,
                  } = e;
                  return e.execute({
                    spec: e.spec,
                    requestInterceptor: o,
                    responseInterceptor: a,
                    userFetch: c,
                    pathName: t,
                    method: r,
                    parameters: s,
                    operationId: n,
                    ...i,
                  });
                };
            },
          };
        var bj = r(7427);
        function xj(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
        function wj(e) {
          var t, r;
          return (
            !1 !== xj(e) &&
            (void 0 === (t = e.constructor) ||
              (!1 !== xj((r = t.prototype)) &&
                !1 !== r.hasOwnProperty("isPrototypeOf")))
          );
        }
        const Ej = {
          body: function ({ req: e, value: t }) {
            e.body = t;
          },
          header: function ({ req: e, parameter: t, value: r }) {
            (e.headers = e.headers || {}),
              void 0 !== r && (e.headers[t.name] = r);
          },
          query: function ({ req: e, value: t, parameter: r }) {
            (e.query = e.query || {}),
              !1 === t && "boolean" === r.type && (t = "false");
            0 === t && ["number", "integer"].indexOf(r.type) > -1 && (t = "0");
            if (t)
              e.query[r.name] = {
                collectionFormat: r.collectionFormat,
                value: t,
              };
            else if (r.allowEmptyValue && void 0 !== t) {
              const t = r.name;
              (e.query[t] = e.query[t] || {}),
                (e.query[t].allowEmptyValue = !0);
            }
          },
          path: function ({ req: e, value: t, parameter: r }) {
            e.url = e.url.split(`{${r.name}}`).join(encodeURIComponent(t));
          },
          formData: function ({ req: e, value: t, parameter: r }) {
            (t || r.allowEmptyValue) &&
              ((e.form = e.form || {}),
              (e.form[r.name] = {
                value: t,
                allowEmptyValue: r.allowEmptyValue,
                collectionFormat: r.collectionFormat,
              }));
          },
        };
        function jj(e, t) {
          return t.includes("application/json")
            ? "string" == typeof e
              ? e
              : JSON.stringify(e)
            : e.toString();
        }
        function Oj({ req: e, value: t, parameter: r }) {
          const { name: n, style: s, explode: i, content: o } = r;
          if (o) {
            const r = Object.keys(o)[0];
            return void (e.url = e.url
              .split(`{${n}}`)
              .join(wr(jj(t, r), { escape: !0 })));
          }
          const a = Er({
            key: r.name,
            value: t,
            style: s || "simple",
            explode: i || !1,
            escape: !0,
          });
          e.url = e.url.split(`{${n}}`).join(a);
        }
        function Sj({ req: e, value: t, parameter: r }) {
          if (((e.query = e.query || {}), r.content)) {
            const n = jj(t, Object.keys(r.content)[0]);
            if (n) e.query[r.name] = n;
            else if (r.allowEmptyValue && void 0 !== t) {
              const t = r.name;
              (e.query[t] = e.query[t] || {}),
                (e.query[t].allowEmptyValue = !0);
            }
          } else if ((!1 === t && (t = "false"), 0 === t && (t = "0"), t)) {
            const { style: n, explode: s, allowReserved: i } = r;
            e.query[r.name] = {
              value: t,
              serializationOption: { style: n, explode: s, allowReserved: i },
            };
          } else if (r.allowEmptyValue && void 0 !== t) {
            const t = r.name;
            (e.query[t] = e.query[t] || {}), (e.query[t].allowEmptyValue = !0);
          }
        }
        const Pj = ["accept", "authorization", "content-type"];
        function Aj({ req: e, parameter: t, value: r }) {
          if (
            ((e.headers = e.headers || {}),
            !(Pj.indexOf(t.name.toLowerCase()) > -1))
          )
            if (t.content) {
              const n = Object.keys(t.content)[0];
              e.headers[t.name] = jj(r, n);
            } else
              void 0 === r ||
                (Array.isArray(r) && 0 === r.length) ||
                (e.headers[t.name] = Er({
                  key: t.name,
                  value: r,
                  style: t.style || "simple",
                  explode: void 0 !== t.explode && t.explode,
                  escape: !1,
                }));
        }
        function $j({ req: e, parameter: t, value: r }) {
          e.headers = e.headers || {};
          const n = typeof r;
          if (t.content) {
            const n = Object.keys(t.content)[0];
            e.headers.Cookie = `${t.name}=${jj(r, n)}`;
          } else if (void 0 !== r && (!Array.isArray(r) || 0 !== r.length)) {
            const s =
              "object" === n && !Array.isArray(r) && t.explode
                ? ""
                : `${t.name}=`;
            e.headers.Cookie =
              s +
              Er({
                key: t.name,
                value: r,
                escape: !1,
                style: t.style || "form",
                explode: void 0 !== t.explode && t.explode,
              });
          }
        }
        const _j =
            "undefined" != typeof globalThis
              ? globalThis
              : "undefined" != typeof self
              ? self
              : window,
          { btoa: kj } = _j,
          Ij = kj;
        function Tj(e, t) {
          const {
            operation: r,
            requestBody: n,
            securities: s,
            spec: i,
            attachContentTypeForEmptyPayload: o,
          } = e;
          let { requestContentType: a } = e;
          t = (function ({
            request: e,
            securities: t = {},
            operation: r = {},
            spec: n,
          }) {
            const s = { ...e },
              { authorized: i = {} } = t,
              o = r.security || n.security || [],
              a = i && !!Object.keys(i).length,
              c = n?.components?.securitySchemes || {};
            if (
              ((s.headers = s.headers || {}),
              (s.query = s.query || {}),
              !Object.keys(t).length ||
                !a ||
                !o ||
                (Array.isArray(r.security) && !r.security.length))
            )
              return e;
            return (
              o.forEach((e) => {
                Object.keys(e).forEach((e) => {
                  const t = i[e],
                    r = c[e];
                  if (!t) return;
                  const n = t.value || t,
                    { type: o } = r;
                  if (t)
                    if ("apiKey" === o)
                      "query" === r.in && (s.query[r.name] = n),
                        "header" === r.in && (s.headers[r.name] = n),
                        "cookie" === r.in && (s.cookies[r.name] = n);
                    else if ("http" === o) {
                      if (/^basic$/i.test(r.scheme)) {
                        const e = n.username || "",
                          t = n.password || "",
                          r = Ij(`${e}:${t}`);
                        s.headers.Authorization = `Basic ${r}`;
                      }
                      /^bearer$/i.test(r.scheme) &&
                        (s.headers.Authorization = `Bearer ${n}`);
                    } else if ("oauth2" === o || "openIdConnect" === o) {
                      const e = t.token || {},
                        n = e[r["x-tokenName"] || "access_token"];
                      let i = e.token_type;
                      (i && "bearer" !== i.toLowerCase()) || (i = "Bearer"),
                        (s.headers.Authorization = `${i} ${n}`);
                    }
                });
              }),
              s
            );
          })({ request: t, securities: s, operation: r, spec: i });
          const c = r.requestBody || {},
            l = Object.keys(c.content || {}),
            u = a && l.indexOf(a) > -1;
          if (n || o) {
            if (a && u) t.headers["Content-Type"] = a;
            else if (!a) {
              const e = l[0];
              e && ((t.headers["Content-Type"] = e), (a = e));
            }
          } else a && u && (t.headers["Content-Type"] = a);
          if (!e.responseContentType && r.responses) {
            const e = Object.entries(r.responses)
              .filter(([e, t]) => {
                const r = parseInt(e, 10);
                return r >= 200 && r < 300 && wj(t.content);
              })
              .reduce((e, [, t]) => e.concat(Object.keys(t.content)), []);
            e.length > 0 && (t.headers.accept = e.join(", "));
          }
          if (n)
            if (a) {
              if (l.indexOf(a) > -1)
                if (
                  "application/x-www-form-urlencoded" === a ||
                  "multipart/form-data" === a
                )
                  if ("object" == typeof n) {
                    const e = c.content[a]?.encoding ?? {};
                    (t.form = {}),
                      Object.keys(n).forEach((r) => {
                        t.form[r] = { value: n[r], encoding: e[r] || {} };
                      });
                  } else t.form = n;
                else t.body = n;
            } else t.body = n;
          return t;
        }
        function Cj(e, t) {
          const {
            spec: r,
            operation: n,
            securities: s,
            requestContentType: i,
            responseContentType: o,
            attachContentTypeForEmptyPayload: a,
          } = e;
          if (
            ((t = (function ({
              request: e,
              securities: t = {},
              operation: r = {},
              spec: n,
            }) {
              const s = { ...e },
                { authorized: i = {}, specSecurity: o = [] } = t,
                a = r.security || o,
                c = i && !!Object.keys(i).length,
                l = n.securityDefinitions;
              if (
                ((s.headers = s.headers || {}),
                (s.query = s.query || {}),
                !Object.keys(t).length ||
                  !c ||
                  !a ||
                  (Array.isArray(r.security) && !r.security.length))
              )
                return e;
              return (
                a.forEach((e) => {
                  Object.keys(e).forEach((e) => {
                    const t = i[e];
                    if (!t) return;
                    const { token: r } = t,
                      n = t.value || t,
                      o = l[e],
                      { type: a } = o,
                      c = o["x-tokenName"] || "access_token",
                      u = r && r[c];
                    let p = r && r.token_type;
                    if (t)
                      if ("apiKey" === a) {
                        const e = "query" === o.in ? "query" : "headers";
                        (s[e] = s[e] || {}), (s[e][o.name] = n);
                      } else if ("basic" === a)
                        if (n.header) s.headers.authorization = n.header;
                        else {
                          const e = n.username || "",
                            t = n.password || "";
                          (n.base64 = Ij(`${e}:${t}`)),
                            (s.headers.authorization = `Basic ${n.base64}`);
                        }
                      else
                        "oauth2" === a &&
                          u &&
                          ((p =
                            p && "bearer" !== p.toLowerCase() ? p : "Bearer"),
                          (s.headers.authorization = `${p} ${u}`));
                  });
                }),
                s
              );
            })({ request: t, securities: s, operation: n, spec: r })),
            t.body || t.form || a)
          )
            i
              ? (t.headers["Content-Type"] = i)
              : Array.isArray(n.consumes)
              ? ([t.headers["Content-Type"]] = n.consumes)
              : Array.isArray(r.consumes)
              ? ([t.headers["Content-Type"]] = r.consumes)
              : n.parameters &&
                n.parameters.filter((e) => "file" === e.type).length
              ? (t.headers["Content-Type"] = "multipart/form-data")
              : n.parameters &&
                n.parameters.filter((e) => "formData" === e.in).length &&
                (t.headers["Content-Type"] =
                  "application/x-www-form-urlencoded");
          else if (i) {
            const e =
                n.parameters &&
                n.parameters.filter((e) => "body" === e.in).length > 0,
              r =
                n.parameters &&
                n.parameters.filter((e) => "formData" === e.in).length > 0;
            (e || r) && (t.headers["Content-Type"] = i);
          }
          return (
            !o &&
              Array.isArray(n.produces) &&
              n.produces.length > 0 &&
              (t.headers.accept = n.produces.join(", ")),
            t
          );
        }
        function Mj(e, t) {
          return `${t.toLowerCase()}-${e}`;
        }
        function Rj(e, t) {
          return e && e.paths
            ? (function (e, t) {
                return yj(e, t, !0) || null;
              })(e, ({ pathName: e, method: r, operation: n }) => {
                if (!n || "object" != typeof n) return !1;
                const s = n.operationId;
                return [Lo(n, e, r), Mj(e, r), s].some((e) => e && e === t);
              })
            : null;
        }
        const Fj = (e) => (Array.isArray(e) ? e : []),
          Dj = (e) => {
            try {
              return new URL(e);
            } catch {
              const t = new URL(e, h),
                r = String(e).startsWith("/")
                  ? t.pathname
                  : t.pathname.substring(1);
              return {
                hash: t.hash,
                host: "",
                hostname: "",
                href: "",
                origin: "",
                password: "",
                pathname: r,
                port: "",
                protocol: "",
                search: t.search,
                searchParams: t.searchParams,
              };
            }
          },
          Nj = eo("OperationNotFoundError", function (e, t, r) {
            (this.originalError = r), Object.assign(this, t || {});
          }),
          qj = { buildRequest: Lj };
        function Lj(e) {
          const {
            spec: t,
            operationId: r,
            responseContentType: n,
            scheme: s,
            requestInterceptor: i,
            responseInterceptor: o,
            contextUrl: a,
            userFetch: c,
            server: l,
            serverVariables: p,
            http: h,
            signal: f,
          } = e;
          let { parameters: m, parameterBuilders: d } = e;
          const y = Go(t);
          d || (d = y ? u : Ej);
          let g = {
            url: "",
            credentials: h && h.withCredentials ? "include" : "same-origin",
            headers: {},
            cookies: {},
          };
          f && (g.signal = f),
            i && (g.requestInterceptor = i),
            o && (g.responseInterceptor = o),
            c && (g.userFetch = c);
          const v = Rj(t, r);
          if (!v) throw new Nj(`Operation ${r} not found`);
          const { operation: b = {}, method: x, pathName: w } = v;
          if (
            ((g.url += Uj({
              spec: t,
              scheme: s,
              contextUrl: a,
              server: l,
              serverVariables: p,
              pathName: w,
              method: x,
            })),
            !r)
          )
            return delete g.cookies, g;
          (g.url += w), (g.method = `${x}`.toUpperCase()), (m = m || {});
          const E = t.paths[w] || {};
          n && (g.headers.accept = n);
          const j = ((e) => {
            const t = {};
            e.forEach((e) => {
              t[e.in] || (t[e.in] = {}), (t[e.in][e.name] = e);
            });
            const r = [];
            return (
              Object.keys(t).forEach((e) => {
                Object.keys(t[e]).forEach((n) => {
                  r.push(t[e][n]);
                });
              }),
              r
            );
          })([].concat(Fj(b.parameters)).concat(Fj(E.parameters)));
          j.forEach((e) => {
            const r = d[e.in];
            let n;
            if (
              ("body" === e.in && e.schema && e.schema.properties && (n = m),
              (n = e && e.name && m[e.name]),
              void 0 === n
                ? (n = e && e.name && m[`${e.in}.${e.name}`])
                : ((e, t) => t.filter((t) => t.name === e))(e.name, j).length >
                    1 &&
                  console.warn(
                    `Parameter '${e.name}' is ambiguous because the defined spec has more than one parameter with the name: '${e.name}' and the passed-in parameter values did not define an 'in' value.`
                  ),
              null !== n)
            ) {
              if (
                (void 0 !== e.default && void 0 === n && (n = e.default),
                void 0 === n && e.required && !e.allowEmptyValue)
              )
                throw new Error(`Required parameter ${e.name} is not provided`);
              if (
                y &&
                e.schema &&
                "object" === e.schema.type &&
                "string" == typeof n
              )
                try {
                  n = JSON.parse(n);
                } catch (e) {
                  throw new Error(
                    "Could not parse object parameter value string as JSON"
                  );
                }
              r && r({ req: g, parameter: e, value: n, operation: b, spec: t });
            }
          });
          const O = { ...e, operation: b };
          if (
            ((g = y ? Tj(O, g) : Cj(O, g)),
            g.cookies && Object.keys(g.cookies).length)
          ) {
            const e = Object.keys(g.cookies).reduce((e, t) => {
              const r = g.cookies[t];
              return e + (e ? "&" : "") + bj.serialize(t, r);
            }, "");
            g.headers.Cookie = e;
          }
          return g.cookies && delete g.cookies, Fr(g), g;
        }
        const Bj = (e) => (e ? e.replace(/\W/g, "") : null);
        function Uj(e) {
          return Go(e.spec)
            ? (function ({
                spec: e,
                pathName: t,
                method: r,
                server: n,
                contextUrl: s,
                serverVariables: i = {},
              }) {
                let o,
                  a = [],
                  c = "";
                const l = e?.paths?.[t]?.[(r || "").toLowerCase()]?.servers,
                  u = e?.paths?.[t]?.servers,
                  p = e?.servers;
                (a = Vj(l) ? l : Vj(u) ? u : Vj(p) ? p : [f]),
                  n && ((o = a.find((e) => e.url === n)), o && (c = n));
                c || (([o] = a), (c = o.url));
                if (c.includes("{")) {
                  const e = (function (e) {
                    const t = [],
                      r = /{([^}]+)}/g;
                    let n;
                    for (; (n = r.exec(e)); ) t.push(n[1]);
                    return t;
                  })(c);
                  e.forEach((e) => {
                    if (o.variables && o.variables[e]) {
                      const t = o.variables[e],
                        r = i[e] || t.default,
                        n = new RegExp(`{${e}}`, "g");
                      c = c.replace(n, r);
                    }
                  });
                }
                return (function (e = "", t = "") {
                  const r = Dj(e && t ? Xi(t, e) : e),
                    n = Dj(t),
                    s = Bj(r.protocol) || Bj(n.protocol),
                    i = r.host || n.host,
                    o = r.pathname;
                  let a;
                  a = s && i ? `${s}://${i + o}` : o;
                  return "/" === a[a.length - 1] ? a.slice(0, -1) : a;
                })(c, s);
              })(e)
            : (function ({ spec: e, scheme: t, contextUrl: r = "" }) {
                const n = Dj(r),
                  s = Array.isArray(e.schemes) ? e.schemes[0] : null,
                  i = t || s || Bj(n.protocol) || "http",
                  o = e.host || n.host || "",
                  a = e.basePath || "";
                let c;
                c = i && o ? `${i}://${o + a}` : a;
                return "/" === c[c.length - 1] ? c.slice(0, -1) : c;
              })(e);
        }
        const Vj = (e) => Array.isArray(e) && e.length > 0;
        const { isHttpUrl: zj } = s,
          Hj = zj;
        function Jj(e, t = {}) {
          if (
            ("string" == typeof e ? (t.url = e) : (t = e),
            !(this instanceof Jj))
          )
            return new Jj(t);
          Object.assign(this, t);
          const r = this.resolve().then(
            () => (
              this.disableInterfaces ||
                Object.assign(this, Jj.makeApisTagOperation(this)),
              this
            )
          );
          return (r.client = this), r;
        }
        (Jj.http = Or),
          (Jj.makeHttp = function (e, t, r) {
            return (
              (r = r || ((e) => e)),
              (t = t || ((e) => e)),
              (n) => (
                "string" == typeof n && (n = { url: n }),
                jr.mergeInQueryOrForm(n),
                (n = t(n)),
                r(e(n))
              )
            );
          }.bind(null, Jj.http)),
          (Jj.resolveStrategies = {
            "openapi-3-1-apidom": dj,
            "openapi-3-0": Ko,
            "openapi-2-0": Wo,
            generic: Vo,
          }),
          (Jj.resolve = Yo({
            strategies: [
              Jj.resolveStrategies["openapi-3-1-apidom"],
              Jj.resolveStrategies["openapi-3-0"],
              Jj.resolveStrategies["openapi-2-0"],
              Jj.resolveStrategies.generic,
            ],
          })),
          (Jj.resolveSubtree = Qo({
            strategies: [
              Jj.resolveStrategies["openapi-3-1-apidom"],
              Jj.resolveStrategies["openapi-3-0"],
              Jj.resolveStrategies["openapi-2-0"],
              Jj.resolveStrategies.generic,
            ],
          })),
          (Jj.execute = function ({
            http: e,
            fetch: t,
            spec: r,
            operationId: n,
            pathName: s,
            method: i,
            parameters: o,
            securities: a,
            ...c
          }) {
            const l = e || t || Or;
            s && i && !n && (n = Mj(s, i));
            const u = qj.buildRequest({
              spec: r,
              operationId: n,
              parameters: o,
              securities: a,
              http: l,
              ...c,
            });
            return (
              u.body &&
                (wj(u.body) || Array.isArray(u.body)) &&
                (u.body = JSON.stringify(u.body)),
              l(u)
            );
          }),
          (Jj.serializeRes = Pr),
          (Jj.serializeHeaders = Ar),
          (Jj.clearCache = function () {
            No.refs.clearCache();
          }),
          (Jj.makeApisTagOperation = function (e = {}) {
            const t = vj.makeExecute(e);
            return {
              apis: vj.mapTagOperations({
                v2OperationIdCompatibilityMode:
                  e.v2OperationIdCompatibilityMode,
                spec: e.spec,
                cb: t,
              }),
            };
          }),
          (Jj.buildRequest = Lj),
          (Jj.helpers = { opId: Lo }),
          (Jj.getBaseUrl = Uj),
          (Jj.apidom = {
            resolve: { resolvers: { HttpResolverSwaggerClient: AE } },
            parse: {
              parsers: {
                JsonParser: _E,
                YamlParser: kE,
                OpenApiJson3_1Parser: IE,
                OpenApiYaml3_1Parser: TE,
              },
            },
            dereference: {
              strategies: { OpenApi3_1SwaggerClientDereferenceStrategy: hj },
            },
          }),
          (Jj.prototype = {
            http: Or,
            execute(e) {
              return (
                this.applyDefaults(),
                Jj.execute({
                  spec: this.spec,
                  http: this.http,
                  securities: { authorized: this.authorizations },
                  contextUrl: "string" == typeof this.url ? this.url : void 0,
                  requestInterceptor: this.requestInterceptor || null,
                  responseInterceptor: this.responseInterceptor || null,
                  ...e,
                })
              );
            },
            resolve(e = {}) {
              return Jj.resolve({
                spec: this.spec,
                url: this.url,
                http: this.http || this.fetch,
                allowMetaPatches: this.allowMetaPatches,
                useCircularStructures: this.useCircularStructures,
                requestInterceptor: this.requestInterceptor || null,
                responseInterceptor: this.responseInterceptor || null,
                skipNormalization: this.skipNormalization || !1,
                ...e,
              }).then(
                (e) => (
                  (this.originalSpec = this.spec),
                  (this.spec = e.spec),
                  (this.errors = e.errors),
                  this
                )
              );
            },
          }),
          (Jj.prototype.applyDefaults = function () {
            const { spec: e } = this,
              t = this.url;
            if (zo(e) && Hj(t)) {
              const r = new URL(t);
              e.host || (e.host = r.host),
                e.schemes || (e.schemes = [r.protocol.replace(":", "")]),
                e.basePath || (e.basePath = "/");
            } else if (Go(e)) {
              const t = Array.isArray(e.servers) && 0 === e.servers.length;
              (e.servers && !t) || (e.servers = [f]);
            }
          });
        const { helpers: Gj } = Jj,
          Wj = Jj;
      })(),
      (n = n.default)
    );
  })()
);
//# sourceMappingURL=swagger-client.browser.min.js.map
